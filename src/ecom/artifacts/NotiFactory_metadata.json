{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "dappOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "permissionManager",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "notiStorage",
						"type": "address"
					}
				],
				"name": "DappRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "scheduledApps",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "DeleteNotificationScheduledApps",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "scheduledTimes",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "DeleteNotificationScheduledTimes",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "apps",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "scheduledTimes",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "NotificationScheduled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "dapp",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "permissionManager",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "publicKey",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "encryptedDeviceToken",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "enum PlatformEnum",
						"name": "platform",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "createdAt",
						"type": "uint256"
					}
				],
				"name": "UserSubscribed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "dapp",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum PlatformEnum",
						"name": "platform",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "createdAt",
						"type": "uint256"
					}
				],
				"name": "UserUnsubscribed",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dappInfoList",
				"outputs": [
					{
						"internalType": "address",
						"name": "dapp",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "nameDapp",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dappList",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "dappToContracts",
				"outputs": [
					{
						"internalType": "address",
						"name": "permissionManager",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "notiStorage",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "toArr",
						"type": "address[]"
					},
					{
						"internalType": "uint8",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "deleteScheduleNotiApps",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "scheduledTimes",
						"type": "uint256[]"
					},
					{
						"internalType": "uint8",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "deleteScheduleNotiTimes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllDappInfos",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "dapp",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "nameDapp",
								"type": "string"
							}
						],
						"internalType": "struct NotiFactory.DappInfo[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllDapps",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dappOwner",
						"type": "address"
					}
				],
				"name": "getDappContracts",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "getScheduledNotiApps",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "getScheduledNotiTimes",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "toArr",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "scheduledTimes",
						"type": "uint256[]"
					},
					{
						"internalType": "uint8",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "insertScheduleNoti",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "notiHub",
				"outputs": [
					{
						"internalType": "contract NotiHub",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "service",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "nameDapp",
						"type": "string"
					}
				],
				"name": "registerDapp",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_notiHub",
						"type": "address"
					}
				],
				"name": "setNotiHub",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dappOwner",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "publicKey",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "encryptedDeviceToken",
						"type": "bytes"
					},
					{
						"internalType": "enum PlatformEnum",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "subscribeUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dappOwner",
						"type": "address"
					},
					{
						"internalType": "enum PlatformEnum",
						"name": "platform",
						"type": "uint8"
					}
				],
				"name": "unSubscribeUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "service",
						"type": "address"
					}
				],
				"name": "unregisterDapp",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"events": {
				"UserSubscribed(address,address,address,bytes,bytes,uint8,uint256)": {
					"params": {
						"dapp": "Địa chỉ Dapp",
						"encryptedDeviceToken": "Token của device đã mã hóa",
						"permissionManager": "Địa chỉ contract PermissionManager của Dapp",
						"publicKey": "Public key ngẫu nhiên của user dùng để mã hóa ECDH",
						"user": "Địa chỉ user đăng ký"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"getAllDapps()": {
					"returns": {
						"_0": "address[] Danh sách Dapp"
					}
				},
				"getDappContracts(address)": {
					"params": {
						"dappOwner": "Địa chỉ Dapp"
					},
					"returns": {
						"_0": "(address, address) Địa chỉ PermissionManager & NotiStorage"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"registerDapp(address,string)": {
					"details": "Chỉ cần gọi 1 lần duy nhất, sẽ triển khai PermissionManager & NotiStorage"
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"subscribeUser(address,bytes,bytes,uint8)": {
					"details": "Gửi kèm token của device (đã mã hóa bằng ECDH) + public key của user",
					"params": {
						"dappOwner": "Địa chỉ của Dapp cần đăng ký",
						"encryptedDeviceToken": "Token của device đã mã hóa",
						"publicKey": "Public key ngẫu nhiên của user để backend dùng ECDH giải mã"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"UserSubscribed(address,address,address,bytes,bytes,uint8,uint256)": {
					"notice": "Sự kiện phát ra khi user đăng ký nhận thông báo từ Dapp"
				}
			},
			"kind": "user",
			"methods": {
				"getAllDapps()": {
					"notice": "Lấy danh sách tất cả Dapp đã đăng ký hệ thống thông báo"
				},
				"getDappContracts(address)": {
					"notice": "Lấy địa chỉ của PermissionManager & NotiStorage của một Dapp"
				},
				"registerDapp(address,string)": {
					"notice": "Đăng ký Dapp với hệ thống thông báo"
				},
				"subscribeUser(address,bytes,bytes,uint8)": {
					"notice": "Người dùng đăng ký nhận thông báo từ một Dapp"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/ecom/noti.sol": "NotiFactory"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"src/ecom/interfaces/INoti.sol": {
			"keccak256": "0xa6505cee677b0424bfe3844bcb2c8bd67020dbe43f17542e2206788c7a64da82",
			"license": "SEE LICENSE IN LICENSE",
			"urls": [
				"bzz-raw://a4850da47cb80406643554926286dae8d788c1cb9bf29b7cc17f1e608c28653b",
				"dweb:/ipfs/QmZYtoA21mPpd6dMQqA1BCZm7cyFZm6abptjEH3ZHcSBDh"
			]
		},
		"src/ecom/noti.sol": {
			"keccak256": "0x1244358c3313a9d1886730ad1b91392155c8cf02d1e314f24b3d8d31884e58c2",
			"license": "MIT",
			"urls": [
				"bzz-raw://8c9bb49d1f0dac31182ec293b244a6f0ec7d5adb0362790e05cbedfb2f563d6f",
				"dweb:/ipfs/QmSKfyeSUw6HHaEgbm9jaxfbdTehnrKmTPsjw2AF529gmr"
			]
		}
	},
	"version": 1
}