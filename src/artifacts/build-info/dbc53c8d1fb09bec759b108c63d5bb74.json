{
	"id": "dbc53c8d1fb09bec759b108c63d5bb74",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/usdt.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n// Import OpenZeppelin contracts\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\nerror NotController(address _address);\n\ncontract USDT is ERC20Pausable, AccessControl {\n    // Roles\n    bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    // Mappings\n    mapping(address => bool) public isBlackListed;\n\n    // Global Variables\n    uint256 private _totalSupply;\n    uint256 public totalMint;\n    address public receiverAddress;\n\n    // Events\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\n    event AddedBlackList(address _user);\n    event RemovedBlackList(address _user);\n    event MintByController(\n        address _controller,\n        address _recipient,\n        uint _amount,\n        uint256 _totalMint\n    );\n\n    // Constructor\n    constructor() ERC20(\"Meta Dollar Reward\", \"USDMR\") {\n        // Grant roles to the deployer\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(CONTROLLER_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n\n        // Mint initial supply to the deployer\n        _mint(msg.sender, 1000000000 * 10 ** decimals());\n    }\n\n    // Modifiers\n    modifier onlyController() {\n        require(hasRole(CONTROLLER_ROLE, msg.sender), \"Caller is not a controller\");\n        _;\n    }\n\n    modifier onlyMinter() {\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\n        _;\n    }\n\n    // Functions\n    function setReceiverAddress(address _address) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        receiverAddress = _address;\n    }\n\n    function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _pause();\n    }\n\n    function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _unpause();\n    }\n\n    function transfer(address to, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!isBlackListed[msg.sender], \"Sender is blacklisted\");\n        _transfer(_msgSender(), to, amount);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!isBlackListed[from], \"From address is blacklisted\");\n        bool success = super.transferFrom(from, to, amount);\n        return success;\n    }\n\n    function burnByOwner(address account, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _burn(account, amount);\n    }\n\n    function getBlackListStatus(address _maker) external view returns (bool) {\n        return isBlackListed[_maker];\n    }\n\n    function addBlackList(address _evilUser) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        isBlackListed[_evilUser] = true;\n        emit AddedBlackList(_evilUser);\n    }\n\n    function removeBlackList(address _clearedUser) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        isBlackListed[_clearedUser] = false;\n        emit RemovedBlackList(_clearedUser);\n    }\n\n    function destroyBlackFunds(address _blackListedUser) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(isBlackListed[_blackListedUser], \"Not in blacklist\");\n        uint dirtyFunds = balanceOf(_blackListedUser);\n        _burn(_blackListedUser, dirtyFunds);\n        _totalSupply -= dirtyFunds;\n        emit DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n    }\n\n    function mintToAddress(address recipient, uint256 amount) external onlyMinter returns (bool) {\n        _mint(recipient, amount);\n        return true;\n    }\n\n    function mintByController(address recipient, uint amount) external onlyRole(CONTROLLER_ROLE) returns (bool) {\n        _mint(recipient, amount);\n        totalMint += amount;\n        emit MintByController(msg.sender, recipient, amount, totalMint);\n        return true;\n    }\n\n    function setTotalMint(uint amount) external onlyController returns (bool) {\n        totalMint = amount;\n        return true;\n    }\n\n    event Commit(address user, uint amount, address commitAddress);\n    function commitToMainnet(uint amount) external returns (address commitAddress) {\n        // Placeholder for commit logic\n        emit Commit(msg.sender, amount, commitAddress);\n        return commitAddress;\n    }\n\n    function approveByInterface(address caller, address spender, uint256 amount) external onlyController returns (bool) {\n        _approve(caller, spender, amount);\n        return true;\n    }\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 0
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1207,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1207,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/usdt.sol": {
				"USDT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "commitAddress",
									"type": "address"
								}
							],
							"name": "Commit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_controller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_totalMint",
									"type": "uint256"
								}
							],
							"name": "MintByController",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CONTROLLER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveByInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnByOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "commitToMainnet",
							"outputs": [
								{
									"internalType": "address",
									"name": "commitAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintByController",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintToAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiverAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setReceiverAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setTotalMint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/usdt.sol\":266:4519  contract USDT is ERC20Pausable, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"src/usdt.sol\":1000:1349  constructor() ERC20(\"Meta Dollar Reward\", \"USDMR\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x72, 0x13595d1848111bdb1b185c8814995dd85c99)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd9, 0x2aa9a226a9)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x05\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"src/usdt.sol\":1100:1142  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_11\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"src/usdt.sol\":1131:1141  msg.sender */\n  caller\n    /* \"src/usdt.sol\":1100:1110  _grantRole */\n  tag_12\n    /* \"src/usdt.sol\":1100:1142  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"src/usdt.sol\":1152:1191  _grantRole(CONTROLLER_ROLE, msg.sender) */\n  tag_13\n    /* \"src/usdt.sol\":373:401  keccak256(\"CONTROLLER_ROLE\") */\n  0x7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357\n    /* \"src/usdt.sol\":1180:1190  msg.sender */\n  caller\n    /* \"src/usdt.sol\":1152:1162  _grantRole */\n  tag_12\n    /* \"src/usdt.sol\":1152:1191  _grantRole(CONTROLLER_ROLE, msg.sender) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"src/usdt.sol\":1201:1236  _grantRole(MINTER_ROLE, msg.sender) */\n  tag_14\n    /* \"src/usdt.sol\":445:469  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"src/usdt.sol\":1225:1235  msg.sender */\n  caller\n    /* \"src/usdt.sol\":1201:1211  _grantRole */\n  tag_12\n    /* \"src/usdt.sol\":1201:1236  _grantRole(MINTER_ROLE, msg.sender) */\n  jump\t// in\ntag_14:\n  pop\n    /* \"src/usdt.sol\":1294:1342  _mint(msg.sender, 1000000000 * 10 ** decimals()) */\n  tag_15\n    /* \"src/usdt.sol\":1300:1310  msg.sender */\n  caller\n    /* \"src/usdt.sol\":1325:1341  10 ** decimals() */\n  tag_18\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"src/usdt.sol\":1325:1327  10 */\n  0x0a\n    /* \"src/usdt.sol\":1325:1341  10 ** decimals() */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"src/usdt.sol\":1312:1341  1000000000 * 10 ** decimals() */\n  tag_20\n  swap1\n    /* \"src/usdt.sol\":1312:1322  1000000000 */\n  0x3b9aca00\n    /* \"src/usdt.sol\":1312:1341  1000000000 * 10 ** decimals() */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"src/usdt.sol\":1294:1299  _mint */\n  tag_22\n    /* \"src/usdt.sol\":1294:1342  _mint(msg.sender, 1000000000 * 10 ** decimals()) */\n  jump\t// in\ntag_15:\n    /* \"src/usdt.sol\":266:4519  contract USDT is ERC20Pausable, AccessControl {... */\n  jump(tag_71)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_27\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n  dup4\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_28\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_30)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_27:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4538:4589   */\n  mstore\n    /* \"#utility.yul\":4511:4529   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\ntag_37:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  tag_41\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n  tag_42\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  jump\t// in\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1235:1239  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1241:1243  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1245:1250  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1234  super._update */\n  tag_45\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\ntag_42:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n  and(0xff, sload(0x05))\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n  mload(0x40)\n  shl(0xe0, 0xd93c0665)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_45:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_51\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_52\n  swap2\n  swap1\n  tag_53\n  jump\t// in\ntag_52:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_54\n  swap1\n  pop\n  jump\ntag_51:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4950:4982   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4932:4983   */\n  mstore\n    /* \"#utility.yul\":4999:5017   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4992:5026   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5042:5060   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5035:5069   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4905:4923   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_34\n    /* \"#utility.yul\":4730:5075   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_55:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_54:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_58\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_59)\ntag_58:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_60\n  swap2\n    /* \"#utility.yul\":5226:5251   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5214:5216   */\n  0x20\n    /* \"#utility.yul\":5199:5217   */\n  add\n  swap1\n    /* \"#utility.yul\":5080:5257   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_60:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_63:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_64:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_74:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_75:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_66:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_79\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_79:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_80:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_7:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_86\n  tag_63\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1555:1652   */\n  tag_87\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_88\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_64\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_66\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_91\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_91:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_82)\n    /* \"#utility.yul\":1744:2393   */\ntag_90:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_94:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_97:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2782   */\ntag_68:\n    /* \"#utility.yul\":2716:2726   */\n  0x4e487b71\n    /* \"#utility.yul\":2711:2714   */\n  0xe0\n    /* \"#utility.yul\":2707:2727   */\n  shl\n    /* \"#utility.yul\":2704:2705   */\n  0x00\n    /* \"#utility.yul\":2697:2728   */\n  mstore\n    /* \"#utility.yul\":2747:2751   */\n  0x11\n    /* \"#utility.yul\":2744:2745   */\n  0x04\n    /* \"#utility.yul\":2737:2752   */\n  mstore\n    /* \"#utility.yul\":2771:2775   */\n  0x24\n    /* \"#utility.yul\":2768:2769   */\n  0x00\n    /* \"#utility.yul\":2761:2776   */\n  revert\n    /* \"#utility.yul\":2787:3162   */\ntag_69:\n    /* \"#utility.yul\":2875:2876   */\n  0x01\n    /* \"#utility.yul\":2893:2898   */\n  dup2\n    /* \"#utility.yul\":2907:3156   */\ntag_100:\n    /* \"#utility.yul\":2928:2929   */\n  0x01\n    /* \"#utility.yul\":2918:2926   */\n  dup5\n    /* \"#utility.yul\":2915:2930   */\n  gt\n    /* \"#utility.yul\":2907:3156   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2978:2982   */\n  dup1\n    /* \"#utility.yul\":2973:2976   */\n  dup6\n    /* \"#utility.yul\":2969:2983   */\n  div\n    /* \"#utility.yul\":2963:2967   */\n  dup2\n    /* \"#utility.yul\":2960:2984   */\n  gt\n    /* \"#utility.yul\":2957:3007   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2987:3005   */\n  tag_104\n  tag_68\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3037:3038   */\n  0x01\n    /* \"#utility.yul\":3027:3035   */\n  dup5\n    /* \"#utility.yul\":3023:3039   */\n  and\n    /* \"#utility.yul\":3020:3069   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":3051:3067   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":3020:3069   */\ntag_105:\n    /* \"#utility.yul\":3134:3135   */\n  0x01\n    /* \"#utility.yul\":3130:3146   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":3090:3105   */\n  dup1\n  mul\n    /* \"#utility.yul\":2907:3156   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":2787:3162   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3167:4069   */\ntag_70:\n    /* \"#utility.yul\":3216:3221   */\n  0x00\n    /* \"#utility.yul\":3246:3254   */\n  dup3\n    /* \"#utility.yul\":3236:3316   */\n  tag_107\n  jumpi\n  pop\n    /* \"#utility.yul\":3287:3288   */\n  0x01\n    /* \"#utility.yul\":3301:3306   */\n  jump(tag_30)\n    /* \"#utility.yul\":3236:3316   */\ntag_107:\n    /* \"#utility.yul\":3335:3339   */\n  dup2\n    /* \"#utility.yul\":3325:3401   */\n  tag_108\n  jumpi\n  pop\n    /* \"#utility.yul\":3372:3373   */\n  0x00\n    /* \"#utility.yul\":3386:3391   */\n  jump(tag_30)\n    /* \"#utility.yul\":3325:3401   */\ntag_108:\n    /* \"#utility.yul\":3417:3421   */\n  dup2\n    /* \"#utility.yul\":3435:3436   */\n  0x01\n    /* \"#utility.yul\":3430:3489   */\n  dup2\n  eq\n  tag_110\n  jumpi\n    /* \"#utility.yul\":3503:3504   */\n  0x02\n    /* \"#utility.yul\":3498:3672   */\n  dup2\n  eq\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3410:3672   */\n  jump(tag_109)\n    /* \"#utility.yul\":3430:3489   */\ntag_110:\n    /* \"#utility.yul\":3460:3461   */\n  0x01\n    /* \"#utility.yul\":3451:3461   */\n  swap2\n  pop\n    /* \"#utility.yul\":3474:3479   */\n  pop\n  jump(tag_30)\n    /* \"#utility.yul\":3498:3672   */\ntag_111:\n    /* \"#utility.yul\":3535:3538   */\n  0xff\n    /* \"#utility.yul\":3525:3533   */\n  dup5\n    /* \"#utility.yul\":3522:3539   */\n  gt\n    /* \"#utility.yul\":3519:3562   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3542:3560   */\n  tag_113\n  tag_68\n  jump\t// in\ntag_113:\n  pop\n  pop\n    /* \"#utility.yul\":3598:3599   */\n  0x01\n    /* \"#utility.yul\":3584:3600   */\n  dup3\n  shl\n    /* \"#utility.yul\":3657:3662   */\n  jump(tag_30)\n    /* \"#utility.yul\":3410:3672   */\ntag_109:\n  pop\n    /* \"#utility.yul\":3756:3758   */\n  0x20\n    /* \"#utility.yul\":3746:3754   */\n  dup4\n    /* \"#utility.yul\":3743:3759   */\n  lt\n    /* \"#utility.yul\":3737:3740   */\n  0x0133\n    /* \"#utility.yul\":3731:3735   */\n  dup4\n    /* \"#utility.yul\":3728:3741   */\n  lt\n    /* \"#utility.yul\":3724:3760   */\n  and\n    /* \"#utility.yul\":3718:3720   */\n  0x4e\n    /* \"#utility.yul\":3708:3716   */\n  dup5\n    /* \"#utility.yul\":3705:3721   */\n  lt\n    /* \"#utility.yul\":3700:3702   */\n  0x0b\n    /* \"#utility.yul\":3694:3698   */\n  dup5\n    /* \"#utility.yul\":3691:3703   */\n  lt\n    /* \"#utility.yul\":3687:3722   */\n  and\n    /* \"#utility.yul\":3684:3761   */\n  or\n    /* \"#utility.yul\":3681:3884   */\n  iszero\n  tag_114\n  jumpi\n  pop\n    /* \"#utility.yul\":3793:3812   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3869:3874   */\n  jump(tag_30)\n    /* \"#utility.yul\":3681:3884   */\ntag_114:\n    /* \"#utility.yul\":3916:3958   */\n  tag_115\n  not(0x00)\n    /* \"#utility.yul\":3941:3949   */\n  dup5\n    /* \"#utility.yul\":3935:3939   */\n  dup5\n    /* \"#utility.yul\":3916:3958   */\n  tag_69\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3994:4000   */\n  dup1\n    /* \"#utility.yul\":3990:3991   */\n  0x00\n    /* \"#utility.yul\":3986:3992   */\n  not\n    /* \"#utility.yul\":3982:4001   */\n  div\n    /* \"#utility.yul\":3973:3980   */\n  dup3\n    /* \"#utility.yul\":3970:4002   */\n  gt\n    /* \"#utility.yul\":3967:4025   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":4005:4023   */\n  tag_117\n  tag_68\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4043:4063   */\n  mul\n  swap4\n    /* \"#utility.yul\":3167:4069   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4074:4214   */\ntag_19:\n    /* \"#utility.yul\":4132:4137   */\n  0x00\n    /* \"#utility.yul\":4161:4208   */\n  tag_119\n    /* \"#utility.yul\":4202:4206   */\n  0xff\n    /* \"#utility.yul\":4192:4200   */\n  dup5\n    /* \"#utility.yul\":4188:4207   */\n  and\n    /* \"#utility.yul\":4182:4186   */\n  dup4\n    /* \"#utility.yul\":4161:4208   */\n  tag_70\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4152:4208   */\n  swap4\n    /* \"#utility.yul\":4074:4214   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4219:4387   */\ntag_21:\n    /* \"#utility.yul\":4292:4301   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4323:4332   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4340:4355   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4334:4356   */\n  dup5\n  eq\n    /* \"#utility.yul\":4320:4357   */\n  or\n    /* \"#utility.yul\":4310:4381   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":4361:4379   */\n  tag_30\n  tag_68\n  jump\t// in\n    /* \"#utility.yul\":4600:4725   */\ntag_53:\n    /* \"#utility.yul\":4665:4674   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4686:4696   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4683:4719   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":4699:4717   */\n  tag_30\n  tag_68\n  jump\t// in\n    /* \"#utility.yul\":5080:5257   */\ntag_71:\n    /* \"src/usdt.sol\":266:4519  contract USDT is ERC20Pausable, AccessControl {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/usdt.sol\":266:4519  contract USDT is ERC20Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x092c5b3b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0ecb93c0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x111a18d3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x16fed3e2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x21ca4236\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2cb32743\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x59a7715a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8279c7db\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc68990ad\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd08027a5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xea95c079\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_37\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"src/usdt.sol\":331:401  bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\") */\n    tag_5:\n      tag_48\n      0x00\n      dup1\n      mload\n      0x20\n      data_50e6e89a79e1b3c366a7ce592dcdf63707328bf04106a9bad3d5d09088a9df0a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1066:1091   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1054:1056   */\n      0x20\n        /* \"#utility.yul\":1039:1057   */\n      add\n        /* \"src/usdt.sol\":331:401  bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\") */\n      tag_42\n        /* \"#utility.yul\":920:1097   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_38\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"src/usdt.sol\":2734:2901  function addBlackList(address _evilUser) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_7:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"src/usdt.sol\":2473:2604  function burnByOwner(address account, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_8:\n      tag_57\n      tag_62\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"src/usdt.sol\":632:662  address public receiverAddress */\n    tag_9:\n      sload(0x0a)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_64:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_48)\n        /* \"src/usdt.sol\":3469:3624  function mintToAddress(address recipient, uint256 amount) external onlyMinter returns (bool) {... */\n    tag_11:\n      tag_38\n      tag_73\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"src/usdt.sol\":2196:2467  function transferFrom(address from, address to, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_12:\n      tag_38\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_13:\n      tag_48\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"src/usdt.sol\":4330:4517  function approveByInterface(address caller, address spender, uint256 amount) external onlyController returns (bool) {... */\n    tag_14:\n      tag_38\n      tag_87\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      tag_57\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_16:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":3223:3259   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3211:3213   */\n      0x20\n        /* \"#utility.yul\":3196:3214   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_42\n        /* \"#utility.yul\":3081:3265   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_17:\n      tag_57\n      tag_99\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"src/usdt.sol\":1866:1950  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_18:\n      tag_57\n      tag_102\n      jump\t// in\n        /* \"src/usdt.sol\":602:626  uint256 public totalMint */\n    tag_19:\n      tag_48\n      sload(0x09)\n      dup2\n      jump\n        /* \"src/usdt.sol\":2610:2728  function getBlackListStatus(address _maker) external view returns (bool) {... */\n    tag_20:\n      tag_38\n      tag_107\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/usdt.sol\":2700:2721  isBlackListed[_maker] */\n      and\n        /* \"src/usdt.sol\":2677:2681  bool */\n      0x00\n        /* \"src/usdt.sol\":2700:2721  isBlackListed[_maker] */\n      swap1\n      dup2\n      mstore\n        /* \"src/usdt.sol\":2700:2713  isBlackListed */\n      0x07\n        /* \"src/usdt.sol\":2700:2721  isBlackListed[_maker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"src/usdt.sol\":2610:2728  function getBlackListStatus(address _maker) external view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      jump(tag_38)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_48\n      tag_114\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"src/usdt.sol\":1647:1774  function setReceiverAddress(address _address) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_23:\n      tag_57\n      tag_118\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"src/usdt.sol\":1780:1860  function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_24:\n      tag_57\n      tag_121\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_25:\n      tag_38\n      tag_123\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_26:\n      tag_44\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_27:\n      tag_48\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"src/usdt.sol\":1956:2190  function transfer(address to, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_28:\n      tag_38\n      tag_133\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"src/usdt.sol\":3630:3902  function mintByController(address recipient, uint amount) external onlyRole(CONTROLLER_ROLE) returns (bool) {... */\n    tag_29:\n      tag_38\n      tag_137\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n        /* \"src/usdt.sol\":3908:4038  function setTotalMint(uint amount) external onlyController returns (bool) {... */\n    tag_30:\n      tag_38\n      tag_141\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n        /* \"src/usdt.sol\":407:469  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_31:\n      tag_48\n      0x00\n      dup1\n      mload\n      0x20\n      data_a4145e86017412c2501265325769af64da9f2a5605a5dfc097aad77b02e07414\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_32:\n      tag_57\n      tag_149\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_33:\n      tag_48\n      tag_152\n      calldatasize\n      0x04\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n        /* \"src/usdt.sol\":492:537  mapping(address => bool) public isBlackListed */\n    tag_34:\n      tag_38\n      tag_157\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_157:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/usdt.sol\":2907:3089  function removeBlackList(address _clearedUser) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_35:\n      tag_57\n      tag_161\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"src/usdt.sol\":4112:4324  function commitToMainnet(uint amount) external returns (address commitAddress) {... */\n    tag_36:\n      tag_64\n      tag_164\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"src/usdt.sol\":3095:3463  function destroyBlackFunds(address _blackListedUser) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_37:\n      tag_57\n      tag_168\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_172\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_176\n      jump\t// in\n    tag_177:\n      dup1\n      iszero\n      tag_178\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_179\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_178)\n    tag_179:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_180:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_180\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_184:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/usdt.sol\":2734:2901  function addBlackList(address _evilUser) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/usdt.sol\":2823:2847  isBlackListed[_evilUser] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/usdt.sol\":2823:2836  isBlackListed */\n      0x07\n        /* \"src/usdt.sol\":2823:2847  isBlackListed[_evilUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"src/usdt.sol\":2823:2854  isBlackListed[_evilUser] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"src/usdt.sol\":2850:2854  true */\n      0x01\n        /* \"src/usdt.sol\":2823:2854  isBlackListed[_evilUser] = true */\n      or\n      swap1\n      sstore\n        /* \"src/usdt.sol\":2869:2894  AddedBlackList(_evilUser) */\n      mload\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n      swap1\n      tag_190\n      swap1\n        /* \"src/usdt.sol\":2837:2846  _evilUser */\n      dup5\n      swap1\n        /* \"src/usdt.sol\":2869:2894  AddedBlackList(_evilUser) */\n      tag_67\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/usdt.sol\":2734:2901  function addBlackList(address _evilUser) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/usdt.sol\":2473:2604  function burnByOwner(address account, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_192\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_192:\n        /* \"src/usdt.sol\":2575:2597  _burn(account, amount) */\n      tag_194\n        /* \"src/usdt.sol\":2581:2588  account */\n      dup4\n        /* \"src/usdt.sol\":2590:2596  amount */\n      dup4\n        /* \"src/usdt.sol\":2575:2580  _burn */\n      tag_195\n        /* \"src/usdt.sol\":2575:2597  _burn(account, amount) */\n      jump\t// in\n    tag_194:\n        /* \"src/usdt.sol\":2473:2604  function burnByOwner(address account, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/usdt.sol\":3469:3624  function mintToAddress(address recipient, uint256 amount) external onlyMinter returns (bool) {... */\n    tag_74:\n        /* \"src/usdt.sol\":3556:3560  bool */\n      0x00\n        /* \"src/usdt.sol\":1547:1579  hasRole(MINTER_ROLE, msg.sender) */\n      tag_198\n      0x00\n      dup1\n      mload\n      0x20\n      data_a4145e86017412c2501265325769af64da9f2a5605a5dfc097aad77b02e07414\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/usdt.sol\":1568:1578  msg.sender */\n      caller\n        /* \"src/usdt.sol\":1547:1554  hasRole */\n      tag_124\n        /* \"src/usdt.sol\":1547:1579  hasRole(MINTER_ROLE, msg.sender) */\n      jump\t// in\n    tag_198:\n        /* \"src/usdt.sol\":1539:1606  require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4353:4355   */\n      0x20\n        /* \"src/usdt.sol\":1539:1606  require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4335:4356   */\n      mstore\n        /* \"#utility.yul\":4392:4394   */\n      0x16\n        /* \"#utility.yul\":4372:4390   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4365:4395   */\n      mstore\n      shl(0x51, 0x21b0b63632b91034b9903737ba10309036b4b73a32b9)\n        /* \"#utility.yul\":4411:4429   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4404:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"src/usdt.sol\":1539:1606  require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\") */\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"src/usdt.sol\":3572:3596  _mint(recipient, amount) */\n      tag_203\n        /* \"src/usdt.sol\":3578:3587  recipient */\n      dup4\n        /* \"src/usdt.sol\":3589:3595  amount */\n      dup4\n        /* \"src/usdt.sol\":3572:3577  _mint */\n      tag_204\n        /* \"src/usdt.sol\":3572:3596  _mint(recipient, amount) */\n      jump\t// in\n    tag_203:\n      pop\n        /* \"src/usdt.sol\":3613:3617  true */\n      0x01\n        /* \"src/usdt.sol\":3469:3624  function mintToAddress(address recipient, uint256 amount) external onlyMinter returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/usdt.sol\":2196:2467  function transferFrom(address from, address to, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_79:\n        /* \"src/usdt.sol\":2299:2303  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_206\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_207\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/usdt.sol\":2324:2343  isBlackListed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/usdt.sol\":2324:2337  isBlackListed */\n      0x07\n        /* \"src/usdt.sol\":2324:2343  isBlackListed[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/usdt.sol\":2323:2343  !isBlackListed[from] */\n      iszero\n        /* \"src/usdt.sol\":2315:2375  require(!isBlackListed[from], \"From address is blacklisted\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"src/usdt.sol\":2315:2375  require(!isBlackListed[from], \"From address is blacklisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x1b\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n      shl(0x2a, 0x119c9bdb481859191c995cdcc81a5cc8189b1858dadb1a5cdd1959)\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4812   */\n      mstore\n        /* \"#utility.yul\":4829:4847   */\n      0x64\n      add\n        /* \"src/usdt.sol\":2315:2375  require(!isBlackListed[from], \"From address is blacklisted\") */\n      tag_200\n        /* \"#utility.yul\":4502:4853   */\n      jump\n        /* \"src/usdt.sol\":2315:2375  require(!isBlackListed[from], \"From address is blacklisted\") */\n    tag_209:\n        /* \"src/usdt.sol\":2385:2397  bool success */\n      0x00\n        /* \"src/usdt.sol\":2400:2436  super.transferFrom(from, to, amount) */\n      tag_212\n        /* \"src/usdt.sol\":2419:2423  from */\n      dup6\n        /* \"src/usdt.sol\":2425:2427  to */\n      dup6\n        /* \"src/usdt.sol\":2429:2435  amount */\n      dup6\n        /* \"src/usdt.sol\":2400:2418  super.transferFrom */\n      tag_213\n        /* \"src/usdt.sol\":2400:2436  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_212:\n        /* \"src/usdt.sol\":2385:2436  bool success = super.transferFrom(from, to, amount) */\n      swap6\n        /* \"src/usdt.sol\":2196:2467  function transferFrom(address from, address to, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"src/usdt.sol\":4330:4517  function approveByInterface(address caller, address spender, uint256 amount) external onlyController returns (bool) {... */\n    tag_88:\n        /* \"src/usdt.sol\":4440:4444  bool */\n      0x00\n        /* \"src/usdt.sol\":1416:1452  hasRole(CONTROLLER_ROLE, msg.sender) */\n      tag_216\n      0x00\n      dup1\n      mload\n      0x20\n      data_50e6e89a79e1b3c366a7ce592dcdf63707328bf04106a9bad3d5d09088a9df0a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/usdt.sol\":1441:1451  msg.sender */\n      caller\n        /* \"src/usdt.sol\":1416:1423  hasRole */\n      tag_124\n        /* \"src/usdt.sol\":1416:1452  hasRole(CONTROLLER_ROLE, msg.sender) */\n      jump\t// in\n    tag_216:\n        /* \"src/usdt.sol\":1408:1483  require(hasRole(CONTROLLER_ROLE, msg.sender), \"Caller is not a controller\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_219\n      jump\t// in\n    tag_217:\n        /* \"src/usdt.sol\":4456:4489  _approve(caller, spender, amount) */\n      tag_184\n        /* \"src/usdt.sol\":4465:4471  caller */\n      dup5\n        /* \"src/usdt.sol\":4473:4480  spender */\n      dup5\n        /* \"src/usdt.sol\":4482:4488  amount */\n      dup5\n        /* \"src/usdt.sol\":4456:4464  _approve */\n      tag_185\n        /* \"src/usdt.sol\":4456:4489  _approve(caller, spender, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_224\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_227\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_226:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_233\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n        /* \"src/usdt.sol\":1866:1950  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_235\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_235:\n        /* \"src/usdt.sol\":1933:1943  _unpause() */\n      tag_237\n        /* \"src/usdt.sol\":1933:1941  _unpause */\n      tag_238\n        /* \"src/usdt.sol\":1933:1943  _unpause() */\n      jump\t// in\n    tag_237:\n        /* \"src/usdt.sol\":1866:1950  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"src/usdt.sol\":1647:1774  function setReceiverAddress(address _address) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_243\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_243:\n      pop\n        /* \"src/usdt.sol\":1741:1756  receiverAddress */\n      0x0a\n        /* \"src/usdt.sol\":1741:1767  receiverAddress = _address */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/usdt.sol\":1647:1774  function setReceiverAddress(address _address) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"src/usdt.sol\":1780:1860  function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_246:\n        /* \"src/usdt.sol\":1845:1853  _pause() */\n      tag_237\n        /* \"src/usdt.sol\":1845:1851  _pause */\n      tag_249\n        /* \"src/usdt.sol\":1845:1853  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n        /* \"src/usdt.sol\":1956:2190  function transfer(address to, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_134:\n        /* \"src/usdt.sol\":2041:2045  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_207\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_258:\n        /* \"src/usdt.sol\":2080:2090  msg.sender */\n      caller\n        /* \"src/usdt.sol\":2066:2091  isBlackListed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/usdt.sol\":2066:2079  isBlackListed */\n      0x07\n        /* \"src/usdt.sol\":2066:2091  isBlackListed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/usdt.sol\":2065:2091  !isBlackListed[msg.sender] */\n      iszero\n        /* \"src/usdt.sol\":2057:2117  require(!isBlackListed[msg.sender], \"Sender is blacklisted\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5415:5417   */\n      0x20\n        /* \"src/usdt.sol\":2057:2117  require(!isBlackListed[msg.sender], \"Sender is blacklisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5397:5418   */\n      mstore\n        /* \"#utility.yul\":5454:5456   */\n      0x15\n        /* \"#utility.yul\":5434:5452   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5427:5457   */\n      mstore\n      shl(0x5a, 0x14d95b99195c881a5cc8189b1858dadb1a5cdd1959)\n        /* \"#utility.yul\":5473:5491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5466:5517   */\n      mstore\n        /* \"#utility.yul\":5534:5552   */\n      0x64\n      add\n        /* \"src/usdt.sol\":2057:2117  require(!isBlackListed[msg.sender], \"Sender is blacklisted\") */\n      tag_200\n        /* \"#utility.yul\":5213:5558   */\n      jump\n        /* \"src/usdt.sol\":2057:2117  require(!isBlackListed[msg.sender], \"Sender is blacklisted\") */\n    tag_260:\n        /* \"src/usdt.sol\":2127:2162  _transfer(_msgSender(), to, amount) */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"src/usdt.sol\":2151:2153  to */\n      dup5\n        /* \"src/usdt.sol\":2155:2161  amount */\n      dup5\n        /* \"src/usdt.sol\":2127:2136  _transfer */\n      tag_265\n        /* \"src/usdt.sol\":2127:2162  _transfer(_msgSender(), to, amount) */\n      jump\t// in\n        /* \"src/usdt.sol\":3630:3902  function mintByController(address recipient, uint amount) external onlyRole(CONTROLLER_ROLE) returns (bool) {... */\n    tag_138:\n        /* \"src/usdt.sol\":3732:3736  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_50e6e89a79e1b3c366a7ce592dcdf63707328bf04106a9bad3d5d09088a9df0a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_267:\n        /* \"src/usdt.sol\":3748:3772  _mint(recipient, amount) */\n      tag_269\n        /* \"src/usdt.sol\":3754:3763  recipient */\n      dup5\n        /* \"src/usdt.sol\":3765:3771  amount */\n      dup5\n        /* \"src/usdt.sol\":3748:3753  _mint */\n      tag_204\n        /* \"src/usdt.sol\":3748:3772  _mint(recipient, amount) */\n      jump\t// in\n    tag_269:\n        /* \"src/usdt.sol\":3795:3801  amount */\n      dup3\n        /* \"src/usdt.sol\":3782:3791  totalMint */\n      0x09\n      0x00\n        /* \"src/usdt.sol\":3782:3801  totalMint += amount */\n      dup3\n      dup3\n      sload\n      tag_270\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/usdt.sol\":3864:3873  totalMint */\n      sload(0x09)\n        /* \"src/usdt.sol\":3816:3874  MintByController(msg.sender, recipient, amount, totalMint) */\n      0x40\n      dup1\n      mload\n        /* \"src/usdt.sol\":3833:3843  msg.sender */\n      caller\n        /* \"#utility.yul\":6056:6107   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6143:6175   */\n      dup8\n      and\n        /* \"#utility.yul\":6138:6140   */\n      0x20\n        /* \"#utility.yul\":6123:6141   */\n      dup3\n      add\n        /* \"#utility.yul\":6116:6176   */\n      mstore\n        /* \"#utility.yul\":6192:6210   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6185:6219   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":6250:6252   */\n      0x60\n        /* \"#utility.yul\":6235:6253   */\n      dup2\n      add\n        /* \"#utility.yul\":6228:6262   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"src/usdt.sol\":3816:3874  MintByController(msg.sender, recipient, amount, totalMint) */\n      mload\n      0xe481c7a81eeae9654aef25a7c6b46e617d0d2c00c9215995ac059d482090d727\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6043:6046   */\n      0x80\n        /* \"src/usdt.sol\":3816:3874  MintByController(msg.sender, recipient, amount, totalMint) */\n      add\n      swap1\n      log1\n      pop\n        /* \"src/usdt.sol\":3891:3895  true */\n      0x01\n      swap4\n        /* \"src/usdt.sol\":3630:3902  function mintByController(address recipient, uint amount) external onlyRole(CONTROLLER_ROLE) returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/usdt.sol\":3908:4038  function setTotalMint(uint amount) external onlyController returns (bool) {... */\n    tag_143:\n        /* \"src/usdt.sol\":3976:3980  bool */\n      0x00\n        /* \"src/usdt.sol\":1416:1452  hasRole(CONTROLLER_ROLE, msg.sender) */\n      tag_275\n      0x00\n      dup1\n      mload\n      0x20\n      data_50e6e89a79e1b3c366a7ce592dcdf63707328bf04106a9bad3d5d09088a9df0a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/usdt.sol\":1441:1451  msg.sender */\n      caller\n        /* \"src/usdt.sol\":1416:1423  hasRole */\n      tag_124\n        /* \"src/usdt.sol\":1416:1452  hasRole(CONTROLLER_ROLE, msg.sender) */\n      jump\t// in\n    tag_275:\n        /* \"src/usdt.sol\":1408:1483  require(hasRole(CONTROLLER_ROLE, msg.sender), \"Caller is not a controller\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_219\n      jump\t// in\n    tag_276:\n      pop\n        /* \"src/usdt.sol\":3992:4001  totalMint */\n      0x09\n        /* \"src/usdt.sol\":3992:4010  totalMint = amount */\n      dup2\n      swap1\n      sstore\n        /* \"src/usdt.sol\":4027:4031  true */\n      0x01\n        /* \"src/usdt.sol\":1493:1494  _ */\n    tag_278:\n        /* \"src/usdt.sol\":3908:4038  function setTotalMint(uint amount) external onlyController returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_279\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_281\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_233\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"src/usdt.sol\":2907:3089  function removeBlackList(address _clearedUser) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_286\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/usdt.sol\":3002:3029  isBlackListed[_clearedUser] */\n      dup3\n      and\n        /* \"src/usdt.sol\":3032:3037  false */\n      0x00\n        /* \"src/usdt.sol\":3002:3029  isBlackListed[_clearedUser] */\n      swap1\n      dup2\n      mstore\n        /* \"src/usdt.sol\":3002:3015  isBlackListed */\n      0x07\n        /* \"src/usdt.sol\":3002:3029  isBlackListed[_clearedUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"src/usdt.sol\":3002:3037  isBlackListed[_clearedUser] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"src/usdt.sol\":3052:3082  RemovedBlackList(_clearedUser) */\n      mload\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n      swap1\n      tag_190\n      swap1\n        /* \"src/usdt.sol\":3016:3028  _clearedUser */\n      dup5\n      swap1\n        /* \"src/usdt.sol\":3052:3082  RemovedBlackList(_clearedUser) */\n      tag_67\n      jump\t// in\n        /* \"src/usdt.sol\":4112:4324  function commitToMainnet(uint amount) external returns (address commitAddress) {... */\n    tag_165:\n        /* \"src/usdt.sol\":4246:4287  Commit(msg.sender, amount, commitAddress) */\n      0x40\n      dup1\n      mload\n        /* \"src/usdt.sol\":4253:4263  msg.sender */\n      caller\n        /* \"#utility.yul\":6475:6526   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6557:6559   */\n      0x20\n        /* \"#utility.yul\":6542:6560   */\n      dup2\n      add\n        /* \"#utility.yul\":6535:6569   */\n      dup4\n      swap1\n      mstore\n        /* \"src/usdt.sol\":4168:4189  address commitAddress */\n      0x00\n        /* \"#utility.yul\":6585:6603   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":6578:6638   */\n      dup3\n      swap1\n      mstore\n        /* \"src/usdt.sol\":4246:4287  Commit(msg.sender, amount, commitAddress) */\n      0xb1639a04bdb06ef076a04a28caa4c5163bd5748db621bb0180ca81c56dc07d7a\n      swap1\n        /* \"#utility.yul\":6463:6465   */\n      0x60\n        /* \"#utility.yul\":6448:6466   */\n      add\n        /* \"src/usdt.sol\":4246:4287  Commit(msg.sender, amount, commitAddress) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/usdt.sol\":4112:4324  function commitToMainnet(uint amount) external returns (address commitAddress) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/usdt.sol\":3095:3463  function destroyBlackFunds(address _blackListedUser) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_293\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/usdt.sol\":3204:3235  isBlackListed[_blackListedUser] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/usdt.sol\":3204:3217  isBlackListed */\n      0x07\n        /* \"src/usdt.sol\":3204:3235  isBlackListed[_blackListedUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/usdt.sol\":3196:3256  require(isBlackListed[_blackListedUser], \"Not in blacklist\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6851:6853   */\n      0x20\n        /* \"src/usdt.sol\":3196:3256  require(isBlackListed[_blackListedUser], \"Not in blacklist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6833:6854   */\n      mstore\n        /* \"#utility.yul\":6890:6892   */\n      0x10\n        /* \"#utility.yul\":6870:6888   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6863:6893   */\n      mstore\n      shl(0x82, 0x139bdd081a5b88189b1858dadb1a5cdd)\n        /* \"#utility.yul\":6909:6927   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6902:6948   */\n      mstore\n        /* \"#utility.yul\":6965:6983   */\n      0x64\n      add\n        /* \"src/usdt.sol\":3196:3256  require(isBlackListed[_blackListedUser], \"Not in blacklist\") */\n      tag_200\n        /* \"#utility.yul\":6649:6989   */\n      jump\n        /* \"src/usdt.sol\":3196:3256  require(isBlackListed[_blackListedUser], \"Not in blacklist\") */\n    tag_295:\n        /* \"src/usdt.sol\":3266:3281  uint dirtyFunds */\n      0x00\n        /* \"src/usdt.sol\":3284:3311  balanceOf(_blackListedUser) */\n      tag_298\n        /* \"src/usdt.sol\":3294:3310  _blackListedUser */\n      dup4\n        /* \"src/usdt.sol\":3284:3293  balanceOf */\n      tag_115\n        /* \"src/usdt.sol\":3284:3311  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_298:\n        /* \"src/usdt.sol\":3266:3311  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap1\n      pop\n        /* \"src/usdt.sol\":3321:3356  _burn(_blackListedUser, dirtyFunds) */\n      tag_299\n        /* \"src/usdt.sol\":3327:3343  _blackListedUser */\n      dup4\n        /* \"src/usdt.sol\":3345:3355  dirtyFunds */\n      dup3\n        /* \"src/usdt.sol\":3321:3326  _burn */\n      tag_195\n        /* \"src/usdt.sol\":3321:3356  _burn(_blackListedUser, dirtyFunds) */\n      jump\t// in\n    tag_299:\n        /* \"src/usdt.sol\":3382:3392  dirtyFunds */\n      dup1\n        /* \"src/usdt.sol\":3366:3378  _totalSupply */\n      0x08\n      0x00\n        /* \"src/usdt.sol\":3366:3392  _totalSupply -= dirtyFunds */\n      dup3\n      dup3\n      sload\n      tag_300\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/usdt.sol\":3407:3456  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      mload(0x40)\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n      swap1\n      tag_302\n      swap1\n        /* \"src/usdt.sol\":3427:3443  _blackListedUser */\n      dup6\n      swap1\n        /* \"src/usdt.sol\":3445:3455  dirtyFunds */\n      dup5\n      swap1\n        /* \"src/usdt.sol\":3407:3456  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/usdt.sol\":3186:3463  {... */\n      pop\n        /* \"src/usdt.sol\":3095:3463  function destroyBlackFunds(address _blackListedUser) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_308\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_237\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_312\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_317\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_317\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_329:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_331\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_333\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_172)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_332:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_172)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      jump(tag_172)\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_342\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_345\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_347\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_207\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_344\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_317\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_358:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_360:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_363\n      swap2\n        /* \"#utility.yul\":1066:1091   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1054:1056   */\n      0x20\n        /* \"#utility.yul\":1039:1057   */\n      add\n      swap1\n        /* \"#utility.yul\":920:1097   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_365\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap3\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_370\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_207\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1235:1239  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1241:1243  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1245:1250  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1234  super._update */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_375\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_308\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_373:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_385\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_386\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_386:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_387\n      swap1\n      pop\n      jump\n    tag_385:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_388:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_387:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_390\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_391)\n    tag_390:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_392\n      swap2\n        /* \"#utility.yul\":1066:1091   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1054:1056   */\n      0x20\n        /* \"#utility.yul\":1039:1057   */\n      add\n      swap1\n        /* \"#utility.yul\":920:1097   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_40:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_397:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_398:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:915   */\n    tag_47:\n        /* \"#utility.yul\":646:648   */\n      0x20\n        /* \"#utility.yul\":635:644   */\n      dup2\n        /* \"#utility.yul\":628:649   */\n      mstore\n        /* \"#utility.yul\":609:613   */\n      0x00\n        /* \"#utility.yul\":678:684   */\n      dup3\n        /* \"#utility.yul\":672:685   */\n      mload\n        /* \"#utility.yul\":721:727   */\n      dup1\n        /* \"#utility.yul\":716:718   */\n      0x20\n        /* \"#utility.yul\":705:714   */\n      dup5\n        /* \"#utility.yul\":701:719   */\n      add\n        /* \"#utility.yul\":694:728   */\n      mstore\n        /* \"#utility.yul\":780:786   */\n      dup1\n        /* \"#utility.yul\":775:777   */\n      0x20\n        /* \"#utility.yul\":767:773   */\n      dup6\n        /* \"#utility.yul\":763:778   */\n      add\n        /* \"#utility.yul\":758:760   */\n      0x40\n        /* \"#utility.yul\":747:756   */\n      dup6\n        /* \"#utility.yul\":743:761   */\n      add\n        /* \"#utility.yul\":737:787   */\n      mcopy\n        /* \"#utility.yul\":836:837   */\n      0x00\n        /* \"#utility.yul\":831:833   */\n      0x40\n        /* \"#utility.yul\":822:828   */\n      dup3\n        /* \"#utility.yul\":811:820   */\n      dup6\n        /* \"#utility.yul\":807:829   */\n      add\n        /* \"#utility.yul\":803:834   */\n      add\n        /* \"#utility.yul\":796:838   */\n      mstore\n        /* \"#utility.yul\":906:908   */\n      0x40\n        /* \"#utility.yul\":899:901   */\n      0x1f\n        /* \"#utility.yul\":895:902   */\n      not\n        /* \"#utility.yul\":890:892   */\n      0x1f\n        /* \"#utility.yul\":882:888   */\n      dup4\n        /* \"#utility.yul\":878:893   */\n      add\n        /* \"#utility.yul\":874:903   */\n      and\n        /* \"#utility.yul\":863:872   */\n      dup5\n        /* \"#utility.yul\":859:904   */\n      add\n        /* \"#utility.yul\":855:909   */\n      add\n        /* \"#utility.yul\":847:909   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":497:915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1102:1275   */\n    tag_393:\n        /* \"#utility.yul\":1170:1190   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1219:1250   */\n      dup2\n      and\n        /* \"#utility.yul\":1209:1251   */\n      dup2\n      eq\n        /* \"#utility.yul\":1199:1269   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1265:1266   */\n      0x00\n        /* \"#utility.yul\":1262:1263   */\n      dup1\n        /* \"#utility.yul\":1255:1267   */\n      revert\n        /* \"#utility.yul\":1280:1580   */\n    tag_54:\n        /* \"#utility.yul\":1348:1354   */\n      0x00\n        /* \"#utility.yul\":1356:1362   */\n      dup1\n        /* \"#utility.yul\":1409:1411   */\n      0x40\n        /* \"#utility.yul\":1397:1406   */\n      dup4\n        /* \"#utility.yul\":1388:1395   */\n      dup6\n        /* \"#utility.yul\":1384:1407   */\n      sub\n        /* \"#utility.yul\":1380:1412   */\n      slt\n        /* \"#utility.yul\":1377:1429   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":1425:1426   */\n      0x00\n        /* \"#utility.yul\":1422:1423   */\n      dup1\n        /* \"#utility.yul\":1415:1427   */\n      revert\n        /* \"#utility.yul\":1377:1429   */\n    tag_405:\n        /* \"#utility.yul\":1448:1477   */\n      tag_406\n        /* \"#utility.yul\":1467:1476   */\n      dup4\n        /* \"#utility.yul\":1448:1477   */\n      tag_393\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":1438:1477   */\n      swap5\n        /* \"#utility.yul\":1546:1548   */\n      0x20\n        /* \"#utility.yul\":1531:1549   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1518:1550   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1280:1580   */\n      jump\t// out\n        /* \"#utility.yul\":1585:1771   */\n    tag_59:\n        /* \"#utility.yul\":1644:1650   */\n      0x00\n        /* \"#utility.yul\":1697:1699   */\n      0x20\n        /* \"#utility.yul\":1685:1694   */\n      dup3\n        /* \"#utility.yul\":1676:1683   */\n      dup5\n        /* \"#utility.yul\":1672:1695   */\n      sub\n        /* \"#utility.yul\":1668:1700   */\n      slt\n        /* \"#utility.yul\":1665:1717   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1665:1717   */\n    tag_408:\n        /* \"#utility.yul\":1736:1765   */\n      tag_398\n        /* \"#utility.yul\":1755:1764   */\n      dup3\n        /* \"#utility.yul\":1736:1765   */\n      tag_393\n      jump\t// in\n        /* \"#utility.yul\":1776:1979   */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1940:1972   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1922:1973   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1910:1912   */\n      0x20\n        /* \"#utility.yul\":1895:1913   */\n      add\n      swap1\n        /* \"#utility.yul\":1776:1979   */\n      jump\t// out\n        /* \"#utility.yul\":2166:2540   */\n    tag_78:\n        /* \"#utility.yul\":2243:2249   */\n      0x00\n        /* \"#utility.yul\":2251:2257   */\n      dup1\n        /* \"#utility.yul\":2259:2265   */\n      0x00\n        /* \"#utility.yul\":2312:2314   */\n      0x60\n        /* \"#utility.yul\":2300:2309   */\n      dup5\n        /* \"#utility.yul\":2291:2298   */\n      dup7\n        /* \"#utility.yul\":2287:2310   */\n      sub\n        /* \"#utility.yul\":2283:2315   */\n      slt\n        /* \"#utility.yul\":2280:2332   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2325:2326   */\n      dup1\n        /* \"#utility.yul\":2318:2330   */\n      revert\n        /* \"#utility.yul\":2280:2332   */\n    tag_413:\n        /* \"#utility.yul\":2351:2380   */\n      tag_414\n        /* \"#utility.yul\":2370:2379   */\n      dup5\n        /* \"#utility.yul\":2351:2380   */\n      tag_393\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2341:2380   */\n      swap3\n      pop\n        /* \"#utility.yul\":2399:2437   */\n      tag_415\n        /* \"#utility.yul\":2433:2435   */\n      0x20\n        /* \"#utility.yul\":2422:2431   */\n      dup6\n        /* \"#utility.yul\":2418:2436   */\n      add\n        /* \"#utility.yul\":2399:2437   */\n      tag_393\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2166:2540   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2389:2437   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2506:2508   */\n      0x40\n        /* \"#utility.yul\":2491:2509   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2478:2510   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2166:2540   */\n      jump\t// out\n        /* \"#utility.yul\":2545:2771   */\n    tag_83:\n        /* \"#utility.yul\":2604:2610   */\n      0x00\n        /* \"#utility.yul\":2657:2659   */\n      0x20\n        /* \"#utility.yul\":2645:2654   */\n      dup3\n        /* \"#utility.yul\":2636:2643   */\n      dup5\n        /* \"#utility.yul\":2632:2655   */\n      sub\n        /* \"#utility.yul\":2628:2660   */\n      slt\n        /* \"#utility.yul\":2625:2677   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":2673:2674   */\n      0x00\n        /* \"#utility.yul\":2670:2671   */\n      dup1\n        /* \"#utility.yul\":2663:2675   */\n      revert\n        /* \"#utility.yul\":2625:2677   */\n    tag_417:\n      pop\n        /* \"#utility.yul\":2718:2741   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2545:2771   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2776:3076   */\n    tag_92:\n        /* \"#utility.yul\":2844:2850   */\n      0x00\n        /* \"#utility.yul\":2852:2858   */\n      dup1\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2893:2902   */\n      dup4\n        /* \"#utility.yul\":2884:2891   */\n      dup6\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2908   */\n      slt\n        /* \"#utility.yul\":2873:2925   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":2921:2922   */\n      0x00\n        /* \"#utility.yul\":2918:2919   */\n      dup1\n        /* \"#utility.yul\":2911:2923   */\n      revert\n        /* \"#utility.yul\":2873:2925   */\n    tag_419:\n        /* \"#utility.yul\":2966:2989   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3032:3070   */\n      tag_420\n        /* \"#utility.yul\":3066:3068   */\n      0x20\n        /* \"#utility.yul\":3051:3069   */\n      dup5\n      add\n        /* \"#utility.yul\":3032:3070   */\n      tag_393\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3022:3070   */\n      swap1\n      pop\n        /* \"#utility.yul\":2776:3076   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3501:3761   */\n    tag_153:\n        /* \"#utility.yul\":3569:3575   */\n      0x00\n        /* \"#utility.yul\":3577:3583   */\n      dup1\n        /* \"#utility.yul\":3630:3632   */\n      0x40\n        /* \"#utility.yul\":3618:3627   */\n      dup4\n        /* \"#utility.yul\":3609:3616   */\n      dup6\n        /* \"#utility.yul\":3605:3628   */\n      sub\n        /* \"#utility.yul\":3601:3633   */\n      slt\n        /* \"#utility.yul\":3598:3650   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":3646:3647   */\n      0x00\n        /* \"#utility.yul\":3643:3644   */\n      dup1\n        /* \"#utility.yul\":3636:3648   */\n      revert\n        /* \"#utility.yul\":3598:3650   */\n    tag_425:\n        /* \"#utility.yul\":3669:3698   */\n      tag_426\n        /* \"#utility.yul\":3688:3697   */\n      dup4\n        /* \"#utility.yul\":3669:3698   */\n      tag_393\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3659:3698   */\n      swap2\n      pop\n        /* \"#utility.yul\":3717:3755   */\n      tag_420\n        /* \"#utility.yul\":3751:3753   */\n      0x20\n        /* \"#utility.yul\":3740:3749   */\n      dup5\n        /* \"#utility.yul\":3736:3754   */\n      add\n        /* \"#utility.yul\":3717:3755   */\n      tag_393\n      jump\t// in\n        /* \"#utility.yul\":3766:4146   */\n    tag_176:\n        /* \"#utility.yul\":3845:3846   */\n      0x01\n        /* \"#utility.yul\":3841:3853   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3888:3900   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3909:3970   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":3963:3967   */\n      0x7f\n        /* \"#utility.yul\":3955:3961   */\n      dup3\n        /* \"#utility.yul\":3951:3968   */\n      and\n        /* \"#utility.yul\":3941:3968   */\n      swap2\n      pop\n        /* \"#utility.yul\":3909:3970   */\n    tag_429:\n        /* \"#utility.yul\":4016:4018   */\n      0x20\n        /* \"#utility.yul\":4008:4014   */\n      dup3\n        /* \"#utility.yul\":4005:4019   */\n      lt\n        /* \"#utility.yul\":3985:4003   */\n      dup2\n        /* \"#utility.yul\":3982:4020   */\n      sub\n        /* \"#utility.yul\":3979:4140   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4062:4072   */\n      0x4e487b71\n        /* \"#utility.yul\":4057:4060   */\n      0xe0\n        /* \"#utility.yul\":4053:4073   */\n      shl\n        /* \"#utility.yul\":4050:4051   */\n      0x00\n        /* \"#utility.yul\":4043:4074   */\n      mstore\n        /* \"#utility.yul\":4097:4101   */\n      0x22\n        /* \"#utility.yul\":4094:4095   */\n      0x04\n        /* \"#utility.yul\":4087:4102   */\n      mstore\n        /* \"#utility.yul\":4125:4129   */\n      0x24\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4115:4130   */\n      revert\n        /* \"#utility.yul\":3979:4140   */\n    tag_430:\n      pop\n        /* \"#utility.yul\":3766:4146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4858:5208   */\n    tag_219:\n        /* \"#utility.yul\":5060:5062   */\n      0x20\n        /* \"#utility.yul\":5042:5063   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5099:5101   */\n      0x1a\n        /* \"#utility.yul\":5079:5097   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5072:5102   */\n      mstore\n      shl(0x31, 0x21b0b63632b91034b9903737ba10309031b7b73a3937b63632b9)\n        /* \"#utility.yul\":5133:5135   */\n      0x40\n        /* \"#utility.yul\":5118:5136   */\n      dup3\n      add\n        /* \"#utility.yul\":5111:5167   */\n      mstore\n        /* \"#utility.yul\":5199:5201   */\n      0x60\n        /* \"#utility.yul\":5184:5202   */\n      add\n      swap1\n        /* \"#utility.yul\":4858:5208   */\n      jump\t// out\n        /* \"#utility.yul\":5563:5690   */\n    tag_394:\n        /* \"#utility.yul\":5624:5634   */\n      0x4e487b71\n        /* \"#utility.yul\":5619:5622   */\n      0xe0\n        /* \"#utility.yul\":5615:5635   */\n      shl\n        /* \"#utility.yul\":5612:5613   */\n      0x00\n        /* \"#utility.yul\":5605:5636   */\n      mstore\n        /* \"#utility.yul\":5655:5659   */\n      0x11\n        /* \"#utility.yul\":5652:5653   */\n      0x04\n        /* \"#utility.yul\":5645:5660   */\n      mstore\n        /* \"#utility.yul\":5679:5683   */\n      0x24\n        /* \"#utility.yul\":5676:5677   */\n      0x00\n        /* \"#utility.yul\":5669:5684   */\n      revert\n        /* \"#utility.yul\":5695:5820   */\n    tag_271:\n        /* \"#utility.yul\":5760:5769   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5781:5791   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5778:5814   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":5794:5812   */\n      tag_172\n      tag_394\n      jump\t// in\n        /* \"#utility.yul\":6994:7122   */\n    tag_301:\n        /* \"#utility.yul\":7061:7070   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7082:7093   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7079:7116   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":7096:7114   */\n      tag_172\n      tag_394\n      jump\t// in\n        /* \"#utility.yul\":7127:7401   */\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7319:7351   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7301:7352   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7383:7385   */\n      0x20\n        /* \"#utility.yul\":7368:7386   */\n      dup3\n      add\n        /* \"#utility.yul\":7361:7395   */\n      mstore\n        /* \"#utility.yul\":7289:7291   */\n      0x40\n        /* \"#utility.yul\":7274:7292   */\n      add\n      swap1\n        /* \"#utility.yul\":7127:7401   */\n      jump\t// out\n        /* \"#utility.yul\":7685:8030   */\n    tag_379:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7905:7937   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":7887:7938   */\n      dup4\n      mstore\n        /* \"#utility.yul\":7969:7971   */\n      0x20\n        /* \"#utility.yul\":7954:7972   */\n      dup4\n      add\n        /* \"#utility.yul\":7947:7981   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8012:8014   */\n      0x40\n        /* \"#utility.yul\":7997:8015   */\n      dup3\n      add\n        /* \"#utility.yul\":7990:8024   */\n      mstore\n        /* \"#utility.yul\":7875:7877   */\n      0x60\n        /* \"#utility.yul\":7860:7878   */\n      add\n      swap1\n        /* \"#utility.yul\":7685:8030   */\n      jump\t// out\n    stop\n    data_50e6e89a79e1b3c366a7ce592dcdf63707328bf04106a9bad3d5d09088a9df0a 7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357\n    data_a4145e86017412c2501265325769af64da9f2a5605a5dfc097aad77b02e07414 9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n\n    auxdata: 0xa26469706673582212205a40a026ace0868d6c3974e857beefdf58ae7755f6ae6f8253710ff43f3ec22564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1232": {
									"entryPoint": null,
									"id": 1232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1444": {
									"entryPoint": null,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 267,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 440,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1180": {
									"entryPoint": null,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_1269": {
									"entryPoint": 525,
									"id": 1269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1141": {
									"entryPoint": 501,
									"id": 1141,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 563,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_1257": {
									"entryPoint": null,
									"id": 1257,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5259:12",
										"nodeType": "YulBlock",
										"src": "0:5259:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:12",
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:12",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:12",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:12",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nativeSrc": "66:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nativeSrc": "56:31:12",
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nativeSrc": "56:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nativeSrc": "96:15:12",
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nativeSrc": "96:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:12",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:12",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nativeSrc": "120:15:12",
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nativeSrc": "120:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nativeSrc": "201:325:12",
													"nodeType": "YulBlock",
													"src": "201:325:12",
													"statements": [
														{
															"nativeSrc": "211:22:12",
															"nodeType": "YulAssignment",
															"src": "211:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:12",
																		"nodeType": "YulLiteral",
																		"src": "225:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:12"
																},
																"nativeSrc": "221:12:12",
																"nodeType": "YulFunctionCall",
																"src": "221:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:12"
																}
															]
														},
														{
															"nativeSrc": "242:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:12"
																},
																"nativeSrc": "268:12:12",
																"nodeType": "YulFunctionCall",
																"src": "268:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:12",
																	"nodeType": "YulTypedName",
																	"src": "246:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:12",
																"nodeType": "YulBlock",
																"src": "319:31:12",
																"statements": [
																	{
																		"nativeSrc": "321:27:12",
																		"nodeType": "YulAssignment",
																		"src": "321:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:12",
																					"nodeType": "YulLiteral",
																					"src": "343:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:12"
																			},
																			"nativeSrc": "331:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:12"
																},
																"nativeSrc": "292:26:12",
																"nodeType": "YulFunctionCall",
																"src": "292:26:12"
															},
															"nativeSrc": "289:61:12",
															"nodeType": "YulIf",
															"src": "289:61:12"
														},
														{
															"body": {
																"nativeSrc": "409:111:12",
																"nodeType": "YulBlock",
																"src": "409:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:12",
																					"nodeType": "YulLiteral",
																					"src": "430:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:12",
																							"nodeType": "YulLiteral",
																							"src": "437:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:12",
																							"nodeType": "YulLiteral",
																							"src": "442:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:12"
																					},
																					"nativeSrc": "433:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:12"
																			},
																			"nativeSrc": "423:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:12"
																		},
																		"nativeSrc": "423:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:12",
																					"nodeType": "YulLiteral",
																					"src": "474:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:12",
																					"nodeType": "YulLiteral",
																					"src": "477:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:12"
																			},
																			"nativeSrc": "467:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:12"
																		},
																		"nativeSrc": "467:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:12",
																					"nodeType": "YulLiteral",
																					"src": "502:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:12",
																					"nodeType": "YulLiteral",
																					"src": "505:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:12"
																			},
																			"nativeSrc": "495:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:12"
																		},
																		"nativeSrc": "495:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:12",
																				"nodeType": "YulLiteral",
																				"src": "396:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:12"
																		},
																		"nativeSrc": "385:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:12"
																},
																"nativeSrc": "362:38:12",
																"nodeType": "YulFunctionCall",
																"src": "362:38:12"
															},
															"nativeSrc": "359:161:12",
															"nodeType": "YulIf",
															"src": "359:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:12",
														"nodeType": "YulTypedName",
														"src": "181:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:12",
														"nodeType": "YulTypedName",
														"src": "190:6:12",
														"type": ""
													}
												],
												"src": "146:380:12"
											},
											{
												"body": {
													"nativeSrc": "587:65:12",
													"nodeType": "YulBlock",
													"src": "587:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:12",
																		"nodeType": "YulLiteral",
																		"src": "604:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:12"
																},
																"nativeSrc": "597:14:12",
																"nodeType": "YulFunctionCall",
																"src": "597:14:12"
															},
															"nativeSrc": "597:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:12"
														},
														{
															"nativeSrc": "620:26:12",
															"nodeType": "YulAssignment",
															"src": "620:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:12",
																		"nodeType": "YulLiteral",
																		"src": "638:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:12",
																		"nodeType": "YulLiteral",
																		"src": "641:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:12"
																},
																"nativeSrc": "628:18:12",
																"nodeType": "YulFunctionCall",
																"src": "628:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:12",
														"nodeType": "YulTypedName",
														"src": "570:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:12",
														"nodeType": "YulTypedName",
														"src": "578:4:12",
														"type": ""
													}
												],
												"src": "531:121:12"
											},
											{
												"body": {
													"nativeSrc": "738:437:12",
													"nodeType": "YulBlock",
													"src": "738:437:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:12",
																"nodeType": "YulBlock",
																"src": "771:398:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:12",
																					"nodeType": "YulLiteral",
																					"src": "792:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:12"
																			},
																			"nativeSrc": "785:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:12"
																		},
																		"nativeSrc": "785:16:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:12"
																	},
																	{
																		"nativeSrc": "814:30:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:12",
																					"nodeType": "YulLiteral",
																					"src": "836:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:12",
																					"nodeType": "YulLiteral",
																					"src": "839:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:12"
																			},
																			"nativeSrc": "826:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:12",
																				"nodeType": "YulTypedName",
																				"src": "818:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:12",
																							"nodeType": "YulLiteral",
																							"src": "890:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:12",
																									"nodeType": "YulLiteral",
																									"src": "909:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:12"
																							},
																							"nativeSrc": "893:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:12"
																					},
																					"nativeSrc": "886:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:12"
																			},
																			"nativeSrc": "876:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:12",
																				"nodeType": "YulTypedName",
																				"src": "861:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:12",
																			"nodeType": "YulBlock",
																			"src": "951:23:12",
																			"statements": [
																				{
																					"nativeSrc": "953:19:12",
																					"nodeType": "YulAssignment",
																					"src": "953:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:12",
																					"nodeType": "YulLiteral",
																					"src": "945:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:12"
																			},
																			"nativeSrc": "930:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:12"
																		},
																		"nativeSrc": "927:47:12",
																		"nodeType": "YulIf",
																		"src": "927:47:12"
																	},
																	{
																		"nativeSrc": "987:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:12"
																							},
																							"nativeSrc": "1014:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:12"
																					},
																					"nativeSrc": "1007:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:12"
																			},
																			"nativeSrc": "997:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:12"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:12",
																				"nodeType": "YulTypedName",
																				"src": "991:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:12",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:12",
																			"nodeType": "YulBlock",
																			"src": "1139:20:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:12"
																						},
																						"nativeSrc": "1141:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:12"
																					},
																					"nativeSrc": "1141:16:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:12"
																			},
																			"nativeSrc": "1086:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:12"
																		},
																		"nativeSrc": "1078:81:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:12",
																			"nodeType": "YulBlock",
																			"src": "1100:26:12",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:12",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:12"
																						},
																						"nativeSrc": "1111:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:12",
																			"nodeType": "YulBlock",
																			"src": "1082:3:12",
																			"statements": []
																		},
																		"src": "1078:81:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:12",
																		"nodeType": "YulLiteral",
																		"src": "759:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:12"
																},
																"nativeSrc": "751:11:12",
																"nodeType": "YulFunctionCall",
																"src": "751:11:12"
															},
															"nativeSrc": "748:421:12",
															"nodeType": "YulIf",
															"src": "748:421:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:12",
														"nodeType": "YulTypedName",
														"src": "710:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:12",
														"nodeType": "YulTypedName",
														"src": "717:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:12",
														"nodeType": "YulTypedName",
														"src": "722:10:12",
														"type": ""
													}
												],
												"src": "657:518:12"
											},
											{
												"body": {
													"nativeSrc": "1265:81:12",
													"nodeType": "YulBlock",
													"src": "1265:81:12",
													"statements": [
														{
															"nativeSrc": "1275:65:12",
															"nodeType": "YulAssignment",
															"src": "1275:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:12"
																								},
																								"nativeSrc": "1304:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:12"
																								},
																								"nativeSrc": "1317:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:12"
																						},
																						"nativeSrc": "1300:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:12"
																				},
																				"nativeSrc": "1296:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:12"
																		},
																		"nativeSrc": "1286:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:12"
																		},
																		"nativeSrc": "1328:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:12"
																},
																"nativeSrc": "1283:57:12",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:12",
														"nodeType": "YulTypedName",
														"src": "1242:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:12",
														"nodeType": "YulTypedName",
														"src": "1248:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:12",
														"nodeType": "YulTypedName",
														"src": "1256:4:12",
														"type": ""
													}
												],
												"src": "1180:166:12"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:12",
													"nodeType": "YulBlock",
													"src": "1447:1203:12",
													"statements": [
														{
															"nativeSrc": "1457:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:12"
																},
																"nativeSrc": "1471:10:12",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:12",
																"nodeType": "YulBlock",
																"src": "1524:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:12"
																			},
																			"nativeSrc": "1526:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:12"
																		},
																		"nativeSrc": "1526:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:12"
																				},
																				"nativeSrc": "1508:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:12"
																		},
																		"nativeSrc": "1504:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:12"
																},
																"nativeSrc": "1493:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:12"
															},
															"nativeSrc": "1490:56:12",
															"nodeType": "YulIf",
															"src": "1490:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:12"
																				},
																				"nativeSrc": "1631:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:12"
																		},
																		"nativeSrc": "1605:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:12"
																},
																"nativeSrc": "1555:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:12"
															},
															"nativeSrc": "1555:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:12"
														},
														{
															"nativeSrc": "1661:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:12",
																"nodeType": "YulLiteral",
																"src": "1678:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:12",
															"nodeType": "YulAssignment",
															"src": "1688:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:12",
																"nodeType": "YulLiteral",
																"src": "1701:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:12",
																		"nodeType": "YulBlock",
																		"src": "1751:642:12",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:12"
																							},
																							"nativeSrc": "1792:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:12"
																					},
																					"nativeSrc": "1780:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:12",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:12"
																					},
																					"nativeSrc": "1827:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:12",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:12",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:12",
																					"nodeType": "YulBlock",
																					"src": "1955:165:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:12"
																												},
																												"nativeSrc": "1994:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:12"
																										},
																										"nativeSrc": "1988:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:12"
																								},
																								"nativeSrc": "1973:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:12"
																							},
																							"nativeSrc": "1973:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:12"
																						},
																						{
																							"nativeSrc": "2032:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:12"
																								},
																								"nativeSrc": "2042:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:12",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:12",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:12"
																								},
																								"nativeSrc": "2086:20:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:12"
																					},
																					"nativeSrc": "1906:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:12"
																				},
																				"nativeSrc": "1898:222:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:12",
																					"nodeType": "YulBlock",
																					"src": "1921:21:12",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:12",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:12",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:12"
																								},
																								"nativeSrc": "1928:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:12",
																					"nodeType": "YulBlock",
																					"src": "1902:3:12",
																					"statements": []
																				},
																				"src": "1898:222:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:12",
																					"nodeType": "YulBlock",
																					"src": "2168:166:12",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:12"
																										},
																										"nativeSrc": "2209:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:12"
																								},
																								"nativeSrc": "2203:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:12",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:12"
																																		},
																																		"nativeSrc": "2288:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:12"
																																},
																																"nativeSrc": "2284:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:12"
																																},
																																"nativeSrc": "2310:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:12"
																														},
																														"nativeSrc": "2280:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:12"
																												},
																												"nativeSrc": "2276:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:12"
																										},
																										"nativeSrc": "2261:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:12"
																								},
																								"nativeSrc": "2246:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:12"
																							},
																							"nativeSrc": "2246:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:12"
																					},
																					"nativeSrc": "2136:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:12"
																				},
																				"nativeSrc": "2133:201:12",
																				"nodeType": "YulIf",
																				"src": "2133:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:12",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:12"
																									},
																									"nativeSrc": "2364:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:12",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:12"
																							},
																							"nativeSrc": "2360:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:12"
																					},
																					"nativeSrc": "2347:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:12"
																				},
																				"nativeSrc": "2347:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:12"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:12",
																	"nodeType": "YulCase",
																	"src": "1744:649:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:12",
																		"nodeType": "YulBlock",
																		"src": "2410:234:12",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:12",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:12",
																					"nodeType": "YulBlock",
																					"src": "2473:67:12",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:12",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:12"
																										},
																										"nativeSrc": "2506:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:12"
																								},
																								"nativeSrc": "2500:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:12"
																				},
																				"nativeSrc": "2451:89:12",
																				"nodeType": "YulIf",
																				"src": "2451:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:12"
																							},
																							"nativeSrc": "2566:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:12"
																					},
																					"nativeSrc": "2553:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:12"
																				},
																				"nativeSrc": "2553:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:12"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:12",
																	"nodeType": "YulCase",
																	"src": "2402:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:12"
																},
																"nativeSrc": "1721:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:12"
															},
															"nativeSrc": "1714:930:12",
															"nodeType": "YulSwitch",
															"src": "1714:930:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:12",
														"nodeType": "YulTypedName",
														"src": "1432:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:12",
														"nodeType": "YulTypedName",
														"src": "1438:3:12",
														"type": ""
													}
												],
												"src": "1351:1299:12"
											},
											{
												"body": {
													"nativeSrc": "2687:95:12",
													"nodeType": "YulBlock",
													"src": "2687:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2704:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2704:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2711:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2711:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2716:10:12",
																				"nodeType": "YulLiteral",
																				"src": "2716:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2707:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:12"
																		},
																		"nativeSrc": "2707:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2697:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:12"
																},
																"nativeSrc": "2697:31:12",
																"nodeType": "YulFunctionCall",
																"src": "2697:31:12"
															},
															"nativeSrc": "2697:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "2697:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2747:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:12"
																},
																"nativeSrc": "2737:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2737:15:12"
															},
															"nativeSrc": "2737:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2737:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2771:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2761:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:12"
																},
																"nativeSrc": "2761:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2761:15:12"
															},
															"nativeSrc": "2761:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2761:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2655:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "2655:127:12"
											},
											{
												"body": {
													"nativeSrc": "2856:306:12",
													"nodeType": "YulBlock",
													"src": "2856:306:12",
													"statements": [
														{
															"nativeSrc": "2866:10:12",
															"nodeType": "YulAssignment",
															"src": "2866:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2875:1:12",
																"nodeType": "YulLiteral",
																"src": "2875:1:12",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2866:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2866:5:12"
																}
															]
														},
														{
															"nativeSrc": "2885:13:12",
															"nodeType": "YulAssignment",
															"src": "2885:13:12",
															"value": {
																"name": "_base",
																"nativeSrc": "2893:5:12",
																"nodeType": "YulIdentifier",
																"src": "2893:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2885:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2885:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2943:213:12",
																"nodeType": "YulBlock",
																"src": "2943:213:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "2985:22:12",
																			"nodeType": "YulBlock",
																			"src": "2985:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2987:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "2987:16:12"
																						},
																						"nativeSrc": "2987:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2987:18:12"
																					},
																					"nativeSrc": "2987:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "2987:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "2963:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "2963:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "2973:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2973:3:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "2978:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2978:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "2969:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2969:3:12"
																					},
																					"nativeSrc": "2969:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2969:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "2960:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2960:2:12"
																			},
																			"nativeSrc": "2960:24:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2960:24:12"
																		},
																		"nativeSrc": "2957:50:12",
																		"nodeType": "YulIf",
																		"src": "2957:50:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "3040:29:12",
																			"nodeType": "YulBlock",
																			"src": "3040:29:12",
																			"statements": [
																				{
																					"nativeSrc": "3042:25:12",
																					"nodeType": "YulAssignment",
																					"src": "3042:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3055:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "3055:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3062:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "3062:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3051:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3051:3:12"
																						},
																						"nativeSrc": "3051:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3051:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3042:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "3042:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3027:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3027:8:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3037:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3023:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3023:3:12"
																			},
																			"nativeSrc": "3023:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3023:16:12"
																		},
																		"nativeSrc": "3020:49:12",
																		"nodeType": "YulIf",
																		"src": "3020:49:12"
																	},
																	{
																		"nativeSrc": "3082:23:12",
																		"nodeType": "YulAssignment",
																		"src": "3082:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3094:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3094:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3100:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3100:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3090:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3090:3:12"
																			},
																			"nativeSrc": "3090:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3090:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3082:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3082:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3118:28:12",
																		"nodeType": "YulAssignment",
																		"src": "3118:28:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3134:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3134:1:12",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3137:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3137:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3130:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3130:3:12"
																			},
																			"nativeSrc": "3130:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3130:16:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3118:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "3118:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2918:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2918:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2928:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2915:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2915:2:12"
																},
																"nativeSrc": "2915:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2915:15:12"
															},
															"nativeSrc": "2907:249:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2931:3:12",
																"nodeType": "YulBlock",
																"src": "2931:3:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2911:3:12",
																"nodeType": "YulBlock",
																"src": "2911:3:12",
																"statements": []
															},
															"src": "2907:249:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2787:375:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2815:5:12",
														"nodeType": "YulTypedName",
														"src": "2815:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2822:8:12",
														"nodeType": "YulTypedName",
														"src": "2822:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "2832:3:12",
														"nodeType": "YulTypedName",
														"src": "2832:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2840:5:12",
														"nodeType": "YulTypedName",
														"src": "2840:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2847:4:12",
														"nodeType": "YulTypedName",
														"src": "2847:4:12",
														"type": ""
													}
												],
												"src": "2787:375:12"
											},
											{
												"body": {
													"nativeSrc": "3226:843:12",
													"nodeType": "YulBlock",
													"src": "3226:843:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:52:12",
																"nodeType": "YulBlock",
																"src": "3264:52:12",
																"statements": [
																	{
																		"nativeSrc": "3278:10:12",
																		"nodeType": "YulAssignment",
																		"src": "3278:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3287:1:12",
																			"nodeType": "YulLiteral",
																			"src": "3287:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3278:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3278:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3301:5:12",
																		"nodeType": "YulLeave",
																		"src": "3301:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3246:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3246:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:12"
																},
																"nativeSrc": "3239:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3239:16:12"
															},
															"nativeSrc": "3236:80:12",
															"nodeType": "YulIf",
															"src": "3236:80:12"
														},
														{
															"body": {
																"nativeSrc": "3349:52:12",
																"nodeType": "YulBlock",
																"src": "3349:52:12",
																"statements": [
																	{
																		"nativeSrc": "3363:10:12",
																		"nodeType": "YulAssignment",
																		"src": "3363:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3372:1:12",
																			"nodeType": "YulLiteral",
																			"src": "3372:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3363:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3363:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3386:5:12",
																		"nodeType": "YulLeave",
																		"src": "3386:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3335:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3335:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3328:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:12"
																},
																"nativeSrc": "3328:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3328:12:12"
															},
															"nativeSrc": "3325:76:12",
															"nodeType": "YulIf",
															"src": "3325:76:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3437:52:12",
																		"nodeType": "YulBlock",
																		"src": "3437:52:12",
																		"statements": [
																			{
																				"nativeSrc": "3451:10:12",
																				"nodeType": "YulAssignment",
																				"src": "3451:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3460:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3460:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3451:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3451:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3474:5:12",
																				"nodeType": "YulLeave",
																				"src": "3474:5:12"
																			}
																		]
																	},
																	"nativeSrc": "3430:59:12",
																	"nodeType": "YulCase",
																	"src": "3430:59:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3435:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3435:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3505:167:12",
																		"nodeType": "YulBlock",
																		"src": "3505:167:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3540:22:12",
																					"nodeType": "YulBlock",
																					"src": "3540:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3542:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "3542:16:12"
																								},
																								"nativeSrc": "3542:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3542:18:12"
																							},
																							"nativeSrc": "3542:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3542:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3525:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3525:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3535:3:12",
																							"nodeType": "YulLiteral",
																							"src": "3535:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3522:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3522:2:12"
																					},
																					"nativeSrc": "3522:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3522:17:12"
																				},
																				"nativeSrc": "3519:43:12",
																				"nodeType": "YulIf",
																				"src": "3519:43:12"
																			},
																			{
																				"nativeSrc": "3575:25:12",
																				"nodeType": "YulAssignment",
																				"src": "3575:25:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3588:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3588:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3598:1:12",
																							"nodeType": "YulLiteral",
																							"src": "3598:1:12",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3584:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3584:3:12"
																					},
																					"nativeSrc": "3584:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3584:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3575:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3575:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3613:11:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3613:11:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3623:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3623:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "3617:2:12",
																						"nodeType": "YulTypedName",
																						"src": "3617:2:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3637:7:12",
																				"nodeType": "YulAssignment",
																				"src": "3637:7:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3643:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3643:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "3637:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3637:2:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3657:5:12",
																				"nodeType": "YulLeave",
																				"src": "3657:5:12"
																			}
																		]
																	},
																	"nativeSrc": "3498:174:12",
																	"nodeType": "YulCase",
																	"src": "3498:174:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3503:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3503:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3417:4:12",
																"nodeType": "YulIdentifier",
																"src": "3417:4:12"
															},
															"nativeSrc": "3410:262:12",
															"nodeType": "YulSwitch",
															"src": "3410:262:12"
														},
														{
															"body": {
																"nativeSrc": "3770:114:12",
																"nodeType": "YulBlock",
																"src": "3770:114:12",
																"statements": [
																	{
																		"nativeSrc": "3784:28:12",
																		"nodeType": "YulAssignment",
																		"src": "3784:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3797:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3797:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3803:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3803:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3793:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3793:3:12"
																			},
																			"nativeSrc": "3793:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3793:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3784:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3784:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3825:11:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3825:11:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3835:1:12",
																			"nodeType": "YulLiteral",
																			"src": "3835:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "3829:2:12",
																				"nodeType": "YulTypedName",
																				"src": "3829:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3849:7:12",
																		"nodeType": "YulAssignment",
																		"src": "3849:7:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3855:1:12",
																			"nodeType": "YulLiteral",
																			"src": "3855:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "3849:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3849:2:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3869:5:12",
																		"nodeType": "YulLeave",
																		"src": "3869:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3694:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3694:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3700:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3700:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3691:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3691:2:12"
																				},
																				"nativeSrc": "3691:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3691:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3708:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3708:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3718:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3718:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3705:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3705:2:12"
																				},
																				"nativeSrc": "3705:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3705:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3687:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:12"
																		},
																		"nativeSrc": "3687:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3687:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3731:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3731:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3737:3:12",
																						"nodeType": "YulLiteral",
																						"src": "3737:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3728:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3728:2:12"
																				},
																				"nativeSrc": "3728:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3728:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3746:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3746:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3756:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3756:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3743:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3743:2:12"
																				},
																				"nativeSrc": "3743:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3743:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3724:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3724:3:12"
																		},
																		"nativeSrc": "3724:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3724:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3684:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:12"
																},
																"nativeSrc": "3684:77:12",
																"nodeType": "YulFunctionCall",
																"src": "3684:77:12"
															},
															"nativeSrc": "3681:203:12",
															"nodeType": "YulIf",
															"src": "3681:203:12"
														},
														{
															"nativeSrc": "3893:65:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3893:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3935:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3935:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3941:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3941:8:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3955:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3955:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3951:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3951:3:12"
																		},
																		"nativeSrc": "3951:6:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3951:6:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3916:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3916:18:12"
																},
																"nativeSrc": "3916:42:12",
																"nodeType": "YulFunctionCall",
																"src": "3916:42:12"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3897:7:12",
																	"nodeType": "YulTypedName",
																	"src": "3897:7:12",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3906:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3906:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4003:22:12",
																"nodeType": "YulBlock",
																"src": "4003:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4005:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4005:16:12"
																			},
																			"nativeSrc": "4005:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4005:18:12"
																		},
																		"nativeSrc": "4005:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4005:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3973:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3973:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3990:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3990:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3986:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3986:3:12"
																				},
																				"nativeSrc": "3986:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3986:6:12"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "3994:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3994:6:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3982:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:12"
																		},
																		"nativeSrc": "3982:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:19:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3970:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3970:2:12"
																},
																"nativeSrc": "3970:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3970:32:12"
															},
															"nativeSrc": "3967:58:12",
															"nodeType": "YulIf",
															"src": "3967:58:12"
														},
														{
															"nativeSrc": "4034:29:12",
															"nodeType": "YulAssignment",
															"src": "4034:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4047:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4047:7:12"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4056:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4056:6:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4043:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:12"
																},
																"nativeSrc": "4043:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4043:20:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4034:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4034:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3167:902:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3197:4:12",
														"nodeType": "YulTypedName",
														"src": "3197:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3203:8:12",
														"nodeType": "YulTypedName",
														"src": "3203:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3216:5:12",
														"nodeType": "YulTypedName",
														"src": "3216:5:12",
														"type": ""
													}
												],
												"src": "3167:902:12"
											},
											{
												"body": {
													"nativeSrc": "4142:72:12",
													"nodeType": "YulBlock",
													"src": "4142:72:12",
													"statements": [
														{
															"nativeSrc": "4152:56:12",
															"nodeType": "YulAssignment",
															"src": "4152:56:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4182:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4182:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4192:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "4192:8:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4202:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4202:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4188:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:12"
																		},
																		"nativeSrc": "4188:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4188:19:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4161:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "4161:20:12"
																},
																"nativeSrc": "4161:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4161:47:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4152:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4152:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4074:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4113:4:12",
														"nodeType": "YulTypedName",
														"src": "4113:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4119:8:12",
														"nodeType": "YulTypedName",
														"src": "4119:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4132:5:12",
														"nodeType": "YulTypedName",
														"src": "4132:5:12",
														"type": ""
													}
												],
												"src": "4074:140:12"
											},
											{
												"body": {
													"nativeSrc": "4271:116:12",
													"nodeType": "YulBlock",
													"src": "4271:116:12",
													"statements": [
														{
															"nativeSrc": "4281:20:12",
															"nodeType": "YulAssignment",
															"src": "4281:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4296:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4296:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4299:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4299:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4292:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4292:3:12"
																},
																"nativeSrc": "4292:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4292:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4281:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4281:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4359:22:12",
																"nodeType": "YulBlock",
																"src": "4359:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4361:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4361:16:12"
																			},
																			"nativeSrc": "4361:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4361:18:12"
																		},
																		"nativeSrc": "4361:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4361:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4330:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "4330:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4323:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4323:6:12"
																				},
																				"nativeSrc": "4323:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4323:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4337:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "4337:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4344:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "4344:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4353:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "4353:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4340:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4340:3:12"
																						},
																						"nativeSrc": "4340:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4340:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4334:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4334:2:12"
																				},
																				"nativeSrc": "4334:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4334:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4320:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4320:2:12"
																		},
																		"nativeSrc": "4320:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4313:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4313:6:12"
																},
																"nativeSrc": "4313:45:12",
																"nodeType": "YulFunctionCall",
																"src": "4313:45:12"
															},
															"nativeSrc": "4310:71:12",
															"nodeType": "YulIf",
															"src": "4310:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4219:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4250:1:12",
														"nodeType": "YulTypedName",
														"src": "4250:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4253:1:12",
														"nodeType": "YulTypedName",
														"src": "4253:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4259:7:12",
														"nodeType": "YulTypedName",
														"src": "4259:7:12",
														"type": ""
													}
												],
												"src": "4219:168:12"
											},
											{
												"body": {
													"nativeSrc": "4493:102:12",
													"nodeType": "YulBlock",
													"src": "4493:102:12",
													"statements": [
														{
															"nativeSrc": "4503:26:12",
															"nodeType": "YulAssignment",
															"src": "4503:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4515:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4526:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:12"
																},
																"nativeSrc": "4511:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4511:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4503:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4545:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4545:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4560:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4560:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4576:3:12",
																								"nodeType": "YulLiteral",
																								"src": "4576:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4581:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4581:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4572:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4572:3:12"
																						},
																						"nativeSrc": "4572:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4572:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4585:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4585:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4568:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4568:3:12"
																				},
																				"nativeSrc": "4568:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4568:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4556:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:12"
																		},
																		"nativeSrc": "4556:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4556:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4538:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4538:6:12"
																},
																"nativeSrc": "4538:51:12",
																"nodeType": "YulFunctionCall",
																"src": "4538:51:12"
															},
															"nativeSrc": "4538:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "4538:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4392:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4462:9:12",
														"nodeType": "YulTypedName",
														"src": "4462:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4473:6:12",
														"nodeType": "YulTypedName",
														"src": "4473:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4484:4:12",
														"nodeType": "YulTypedName",
														"src": "4484:4:12",
														"type": ""
													}
												],
												"src": "4392:203:12"
											},
											{
												"body": {
													"nativeSrc": "4648:77:12",
													"nodeType": "YulBlock",
													"src": "4648:77:12",
													"statements": [
														{
															"nativeSrc": "4658:16:12",
															"nodeType": "YulAssignment",
															"src": "4658:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4669:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4669:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4672:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4672:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4665:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:12"
																},
																"nativeSrc": "4665:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4665:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4658:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4658:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4697:22:12",
																"nodeType": "YulBlock",
																"src": "4697:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4699:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4699:16:12"
																			},
																			"nativeSrc": "4699:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4699:18:12"
																		},
																		"nativeSrc": "4699:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4699:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4689:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4689:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4692:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4692:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4686:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4686:2:12"
																},
																"nativeSrc": "4686:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4686:10:12"
															},
															"nativeSrc": "4683:36:12",
															"nodeType": "YulIf",
															"src": "4683:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4600:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4631:1:12",
														"nodeType": "YulTypedName",
														"src": "4631:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4634:1:12",
														"nodeType": "YulTypedName",
														"src": "4634:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4640:3:12",
														"nodeType": "YulTypedName",
														"src": "4640:3:12",
														"type": ""
													}
												],
												"src": "4600:125:12"
											},
											{
												"body": {
													"nativeSrc": "4887:188:12",
													"nodeType": "YulBlock",
													"src": "4887:188:12",
													"statements": [
														{
															"nativeSrc": "4897:26:12",
															"nodeType": "YulAssignment",
															"src": "4897:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4909:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4909:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4920:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4920:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4905:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4905:3:12"
																},
																"nativeSrc": "4905:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4905:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4897:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4897:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4939:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4939:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4954:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4954:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4970:3:12",
																								"nodeType": "YulLiteral",
																								"src": "4970:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4975:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4975:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4966:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4966:3:12"
																						},
																						"nativeSrc": "4966:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4966:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4979:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4979:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4962:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4962:3:12"
																				},
																				"nativeSrc": "4962:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4962:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:12"
																		},
																		"nativeSrc": "4950:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4950:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4932:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4932:6:12"
																},
																"nativeSrc": "4932:51:12",
																"nodeType": "YulFunctionCall",
																"src": "4932:51:12"
															},
															"nativeSrc": "4932:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "4932:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5003:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5014:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5014:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:12"
																		},
																		"nativeSrc": "4999:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5019:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5019:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4992:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4992:6:12"
																},
																"nativeSrc": "4992:34:12",
																"nodeType": "YulFunctionCall",
																"src": "4992:34:12"
															},
															"nativeSrc": "4992:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "4992:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5046:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5046:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5057:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5057:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5042:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5042:3:12"
																		},
																		"nativeSrc": "5042:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5042:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5062:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5062:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5035:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5035:6:12"
																},
																"nativeSrc": "5035:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5035:34:12"
															},
															"nativeSrc": "5035:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5035:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4730:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4840:9:12",
														"nodeType": "YulTypedName",
														"src": "4840:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4851:6:12",
														"nodeType": "YulTypedName",
														"src": "4851:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4859:6:12",
														"nodeType": "YulTypedName",
														"src": "4859:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4867:6:12",
														"nodeType": "YulTypedName",
														"src": "4867:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4878:4:12",
														"nodeType": "YulTypedName",
														"src": "4878:4:12",
														"type": ""
													}
												],
												"src": "4730:345:12"
											},
											{
												"body": {
													"nativeSrc": "5181:76:12",
													"nodeType": "YulBlock",
													"src": "5181:76:12",
													"statements": [
														{
															"nativeSrc": "5191:26:12",
															"nodeType": "YulAssignment",
															"src": "5191:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5203:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5203:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5214:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5214:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5199:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5199:3:12"
																},
																"nativeSrc": "5199:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5199:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5191:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5191:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5233:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5244:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5244:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5226:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5226:6:12"
																},
																"nativeSrc": "5226:25:12",
																"nodeType": "YulFunctionCall",
																"src": "5226:25:12"
															},
															"nativeSrc": "5226:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "5226:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5080:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5150:9:12",
														"nodeType": "YulTypedName",
														"src": "5150:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5161:6:12",
														"nodeType": "YulTypedName",
														"src": "5161:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5172:4:12",
														"nodeType": "YulTypedName",
														"src": "5172:4:12",
														"type": ""
													}
												],
												"src": "5080:177:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280601281526020017113595d1848111bdb1b185c8814995dd85c9960721b815250604051806040016040528060058152602001642aa9a226a960d91b815250816003908161006891906103f0565b50600461007582826103f0565b50506005805460ff191690555061008c5f3361010b565b506100b77f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c5702233573361010b565b506100e27f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63361010b565b50610106336100f36012600a6105a1565b61010190633b9aca006105b6565b6101b8565b6105e0565b5f8281526006602090815260408083206001600160a01b038516845290915281205460ff166101af575f8381526006602090815260408083206001600160a01b03861684529091529020805460ff191660011790556101673390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101b2565b505f5b92915050565b6001600160a01b0382166101e65760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6101f15f83836101f5565b5050565b6101fd61020d565b610208838383610233565b505050565b60055460ff16156102315760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03831661025d578060025f82825461025291906105cd565b909155506102cd9050565b6001600160a01b0383165f90815260208190526040902054818110156102af5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016101dd565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166102e957600280548290039055610307565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161034c91815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061038157607f821691505b60208210810361039f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561020857805f5260205f20601f840160051c810160208510156103ca5750805b601f840160051c820191505b818110156103e9575f81556001016103d6565b5050505050565b81516001600160401b0381111561040957610409610359565b61041d81610417845461036d565b846103a5565b6020601f82116001811461044f575f83156104385750848201515b5f19600385901b1c1916600184901b1784556103e9565b5f84815260208120601f198516915b8281101561047e578785015182556020948501946001909201910161045e565b508482101561049b57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156104f9578085048111156104dd576104dd6104aa565b60018416156104eb57908102905b60019390931c9280026104c2565b935093915050565b5f8261050f575060016101b2565b8161051b57505f6101b2565b8160018114610531576002811461053b57610557565b60019150506101b2565b60ff84111561054c5761054c6104aa565b50506001821b6101b2565b5060208310610133831016604e8410600b841016171561057a575081810a6101b2565b6105865f1984846104be565b805f1904821115610599576105996104aa565b029392505050565b5f6105af60ff841683610501565b9392505050565b80820281158282048414176101b2576101b26104aa565b808201808211156101b2576101b26104aa565b6112ed806105ed5f395ff3fe608060405234801561000f575f80fd5b506004361061019f575f3560e01c806301ffc9a7146101a357806306fdde03146101cb578063092c5b3b146101e0578063095ea7b3146102025780630ecb93c014610215578063111a18d31461022a57806316fed3e21461023d57806318160ddd1461025d57806321ca42361461026557806323b872dd14610278578063248a9ca31461028b5780632cb327431461029e5780632f2ff15d146102b1578063313ce567146102c457806336568abe146102d35780633f4ba83a146102e657806359a7715a146102ee57806359bf1abe146102f75780635c975abb1461032257806370a082311461032d5780638279c7db146103405780638456cb591461035357806391d148541461035b57806395d89b411461036e578063a217fddf14610376578063a9059cbb1461037d578063c68990ad14610390578063d08027a5146103a3578063d5391393146103b6578063d547741f146103ca578063dd62ed3e146103dd578063e47d6060146103f0578063e4997dc514610412578063ea95c07914610425578063f3bdc22814610438575b5f80fd5b6101b66101b1366004611026565b61044b565b60405190151581526020015b60405180910390f35b6101d3610481565b6040516101c29190611054565b6101f45f8051602061127883398151915281565b6040519081526020016101c2565b6101b661021036600461109f565b610511565b6102286102233660046110c7565b610528565b005b61022861023836600461109f565b610590565b600a54610250906001600160a01b031681565b6040516101c291906110e0565b6002546101f4565b6101b661027336600461109f565b6105a9565b6101b66102863660046110f4565b61061e565b6101f461029936600461112e565b6106a2565b6101b66102ac3660046110f4565b6106b6565b6102286102bf366004611145565b6106f5565b604051601281526020016101c2565b6102286102e1366004611145565b610717565b61022861074a565b6101f460095481565b6101b66103053660046110c7565b6001600160a01b03165f9081526007602052604090205460ff1690565b60055460ff166101b6565b6101f461033b3660046110c7565b61075f565b61022861034e3660046110c7565b610779565b6102286107a6565b6101b6610369366004611145565b6107b8565b6101d36107e2565b6101f45f81565b6101b661038b36600461109f565b6107f1565b6101b661039e36600461109f565b61085c565b6101b66103b136600461112e565b6108f0565b6101f45f8051602061129883398151915281565b6102286103d8366004611145565b610932565b6101f46103eb36600461116f565b61094e565b6101b66103fe3660046110c7565b60076020525f908152604090205460ff1681565b6102286104203660046110c7565b610978565b61025061043336600461112e565b6109d1565b6102286104463660046110c7565b610a18565b5f6001600160e01b03198216637965db0b60e01b148061047b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461049090611197565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc90611197565b80156105075780601f106104de57610100808354040283529160200191610507565b820191905f5260205f20905b8154815290600101906020018083116104ea57829003601f168201915b5050505050905090565b5f3361051e818585610ae7565b5060019392505050565b5f61053281610af4565b6001600160a01b0382165f9081526007602052604090819020805460ff19166001179055517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc906105849084906110e0565b60405180910390a15050565b5f61059a81610af4565b6105a48383610afe565b505050565b5f6105c15f80516020611298833981519152336107b8565b61060b5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba10309036b4b73a32b960511b60448201526064015b60405180910390fd5b6106158383610b36565b50600192915050565b5f610627610b6a565b6001600160a01b0384165f9081526007602052604090205460ff161561068d5760405162461bcd60e51b815260206004820152601b60248201527a119c9bdb481859191c995cdcc81a5cc8189b1858dadb1a5cdd1959602a1b6044820152606401610602565b5f610699858585610b90565b95945050505050565b5f9081526006602052604090206001015490565b5f6106ce5f80516020611278833981519152336107b8565b6106ea5760405162461bcd60e51b8152600401610602906111cf565b61051e848484610ae7565b6106fe826106a2565b61070781610af4565b6107118383610bb3565b50505050565b6001600160a01b03811633146107405760405163334bd91960e11b815260040160405180910390fd5b6105a48282610c44565b5f61075481610af4565b61075c610caf565b50565b6001600160a01b03165f9081526020819052604090205490565b5f61078381610af4565b50600a80546001600160a01b0319166001600160a01b0392909216919091179055565b5f6107b081610af4565b61075c610cfb565b5f9182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461049090611197565b5f6107fa610b6a565b335f9081526007602052604090205460ff16156108515760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881a5cc8189b1858dadb1a5cdd1959605a1b6044820152606401610602565b610615338484610d38565b5f5f8051602061127883398151915261087481610af4565b61087e8484610b36565b8260095f82825461088f9190611217565b9091555050600954604080513381526001600160a01b03871660208201528082018690526060810192909252517fe481c7a81eeae9654aef25a7c6b46e617d0d2c00c9215995ac059d482090d7279181900360800190a15060019392505050565b5f6109085f80516020611278833981519152336107b8565b6109245760405162461bcd60e51b8152600401610602906111cf565b50600981905560015b919050565b61093b826106a2565b61094481610af4565b6107118383610c44565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b5f61098281610af4565b6001600160a01b0382165f9081526007602052604090819020805460ff19169055517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c906105849084906110e0565b60408051338152602081018390525f9181018290527fb1639a04bdb06ef076a04a28caa4c5163bd5748db621bb0180ca81c56dc07d7a9060600160405180910390a1919050565b5f610a2281610af4565b6001600160a01b0382165f9081526007602052604090205460ff16610a7c5760405162461bcd60e51b815260206004820152601060248201526f139bdd081a5b88189b1858dadb1a5cdd60821b6044820152606401610602565b5f610a868361075f565b9050610a928382610afe565b8060085f828254610aa3919061122a565b90915550506040517f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c690610ada908590849061123d565b60405180910390a1505050565b6105a48383836001610d95565b61075c8133610e67565b6001600160a01b038216610b27575f604051634b637e8f60e11b815260040161060291906110e0565b610b32825f83610e92565b5050565b6001600160a01b038216610b5f575f60405163ec442f0560e01b815260040161060291906110e0565b610b325f8383610e92565b60055460ff1615610b8e5760405163d93c066560e01b815260040160405180910390fd5b565b5f33610b9d858285610ea5565b610ba8858585610d38565b506001949350505050565b5f610bbe83836107b8565b610c3d575f8381526006602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610bf53390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161047b565b505f61047b565b5f610c4f83836107b8565b15610c3d575f8381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161047b565b610cb7610ef0565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610cf191906110e0565b60405180910390a1565b610d03610b6a565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ce43390565b6001600160a01b038316610d61575f604051634b637e8f60e11b815260040161060291906110e0565b6001600160a01b038216610d8a575f60405163ec442f0560e01b815260040161060291906110e0565b6105a4838383610e92565b6001600160a01b038416610dbe575f60405163e602df0560e01b815260040161060291906110e0565b6001600160a01b038316610de7575f604051634a1406b160e11b815260040161060291906110e0565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561071157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e5991815260200190565b60405180910390a350505050565b610e7182826107b8565b610b3257808260405163e2517d3f60e01b815260040161060292919061123d565b610e9a610b6a565b6105a4838383610f13565b5f610eb0848461094e565b90505f198110156107115781811015610ee257828183604051637dc7a0d960e11b815260040161060293929190611256565b61071184848484035f610d95565b60055460ff16610b8e57604051638dfc202b60e01b815260040160405180910390fd5b6001600160a01b038316610f3d578060025f828254610f329190611217565b90915550610f9a9050565b6001600160a01b0383165f9081526020819052604090205481811015610f7c5783818360405163391434e360e21b815260040161060293929190611256565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610fb657600280548290039055610fd4565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161101991815260200190565b60405180910390a3505050565b5f60208284031215611036575f80fd5b81356001600160e01b03198116811461104d575f80fd5b9392505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461092d575f80fd5b5f80604083850312156110b0575f80fd5b6110b983611089565b946020939093013593505050565b5f602082840312156110d7575f80fd5b61104d82611089565b6001600160a01b0391909116815260200190565b5f805f60608486031215611106575f80fd5b61110f84611089565b925061111d60208501611089565b929592945050506040919091013590565b5f6020828403121561113e575f80fd5b5035919050565b5f8060408385031215611156575f80fd5b8235915061116660208401611089565b90509250929050565b5f8060408385031215611180575f80fd5b61118983611089565b915061116660208401611089565b600181811c908216806111ab57607f821691505b6020821081036111c957634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252601a908201527921b0b63632b91034b9903737ba10309031b7b73a3937b63632b960311b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561047b5761047b611203565b8181038181111561047b5761047b611203565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03939093168352602083019190915260408201526060019056fe7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c5702233579f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a26469706673582212205a40a026ace0868d6c3974e857beefdf58ae7755f6ae6f8253710ff43f3ec22564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x13595D1848111BDB1B185C8814995DD85C99 PUSH1 0x72 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x2AA9A226A9 PUSH1 0xD9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x75 DUP3 DUP3 PUSH2 0x3F0 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0x8C PUSH0 CALLER PUSH2 0x10B JUMP JUMPDEST POP PUSH2 0xB7 PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 CALLER PUSH2 0x10B JUMP JUMPDEST POP PUSH2 0xE2 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x10B JUMP JUMPDEST POP PUSH2 0x106 CALLER PUSH2 0xF3 PUSH1 0x12 PUSH1 0xA PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x101 SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1AF JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x167 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1B2 JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F1 PUSH0 DUP4 DUP4 PUSH2 0x1F5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x20D JUMP JUMPDEST PUSH2 0x208 DUP4 DUP4 DUP4 PUSH2 0x233 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2CD SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2E9 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x307 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x381 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x39F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x208 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3CA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3D6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x409 JUMPI PUSH2 0x409 PUSH2 0x359 JUMP JUMPDEST PUSH2 0x41D DUP2 PUSH2 0x417 DUP5 SLOAD PUSH2 0x36D JUMP JUMPDEST DUP5 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x44F JUMPI PUSH0 DUP4 ISZERO PUSH2 0x438 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x3E9 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x47E JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x45E JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x49B JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x4F9 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x4DD JUMPI PUSH2 0x4DD PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x4EB JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x4C2 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x50F JUMPI POP PUSH1 0x1 PUSH2 0x1B2 JUMP JUMPDEST DUP2 PUSH2 0x51B JUMPI POP PUSH0 PUSH2 0x1B2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x531 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x53B JUMPI PUSH2 0x557 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54C PUSH2 0x4AA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1B2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x57A JUMPI POP DUP2 DUP2 EXP PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x586 PUSH0 NOT DUP5 DUP5 PUSH2 0x4BE JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x4AA JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5AF PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x501 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1B2 JUMPI PUSH2 0x1B2 PUSH2 0x4AA JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x1B2 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x12ED DUP1 PUSH2 0x5ED PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x92C5B3B EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x111A18D3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x16FED3E2 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x21CA4236 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x2CB32743 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x59A7715A EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x8279C7DB EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xC68990AD EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xD08027A5 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xEA95C079 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x438 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x1F4 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1278 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x250 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x1F4 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1B6 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH2 0x228 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x1F4 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x1F4 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1298 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x47B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x490 SWAP1 PUSH2 0x1197 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BC SWAP1 PUSH2 0x1197 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x507 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x507 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x51E DUP2 DUP6 DUP6 PUSH2 0xAE7 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x532 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP1 PUSH2 0x584 SWAP1 DUP5 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x59A DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5A4 DUP4 DUP4 PUSH2 0xAFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1298 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA10309036B4B73A32B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x615 DUP4 DUP4 PUSH2 0xB36 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x627 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x119C9BDB481859191C995CDCC81A5CC8189B1858DADB1A5CDD1959 PUSH1 0x2A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x602 JUMP JUMPDEST PUSH0 PUSH2 0x699 DUP6 DUP6 DUP6 PUSH2 0xB90 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6CE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1278 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH2 0x51E DUP5 DUP5 DUP5 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x6FE DUP3 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x707 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 PUSH2 0xBB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A4 DUP3 DUP3 PUSH2 0xC44 JUMP JUMPDEST PUSH0 PUSH2 0x754 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x75C PUSH2 0xCAF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x783 DUP2 PUSH2 0xAF4 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x7B0 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x75C PUSH2 0xCFB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x490 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH0 PUSH2 0x7FA PUSH2 0xB6A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14D95B99195C881A5CC8189B1858DADB1A5CDD1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x602 JUMP JUMPDEST PUSH2 0x615 CALLER DUP5 DUP5 PUSH2 0xD38 JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1278 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x874 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x87E DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0xE481C7A81EEAE9654AEF25A7C6B46E617D0D2C00C9215995AC059D482090D727 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x908 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1278 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x11CF JUMP JUMPDEST POP PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93B DUP3 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x944 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x982 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP1 PUSH2 0x584 SWAP1 DUP5 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xB1639A04BDB06EF076A04A28CAA4C5163BD5748DB621BB0180CA81C56DC07D7A SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA22 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081A5B88189B1858DADB1A5CDD PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x602 JUMP JUMPDEST PUSH0 PUSH2 0xA86 DUP4 PUSH2 0x75F JUMP JUMPDEST SWAP1 POP PUSH2 0xA92 DUP4 DUP3 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 SWAP1 PUSH2 0xADA SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x5A4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x75C DUP2 CALLER PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB27 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xB32 DUP3 PUSH0 DUP4 PUSH2 0xE92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB5F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xB32 PUSH0 DUP4 DUP4 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER PUSH2 0xB9D DUP6 DUP3 DUP6 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xBA8 DUP6 DUP6 DUP6 PUSH2 0xD38 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBBE DUP4 DUP4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xC3D JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xBF5 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x47B JUMP JUMPDEST POP PUSH0 PUSH2 0x47B JUMP JUMPDEST PUSH0 PUSH2 0xC4F DUP4 DUP4 PUSH2 0x7B8 JUMP JUMPDEST ISZERO PUSH2 0xC3D JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x47B JUMP JUMPDEST PUSH2 0xCB7 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD03 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xCE4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD61 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD8A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0x5A4 DUP4 DUP4 DUP4 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDE7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x711 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE59 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xE71 DUP3 DUP3 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xB32 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0xE9A PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x5A4 DUP4 DUP4 DUP4 PUSH2 0xF13 JUMP JUMPDEST PUSH0 PUSH2 0xEB0 DUP5 DUP5 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0x711 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x711 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF3D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF9A SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF7C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFB6 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1019 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x104D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x92D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10B9 DUP4 PUSH2 0x1089 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x104D DUP3 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x110F DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP3 POP PUSH2 0x111D PUSH1 0x20 DUP6 ADD PUSH2 0x1089 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1166 PUSH1 0x20 DUP5 ADD PUSH2 0x1089 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1180 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1189 DUP4 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 PUSH1 0x20 DUP5 ADD PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH26 0x21B0B63632B91034B9903737BA10309031B7B73A3937B63632B9 PUSH1 0x31 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0x1203 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID PUSH28 0x765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570 0x22 CALLER JUMPI SWAP16 0x2D CREATE INVALID 0xD2 0xC7 PUSH23 0x48DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C89 JUMP 0xA6 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS BLOCKHASH LOG0 0x26 0xAC 0xE0 DUP7 DUP14 PUSH13 0x3974E857BEEFDF58AE7755F6AE PUSH16 0x8253710FF43F3EC22564736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "266:4253:11:-:0;;;1000:349;;;;;;;;;;1601:113:3;;;;;;;;;;;;;-1:-1:-1;;;1601:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:3;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:3;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;1231:7:8;:15;;-1:-1:-1;;1231:15:8;;;-1:-1:-1;1100:42:11::1;1241:5:8::0;1131:10:11::1;1100;:42::i;:::-;-1:-1:-1::0;1152:39:11::1;373:28;1180:10;1152;:39::i;:::-;-1:-1:-1::0;1201:35:11::1;445:24;1225:10;1201;:35::i;:::-;-1:-1:-1::0;1294:48:11::1;1300:10;1325:16;2780:2:3::0;1325::11::1;:16;:::i;:::-;1312:29;::::0;:10:::1;:29;:::i;:::-;1294:5;:48::i;:::-;266:4253:::0;;6179:316:0;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:7;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;7458:208:3:-;-1:-1:-1;;;;;7528:21:3;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:3;;7601:1;7572:32;;;4538:51:12;4511:18;;7572:32:3;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;1113:145:5:-;1474:19:8;:17;:19::i;:::-;1221:30:5::1;1235:4:::0;1241:2;1245:5;1221:13:::1;:30::i;:::-;1113:145:::0;;;:::o;2002:128:8:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:8;;;;;;;;;;;2063:61;2002:128::o;6008:1107:3:-;-1:-1:-1;;;;;6097:18:3;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:3;;-1:-1:-1;6093:540:3;;-1:-1:-1;;;;;6307:15:3;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:3;;-1:-1:-1;;;;;4950:32:12;;6386:50:3;;;4932:51:12;4999:18;;;4992:34;;;5042:18;;;5035:34;;;4905:18;;6386:50:3;4730:345:12;6336:115:3;-1:-1:-1;;;;;6571:15:3;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:3;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:3;7092:4;-1:-1:-1;;;;;7083:25:3;;7102:5;7083:25;;;;5226::12;;5214:2;5199:18;;5080:177;7083:25:3;;;;;;;;6008:1107;;;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:12;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:12;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:12;;;2500:26;2451:89;-1:-1:-1;;1308:1:12;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:12;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:12;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:12;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:12:o;2655:127::-;2716:10;2711:3;2707:20;2704:1;2697:31;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2787:375;2875:1;2893:5;2907:249;2928:1;2918:8;2915:15;2907:249;;;2978:4;2973:3;2969:14;2963:4;2960:24;2957:50;;;2987:18;;:::i;:::-;3037:1;3027:8;3023:16;3020:49;;;3051:16;;;;3020:49;3134:1;3130:16;;;;;3090:15;;2907:249;;;2787:375;;;;;;:::o;3167:902::-;3216:5;3246:8;3236:80;;-1:-1:-1;3287:1:12;3301:5;;3236:80;3335:4;3325:76;;-1:-1:-1;3372:1:12;3386:5;;3325:76;3417:4;3435:1;3430:59;;;;3503:1;3498:174;;;;3410:262;;3430:59;3460:1;3451:10;;3474:5;;;3498:174;3535:3;3525:8;3522:17;3519:43;;;3542:18;;:::i;:::-;-1:-1:-1;;3598:1:12;3584:16;;3657:5;;3410:262;;3756:2;3746:8;3743:16;3737:3;3731:4;3728:13;3724:36;3718:2;3708:8;3705:16;3700:2;3694:4;3691:12;3687:35;3684:77;3681:203;;;-1:-1:-1;3793:19:12;;;3869:5;;3681:203;3916:42;-1:-1:-1;;3941:8:12;3935:4;3916:42;:::i;:::-;3994:6;3990:1;3986:6;3982:19;3973:7;3970:32;3967:58;;;4005:18;;:::i;:::-;4043:20;;3167:902;-1:-1:-1;;;3167:902:12:o;4074:140::-;4132:5;4161:47;4202:4;4192:8;4188:19;4182:4;4161:47;:::i;:::-;4152:56;4074:140;-1:-1:-1;;;4074:140:12:o;4219:168::-;4292:9;;;4323;;4340:15;;;4334:22;;4320:37;4310:71;;4361:18;;:::i;4600:125::-;4665:9;;;4686:10;;;4683:36;;;4699:18;;:::i;5080:177::-;266:4253:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CONTROLLER_ROLE_1368": {
									"entryPoint": null,
									"id": 1368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1373": {
									"entryPoint": null,
									"id": 1373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 2791,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 3477,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_903": {
									"entryPoint": 2814,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 3687,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2804,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2995,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 2870,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1180": {
									"entryPoint": null,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1298": {
									"entryPoint": 3323,
									"id": 1298,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1269": {
									"entryPoint": 2922,
									"id": 1269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1282": {
									"entryPoint": 3824,
									"id": 1282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 3140,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 3749,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 3384,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1314": {
									"entryPoint": 3247,
									"id": 1314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1141": {
									"entryPoint": 3730,
									"id": 1141,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 3859,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addBlackList_1615": {
									"entryPoint": 1320,
									"id": 1615,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": 2382,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approveByInterface_1784": {
									"entryPoint": 1718,
									"id": 1784,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 1297,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": 1887,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnByOwner_1584": {
									"entryPoint": 1424,
									"id": 1584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@commitToMainnet_1762": {
									"entryPoint": 2513,
									"id": 1762,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@destroyBlackFunds_1670": {
									"entryPoint": 2584,
									"id": 1670,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBlackListStatus_1596": {
									"entryPoint": null,
									"id": 1596,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1698,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1781,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1976,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isBlackListed_1377": {
									"entryPoint": null,
									"id": 1377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintByController_1721": {
									"entryPoint": 2140,
									"id": 1721,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintToAddress_1689": {
									"entryPoint": 1449,
									"id": 1689,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_576": {
									"entryPoint": 1153,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1493": {
									"entryPoint": 1958,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1257": {
									"entryPoint": null,
									"id": 1257,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@receiverAddress_1383": {
									"entryPoint": null,
									"id": 1383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeBlackList_1634": {
									"entryPoint": 2424,
									"id": 1634,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 1815,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2354,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setReceiverAddress_1483": {
									"entryPoint": 1913,
									"id": 1483,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTotalMint_1737": {
									"entryPoint": 2288,
									"id": 1737,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1338": {
									"entryPoint": null,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1099,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 2018,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalMint_1381": {
									"entryPoint": null,
									"id": 1381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1568": {
									"entryPoint": 1566,
									"id": 1568,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 2960,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1534": {
									"entryPoint": 2033,
									"id": 1534,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1503": {
									"entryPoint": 1866,
									"id": 1503,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1adec6c203899a74ef4fe4e8bca442f557f7536e8aa6163d9bda4d1437516580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37fc345b8484d3492ef655f33dbef43266df34e0acca6561e92b2a70319fa0f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7a36cb1eac49f305a518238a067ee7ab67523dfcf4e9f2c68d021215e1d720f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8032:12",
										"nodeType": "YulBlock",
										"src": "0:8032:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:12",
													"nodeType": "YulBlock",
													"src": "83:217:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:12",
																"nodeType": "YulBlock",
																"src": "129:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:12",
																					"nodeType": "YulLiteral",
																					"src": "138:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:12",
																					"nodeType": "YulLiteral",
																					"src": "141:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:12"
																			},
																			"nativeSrc": "131:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:12"
																		},
																		"nativeSrc": "131:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:12"
																		},
																		"nativeSrc": "100:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:12",
																		"nodeType": "YulLiteral",
																		"src": "125:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:12"
																},
																"nativeSrc": "96:32:12",
																"nodeType": "YulFunctionCall",
																"src": "96:32:12"
															},
															"nativeSrc": "93:52:12",
															"nodeType": "YulIf",
															"src": "93:52:12"
														},
														{
															"nativeSrc": "154:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:12"
																},
																"nativeSrc": "167:23:12",
																"nodeType": "YulFunctionCall",
																"src": "167:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:12",
																	"nodeType": "YulTypedName",
																	"src": "158:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:12",
																"nodeType": "YulBlock",
																"src": "254:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:12",
																					"nodeType": "YulLiteral",
																					"src": "263:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:12",
																					"nodeType": "YulLiteral",
																					"src": "266:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:12"
																			},
																			"nativeSrc": "256:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:12"
																		},
																		"nativeSrc": "256:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:12",
																								"nodeType": "YulLiteral",
																								"src": "234:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:12",
																								"nodeType": "YulLiteral",
																								"src": "239:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:12"
																						},
																						"nativeSrc": "230:20:12",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:12"
																				},
																				"nativeSrc": "219:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:12"
																		},
																		"nativeSrc": "209:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:12"
																},
																"nativeSrc": "202:51:12",
																"nodeType": "YulFunctionCall",
																"src": "202:51:12"
															},
															"nativeSrc": "199:71:12",
															"nodeType": "YulIf",
															"src": "199:71:12"
														},
														{
															"nativeSrc": "279:15:12",
															"nodeType": "YulAssignment",
															"src": "279:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:12",
																"nodeType": "YulIdentifier",
																"src": "289:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:12",
														"nodeType": "YulTypedName",
														"src": "49:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:12",
														"nodeType": "YulTypedName",
														"src": "60:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:12",
														"nodeType": "YulTypedName",
														"src": "72:6:12",
														"type": ""
													}
												],
												"src": "14:286:12"
											},
											{
												"body": {
													"nativeSrc": "400:92:12",
													"nodeType": "YulBlock",
													"src": "400:92:12",
													"statements": [
														{
															"nativeSrc": "410:26:12",
															"nodeType": "YulAssignment",
															"src": "410:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:12",
																		"nodeType": "YulLiteral",
																		"src": "433:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:12"
																},
																"nativeSrc": "418:18:12",
																"nodeType": "YulFunctionCall",
																"src": "418:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:12"
																				},
																				"nativeSrc": "470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:12"
																		},
																		"nativeSrc": "463:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:12"
																},
																"nativeSrc": "445:41:12",
																"nodeType": "YulFunctionCall",
																"src": "445:41:12"
															},
															"nativeSrc": "445:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:12",
														"nodeType": "YulTypedName",
														"src": "369:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:12",
														"nodeType": "YulTypedName",
														"src": "380:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:12",
														"nodeType": "YulTypedName",
														"src": "391:4:12",
														"type": ""
													}
												],
												"src": "305:187:12"
											},
											{
												"body": {
													"nativeSrc": "618:297:12",
													"nodeType": "YulBlock",
													"src": "618:297:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "635:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "635:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "646:2:12",
																		"nodeType": "YulLiteral",
																		"src": "646:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "628:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:12"
																},
																"nativeSrc": "628:21:12",
																"nodeType": "YulFunctionCall",
																"src": "628:21:12"
															},
															"nativeSrc": "628:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "628:21:12"
														},
														{
															"nativeSrc": "658:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "658:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "678:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "672:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "672:5:12"
																},
																"nativeSrc": "672:13:12",
																"nodeType": "YulFunctionCall",
																"src": "672:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "662:6:12",
																	"nodeType": "YulTypedName",
																	"src": "662:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "705:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "716:2:12",
																				"nodeType": "YulLiteral",
																				"src": "716:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "701:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "701:3:12"
																		},
																		"nativeSrc": "701:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "701:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "721:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "721:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "694:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:12"
																},
																"nativeSrc": "694:34:12",
																"nodeType": "YulFunctionCall",
																"src": "694:34:12"
															},
															"nativeSrc": "694:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "694:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "747:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "747:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "758:2:12",
																				"nodeType": "YulLiteral",
																				"src": "758:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "743:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:12"
																		},
																		"nativeSrc": "743:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "743:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "767:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:2:12",
																				"nodeType": "YulLiteral",
																				"src": "775:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:12"
																		},
																		"nativeSrc": "763:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "763:15:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "737:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "737:5:12"
																},
																"nativeSrc": "737:50:12",
																"nodeType": "YulFunctionCall",
																"src": "737:50:12"
															},
															"nativeSrc": "737:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "737:50:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "811:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "811:9:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "822:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "822:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "807:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "807:3:12"
																				},
																				"nativeSrc": "807:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "807:22:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "831:2:12",
																				"nodeType": "YulLiteral",
																				"src": "831:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "803:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:12"
																		},
																		"nativeSrc": "803:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "803:31:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "836:1:12",
																		"nodeType": "YulLiteral",
																		"src": "836:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "796:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:12"
																},
																"nativeSrc": "796:42:12",
																"nodeType": "YulFunctionCall",
																"src": "796:42:12"
															},
															"nativeSrc": "796:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:42:12"
														},
														{
															"nativeSrc": "847:62:12",
															"nodeType": "YulAssignment",
															"src": "847:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "863:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "863:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "882:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "882:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "890:2:12",
																								"nodeType": "YulLiteral",
																								"src": "890:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "878:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "878:3:12"
																						},
																						"nativeSrc": "878:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "878:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:2:12",
																								"nodeType": "YulLiteral",
																								"src": "899:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "895:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:12"
																						},
																						"nativeSrc": "895:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "895:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "874:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "874:3:12"
																				},
																				"nativeSrc": "874:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "874:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "859:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:12"
																		},
																		"nativeSrc": "859:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "859:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:2:12",
																		"nodeType": "YulLiteral",
																		"src": "906:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "855:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:12"
																},
																"nativeSrc": "855:54:12",
																"nodeType": "YulFunctionCall",
																"src": "855:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "847:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "497:418:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "587:9:12",
														"nodeType": "YulTypedName",
														"src": "587:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "598:6:12",
														"nodeType": "YulTypedName",
														"src": "598:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "609:4:12",
														"nodeType": "YulTypedName",
														"src": "609:4:12",
														"type": ""
													}
												],
												"src": "497:418:12"
											},
											{
												"body": {
													"nativeSrc": "1021:76:12",
													"nodeType": "YulBlock",
													"src": "1021:76:12",
													"statements": [
														{
															"nativeSrc": "1031:26:12",
															"nodeType": "YulAssignment",
															"src": "1031:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1043:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1043:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1039:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1039:3:12"
																},
																"nativeSrc": "1039:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1039:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1031:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1031:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1073:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1073:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1084:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1084:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1066:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1066:6:12"
																},
																"nativeSrc": "1066:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1066:25:12"
															},
															"nativeSrc": "1066:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1066:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "920:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "990:9:12",
														"nodeType": "YulTypedName",
														"src": "990:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1001:6:12",
														"nodeType": "YulTypedName",
														"src": "1001:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1012:4:12",
														"nodeType": "YulTypedName",
														"src": "1012:4:12",
														"type": ""
													}
												],
												"src": "920:177:12"
											},
											{
												"body": {
													"nativeSrc": "1151:124:12",
													"nodeType": "YulBlock",
													"src": "1151:124:12",
													"statements": [
														{
															"nativeSrc": "1161:29:12",
															"nodeType": "YulAssignment",
															"src": "1161:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1183:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1183:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1170:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1170:12:12"
																},
																"nativeSrc": "1170:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1170:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1161:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1253:16:12",
																"nodeType": "YulBlock",
																"src": "1253:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1262:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1262:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1265:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1265:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1255:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1255:6:12"
																			},
																			"nativeSrc": "1255:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1255:12:12"
																		},
																		"nativeSrc": "1255:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1212:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1212:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1223:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1223:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1238:3:12",
																										"nodeType": "YulLiteral",
																										"src": "1238:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1243:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1243:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1234:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1234:3:12"
																								},
																								"nativeSrc": "1234:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1234:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1247:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1247:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1230:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1230:3:12"
																						},
																						"nativeSrc": "1230:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1230:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1219:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1219:3:12"
																				},
																				"nativeSrc": "1219:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1219:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1209:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1209:2:12"
																		},
																		"nativeSrc": "1209:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1209:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1202:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:12"
																},
																"nativeSrc": "1202:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1202:50:12"
															},
															"nativeSrc": "1199:70:12",
															"nodeType": "YulIf",
															"src": "1199:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1102:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1130:6:12",
														"nodeType": "YulTypedName",
														"src": "1130:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1141:5:12",
														"nodeType": "YulTypedName",
														"src": "1141:5:12",
														"type": ""
													}
												],
												"src": "1102:173:12"
											},
											{
												"body": {
													"nativeSrc": "1367:213:12",
													"nodeType": "YulBlock",
													"src": "1367:213:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1413:16:12",
																"nodeType": "YulBlock",
																"src": "1413:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1422:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1425:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1425:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1415:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1415:6:12"
																			},
																			"nativeSrc": "1415:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1415:12:12"
																		},
																		"nativeSrc": "1415:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1415:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1388:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1388:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1397:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1397:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1384:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:12"
																		},
																		"nativeSrc": "1384:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1384:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1409:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1380:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:12"
																},
																"nativeSrc": "1380:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1380:32:12"
															},
															"nativeSrc": "1377:52:12",
															"nodeType": "YulIf",
															"src": "1377:52:12"
														},
														{
															"nativeSrc": "1438:39:12",
															"nodeType": "YulAssignment",
															"src": "1438:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1467:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1467:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1448:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1448:18:12"
																},
																"nativeSrc": "1448:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1448:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1438:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1438:6:12"
																}
															]
														},
														{
															"nativeSrc": "1486:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1486:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1499:1:12",
																"nodeType": "YulLiteral",
																"src": "1499:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1490:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1490:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1509:41:12",
															"nodeType": "YulAssignment",
															"src": "1509:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1535:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1535:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1546:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1546:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1531:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:12"
																		},
																		"nativeSrc": "1531:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1518:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1518:12:12"
																},
																"nativeSrc": "1518:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1518:32:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1509:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1509:5:12"
																}
															]
														},
														{
															"nativeSrc": "1559:15:12",
															"nodeType": "YulAssignment",
															"src": "1559:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1569:5:12",
																"nodeType": "YulIdentifier",
																"src": "1569:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1559:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1559:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1280:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1325:9:12",
														"nodeType": "YulTypedName",
														"src": "1325:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1336:7:12",
														"nodeType": "YulTypedName",
														"src": "1336:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1348:6:12",
														"nodeType": "YulTypedName",
														"src": "1348:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1356:6:12",
														"nodeType": "YulTypedName",
														"src": "1356:6:12",
														"type": ""
													}
												],
												"src": "1280:300:12"
											},
											{
												"body": {
													"nativeSrc": "1655:116:12",
													"nodeType": "YulBlock",
													"src": "1655:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:12",
																"nodeType": "YulBlock",
																"src": "1701:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:12"
																			},
																			"nativeSrc": "1703:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:12"
																		},
																		"nativeSrc": "1703:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1676:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1676:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1672:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:12"
																		},
																		"nativeSrc": "1672:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1672:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1697:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1668:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1668:3:12"
																},
																"nativeSrc": "1668:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:12"
															},
															"nativeSrc": "1665:52:12",
															"nodeType": "YulIf",
															"src": "1665:52:12"
														},
														{
															"nativeSrc": "1726:39:12",
															"nodeType": "YulAssignment",
															"src": "1726:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1755:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1755:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1736:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1736:18:12"
																},
																"nativeSrc": "1736:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1736:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1585:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1621:9:12",
														"nodeType": "YulTypedName",
														"src": "1621:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1632:7:12",
														"nodeType": "YulTypedName",
														"src": "1632:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1644:6:12",
														"nodeType": "YulTypedName",
														"src": "1644:6:12",
														"type": ""
													}
												],
												"src": "1585:186:12"
											},
											{
												"body": {
													"nativeSrc": "1877:102:12",
													"nodeType": "YulBlock",
													"src": "1877:102:12",
													"statements": [
														{
															"nativeSrc": "1887:26:12",
															"nodeType": "YulAssignment",
															"src": "1887:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1899:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1899:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1910:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1910:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1895:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:12"
																},
																"nativeSrc": "1895:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1895:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1887:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1887:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1929:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1929:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1944:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1944:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1960:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1960:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1965:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1965:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1956:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1956:3:12"
																						},
																						"nativeSrc": "1956:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1956:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1969:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1969:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1952:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1952:3:12"
																				},
																				"nativeSrc": "1952:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1952:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1940:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1940:3:12"
																		},
																		"nativeSrc": "1940:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1940:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1922:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:6:12"
																},
																"nativeSrc": "1922:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1922:51:12"
															},
															"nativeSrc": "1922:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1922:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1776:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1846:9:12",
														"nodeType": "YulTypedName",
														"src": "1846:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1857:6:12",
														"nodeType": "YulTypedName",
														"src": "1857:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1868:4:12",
														"nodeType": "YulTypedName",
														"src": "1868:4:12",
														"type": ""
													}
												],
												"src": "1776:203:12"
											},
											{
												"body": {
													"nativeSrc": "2085:76:12",
													"nodeType": "YulBlock",
													"src": "2085:76:12",
													"statements": [
														{
															"nativeSrc": "2095:26:12",
															"nodeType": "YulAssignment",
															"src": "2095:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2107:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2107:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2118:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2118:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2103:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:12"
																},
																"nativeSrc": "2103:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2103:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2095:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2095:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2137:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2137:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2148:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2148:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2130:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2130:6:12"
																},
																"nativeSrc": "2130:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2130:25:12"
															},
															"nativeSrc": "2130:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2130:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1984:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2054:9:12",
														"nodeType": "YulTypedName",
														"src": "2054:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2065:6:12",
														"nodeType": "YulTypedName",
														"src": "2065:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2076:4:12",
														"nodeType": "YulTypedName",
														"src": "2076:4:12",
														"type": ""
													}
												],
												"src": "1984:177:12"
											},
											{
												"body": {
													"nativeSrc": "2270:270:12",
													"nodeType": "YulBlock",
													"src": "2270:270:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2316:16:12",
																"nodeType": "YulBlock",
																"src": "2316:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2325:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2325:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2328:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2318:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2318:6:12"
																			},
																			"nativeSrc": "2318:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2318:12:12"
																		},
																		"nativeSrc": "2318:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2318:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2291:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2291:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2300:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2300:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2287:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2287:3:12"
																		},
																		"nativeSrc": "2287:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2312:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2283:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:12"
																},
																"nativeSrc": "2283:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2283:32:12"
															},
															"nativeSrc": "2280:52:12",
															"nodeType": "YulIf",
															"src": "2280:52:12"
														},
														{
															"nativeSrc": "2341:39:12",
															"nodeType": "YulAssignment",
															"src": "2341:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2370:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2370:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2351:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2351:18:12"
																},
																"nativeSrc": "2351:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2351:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2341:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2341:6:12"
																}
															]
														},
														{
															"nativeSrc": "2389:48:12",
															"nodeType": "YulAssignment",
															"src": "2389:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2422:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2422:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2433:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2433:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2418:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2418:3:12"
																		},
																		"nativeSrc": "2418:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2399:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2399:18:12"
																},
																"nativeSrc": "2399:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2399:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2389:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:12"
																}
															]
														},
														{
															"nativeSrc": "2446:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2446:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2459:1:12",
																"nodeType": "YulLiteral",
																"src": "2459:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2450:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2450:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2469:41:12",
															"nodeType": "YulAssignment",
															"src": "2469:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2495:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2495:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2506:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2506:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2491:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2491:3:12"
																		},
																		"nativeSrc": "2491:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2491:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2478:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2478:12:12"
																},
																"nativeSrc": "2478:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2478:32:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2469:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2469:5:12"
																}
															]
														},
														{
															"nativeSrc": "2519:15:12",
															"nodeType": "YulAssignment",
															"src": "2519:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2529:5:12",
																"nodeType": "YulIdentifier",
																"src": "2529:5:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2519:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2519:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2166:374:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2220:9:12",
														"nodeType": "YulTypedName",
														"src": "2220:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2231:7:12",
														"nodeType": "YulTypedName",
														"src": "2231:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2243:6:12",
														"nodeType": "YulTypedName",
														"src": "2243:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2251:6:12",
														"nodeType": "YulTypedName",
														"src": "2251:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2259:6:12",
														"nodeType": "YulTypedName",
														"src": "2259:6:12",
														"type": ""
													}
												],
												"src": "2166:374:12"
											},
											{
												"body": {
													"nativeSrc": "2615:156:12",
													"nodeType": "YulBlock",
													"src": "2615:156:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2661:16:12",
																"nodeType": "YulBlock",
																"src": "2661:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2670:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2670:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2673:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2673:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2663:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2663:6:12"
																			},
																			"nativeSrc": "2663:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2663:12:12"
																		},
																		"nativeSrc": "2663:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2663:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2636:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2636:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2645:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2645:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2632:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2632:3:12"
																		},
																		"nativeSrc": "2632:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2632:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2657:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2657:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2628:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2628:3:12"
																},
																"nativeSrc": "2628:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2628:32:12"
															},
															"nativeSrc": "2625:52:12",
															"nodeType": "YulIf",
															"src": "2625:52:12"
														},
														{
															"nativeSrc": "2686:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2686:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2699:1:12",
																"nodeType": "YulLiteral",
																"src": "2699:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2690:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2690:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2709:32:12",
															"nodeType": "YulAssignment",
															"src": "2709:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2731:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2731:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2718:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2718:12:12"
																},
																"nativeSrc": "2718:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2718:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2709:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2709:5:12"
																}
															]
														},
														{
															"nativeSrc": "2750:15:12",
															"nodeType": "YulAssignment",
															"src": "2750:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2760:5:12",
																"nodeType": "YulIdentifier",
																"src": "2760:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2750:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2545:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2581:9:12",
														"nodeType": "YulTypedName",
														"src": "2581:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2592:7:12",
														"nodeType": "YulTypedName",
														"src": "2592:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2604:6:12",
														"nodeType": "YulTypedName",
														"src": "2604:6:12",
														"type": ""
													}
												],
												"src": "2545:226:12"
											},
											{
												"body": {
													"nativeSrc": "2863:213:12",
													"nodeType": "YulBlock",
													"src": "2863:213:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2909:16:12",
																"nodeType": "YulBlock",
																"src": "2909:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2918:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2918:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2921:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2921:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2911:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2911:6:12"
																			},
																			"nativeSrc": "2911:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2911:12:12"
																		},
																		"nativeSrc": "2911:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2884:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2893:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2880:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:12"
																		},
																		"nativeSrc": "2880:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2905:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2876:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:12"
																},
																"nativeSrc": "2876:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2876:32:12"
															},
															"nativeSrc": "2873:52:12",
															"nodeType": "YulIf",
															"src": "2873:52:12"
														},
														{
															"nativeSrc": "2934:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2934:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2947:1:12",
																"nodeType": "YulLiteral",
																"src": "2947:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2938:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2938:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2957:32:12",
															"nodeType": "YulAssignment",
															"src": "2957:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2979:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2979:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2966:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2966:12:12"
																},
																"nativeSrc": "2966:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2966:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2957:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2957:5:12"
																}
															]
														},
														{
															"nativeSrc": "2998:15:12",
															"nodeType": "YulAssignment",
															"src": "2998:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3008:5:12",
																"nodeType": "YulIdentifier",
																"src": "3008:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2998:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:12"
																}
															]
														},
														{
															"nativeSrc": "3022:48:12",
															"nodeType": "YulAssignment",
															"src": "3022:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3055:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3055:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3066:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3066:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3051:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3051:3:12"
																		},
																		"nativeSrc": "3051:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3051:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3032:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3032:18:12"
																},
																"nativeSrc": "3032:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3032:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3022:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2776:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2821:9:12",
														"nodeType": "YulTypedName",
														"src": "2821:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2832:7:12",
														"nodeType": "YulTypedName",
														"src": "2832:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2844:6:12",
														"nodeType": "YulTypedName",
														"src": "2844:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2852:6:12",
														"nodeType": "YulTypedName",
														"src": "2852:6:12",
														"type": ""
													}
												],
												"src": "2776:300:12"
											},
											{
												"body": {
													"nativeSrc": "3178:87:12",
													"nodeType": "YulBlock",
													"src": "3178:87:12",
													"statements": [
														{
															"nativeSrc": "3188:26:12",
															"nodeType": "YulAssignment",
															"src": "3188:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3200:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3200:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3211:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3211:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3196:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3196:3:12"
																},
																"nativeSrc": "3196:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3196:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3188:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3188:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3230:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3230:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3245:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3253:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3253:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3241:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:12"
																		},
																		"nativeSrc": "3241:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3241:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3223:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:12"
																},
																"nativeSrc": "3223:36:12",
																"nodeType": "YulFunctionCall",
																"src": "3223:36:12"
															},
															"nativeSrc": "3223:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "3223:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3081:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3147:9:12",
														"nodeType": "YulTypedName",
														"src": "3147:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3158:6:12",
														"nodeType": "YulTypedName",
														"src": "3158:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3169:4:12",
														"nodeType": "YulTypedName",
														"src": "3169:4:12",
														"type": ""
													}
												],
												"src": "3081:184:12"
											},
											{
												"body": {
													"nativeSrc": "3340:156:12",
													"nodeType": "YulBlock",
													"src": "3340:156:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3386:16:12",
																"nodeType": "YulBlock",
																"src": "3386:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3395:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3395:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3398:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3398:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3388:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3388:6:12"
																			},
																			"nativeSrc": "3388:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3388:12:12"
																		},
																		"nativeSrc": "3388:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3388:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3361:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3361:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3370:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3370:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3357:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:12"
																		},
																		"nativeSrc": "3357:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3357:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3382:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3382:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3353:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:12"
																},
																"nativeSrc": "3353:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3353:32:12"
															},
															"nativeSrc": "3350:52:12",
															"nodeType": "YulIf",
															"src": "3350:52:12"
														},
														{
															"nativeSrc": "3411:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3411:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3424:1:12",
																"nodeType": "YulLiteral",
																"src": "3424:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3415:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3415:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3434:32:12",
															"nodeType": "YulAssignment",
															"src": "3434:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3456:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3456:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3443:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3443:12:12"
																},
																"nativeSrc": "3443:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3443:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3434:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3434:5:12"
																}
															]
														},
														{
															"nativeSrc": "3475:15:12",
															"nodeType": "YulAssignment",
															"src": "3475:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3485:5:12",
																"nodeType": "YulIdentifier",
																"src": "3485:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3475:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3475:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3270:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3306:9:12",
														"nodeType": "YulTypedName",
														"src": "3306:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3317:7:12",
														"nodeType": "YulTypedName",
														"src": "3317:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3329:6:12",
														"nodeType": "YulTypedName",
														"src": "3329:6:12",
														"type": ""
													}
												],
												"src": "3270:226:12"
											},
											{
												"body": {
													"nativeSrc": "3588:173:12",
													"nodeType": "YulBlock",
													"src": "3588:173:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3634:16:12",
																"nodeType": "YulBlock",
																"src": "3634:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3643:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3643:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3646:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3646:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3636:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3636:6:12"
																			},
																			"nativeSrc": "3636:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3636:12:12"
																		},
																		"nativeSrc": "3636:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3636:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3609:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3609:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3618:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3618:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3605:3:12"
																		},
																		"nativeSrc": "3605:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3605:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3630:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3630:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3601:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3601:3:12"
																},
																"nativeSrc": "3601:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3601:32:12"
															},
															"nativeSrc": "3598:52:12",
															"nodeType": "YulIf",
															"src": "3598:52:12"
														},
														{
															"nativeSrc": "3659:39:12",
															"nodeType": "YulAssignment",
															"src": "3659:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3688:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3688:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3669:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3669:18:12"
																},
																"nativeSrc": "3669:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3669:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3659:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3659:6:12"
																}
															]
														},
														{
															"nativeSrc": "3707:48:12",
															"nodeType": "YulAssignment",
															"src": "3707:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3740:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3740:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3736:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3736:3:12"
																		},
																		"nativeSrc": "3736:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3736:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3717:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3717:18:12"
																},
																"nativeSrc": "3717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3717:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3707:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3707:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3501:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3546:9:12",
														"nodeType": "YulTypedName",
														"src": "3546:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3557:7:12",
														"nodeType": "YulTypedName",
														"src": "3557:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3569:6:12",
														"nodeType": "YulTypedName",
														"src": "3569:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3577:6:12",
														"nodeType": "YulTypedName",
														"src": "3577:6:12",
														"type": ""
													}
												],
												"src": "3501:260:12"
											},
											{
												"body": {
													"nativeSrc": "3821:325:12",
													"nodeType": "YulBlock",
													"src": "3821:325:12",
													"statements": [
														{
															"nativeSrc": "3831:22:12",
															"nodeType": "YulAssignment",
															"src": "3831:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3845:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3845:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3848:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3848:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3841:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:12"
																},
																"nativeSrc": "3841:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3841:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3831:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:12"
																}
															]
														},
														{
															"nativeSrc": "3862:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3892:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3898:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3888:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:12"
																},
																"nativeSrc": "3888:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3888:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3866:18:12",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3939:31:12",
																"nodeType": "YulBlock",
																"src": "3939:31:12",
																"statements": [
																	{
																		"nativeSrc": "3941:27:12",
																		"nodeType": "YulAssignment",
																		"src": "3941:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3955:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3955:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3963:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3963:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3951:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3951:3:12"
																			},
																			"nativeSrc": "3951:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3951:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3941:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3941:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3919:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3912:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:12"
																},
																"nativeSrc": "3912:26:12",
																"nodeType": "YulFunctionCall",
																"src": "3912:26:12"
															},
															"nativeSrc": "3909:61:12",
															"nodeType": "YulIf",
															"src": "3909:61:12"
														},
														{
															"body": {
																"nativeSrc": "4029:111:12",
																"nodeType": "YulBlock",
																"src": "4029:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4050:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4050:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4057:3:12",
																							"nodeType": "YulLiteral",
																							"src": "4057:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4062:10:12",
																							"nodeType": "YulLiteral",
																							"src": "4062:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4053:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4053:3:12"
																					},
																					"nativeSrc": "4053:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4053:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4043:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4043:6:12"
																			},
																			"nativeSrc": "4043:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4043:31:12"
																		},
																		"nativeSrc": "4043:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4043:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4094:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4094:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4097:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4097:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4087:6:12"
																			},
																			"nativeSrc": "4087:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:15:12"
																		},
																		"nativeSrc": "4087:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4087:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4122:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4122:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4125:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4125:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4115:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4115:6:12"
																			},
																			"nativeSrc": "4115:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4115:15:12"
																		},
																		"nativeSrc": "4115:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4115:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3985:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3985:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4008:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4008:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4005:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4005:2:12"
																		},
																		"nativeSrc": "4005:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3982:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3982:2:12"
																},
																"nativeSrc": "3982:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3982:38:12"
															},
															"nativeSrc": "3979:161:12",
															"nodeType": "YulIf",
															"src": "3979:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3766:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3801:4:12",
														"nodeType": "YulTypedName",
														"src": "3801:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3810:6:12",
														"nodeType": "YulTypedName",
														"src": "3810:6:12",
														"type": ""
													}
												],
												"src": "3766:380:12"
											},
											{
												"body": {
													"nativeSrc": "4325:172:12",
													"nodeType": "YulBlock",
													"src": "4325:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4342:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4342:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4335:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4335:6:12"
																},
																"nativeSrc": "4335:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4335:21:12"
															},
															"nativeSrc": "4335:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4335:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4376:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4376:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4387:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4387:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4372:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4372:3:12"
																		},
																		"nativeSrc": "4372:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4372:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4392:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4392:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4365:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4365:6:12"
																},
																"nativeSrc": "4365:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4365:30:12"
															},
															"nativeSrc": "4365:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4365:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4415:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4415:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4426:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4426:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4411:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:12"
																		},
																		"nativeSrc": "4411:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4411:18:12"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742061206d696e746572",
																		"kind": "string",
																		"nativeSrc": "4431:24:12",
																		"nodeType": "YulLiteral",
																		"src": "4431:24:12",
																		"type": "",
																		"value": "Caller is not a minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4404:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:12"
																},
																"nativeSrc": "4404:52:12",
																"nodeType": "YulFunctionCall",
																"src": "4404:52:12"
															},
															"nativeSrc": "4404:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "4404:52:12"
														},
														{
															"nativeSrc": "4465:26:12",
															"nodeType": "YulAssignment",
															"src": "4465:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:12"
																},
																"nativeSrc": "4473:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4151:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4302:9:12",
														"nodeType": "YulTypedName",
														"src": "4302:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4316:4:12",
														"nodeType": "YulTypedName",
														"src": "4316:4:12",
														"type": ""
													}
												],
												"src": "4151:346:12"
											},
											{
												"body": {
													"nativeSrc": "4676:177:12",
													"nodeType": "YulBlock",
													"src": "4676:177:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:12"
																},
																"nativeSrc": "4686:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:12"
															},
															"nativeSrc": "4686:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:12"
																		},
																		"nativeSrc": "4723:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:12"
																},
																"nativeSrc": "4716:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:12"
															},
															"nativeSrc": "4716:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:12"
																		},
																		"nativeSrc": "4762:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:12"
																	},
																	{
																		"hexValue": "46726f6d206164647265737320697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "4782:29:12",
																		"nodeType": "YulLiteral",
																		"src": "4782:29:12",
																		"type": "",
																		"value": "From address is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:12"
																},
																"nativeSrc": "4755:57:12",
																"nodeType": "YulFunctionCall",
																"src": "4755:57:12"
															},
															"nativeSrc": "4755:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "4755:57:12"
														},
														{
															"nativeSrc": "4821:26:12",
															"nodeType": "YulAssignment",
															"src": "4821:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4833:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4833:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4844:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4844:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4829:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:12"
																},
																"nativeSrc": "4829:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4821:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7a36cb1eac49f305a518238a067ee7ab67523dfcf4e9f2c68d021215e1d720f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:12",
														"nodeType": "YulTypedName",
														"src": "4653:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:12",
														"nodeType": "YulTypedName",
														"src": "4667:4:12",
														"type": ""
													}
												],
												"src": "4502:351:12"
											},
											{
												"body": {
													"nativeSrc": "5032:176:12",
													"nodeType": "YulBlock",
													"src": "5032:176:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5049:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5049:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5060:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5060:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5042:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5042:6:12"
																},
																"nativeSrc": "5042:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5042:21:12"
															},
															"nativeSrc": "5042:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5042:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5083:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5083:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5094:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5094:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5079:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:12"
																		},
																		"nativeSrc": "5079:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5079:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5099:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5099:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5072:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5072:6:12"
																},
																"nativeSrc": "5072:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5072:30:12"
															},
															"nativeSrc": "5072:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5072:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5122:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5122:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5133:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5133:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5118:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5118:3:12"
																		},
																		"nativeSrc": "5118:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5118:18:12"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f74206120636f6e74726f6c6c6572",
																		"kind": "string",
																		"nativeSrc": "5138:28:12",
																		"nodeType": "YulLiteral",
																		"src": "5138:28:12",
																		"type": "",
																		"value": "Caller is not a controller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5111:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5111:6:12"
																},
																"nativeSrc": "5111:56:12",
																"nodeType": "YulFunctionCall",
																"src": "5111:56:12"
															},
															"nativeSrc": "5111:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "5111:56:12"
														},
														{
															"nativeSrc": "5176:26:12",
															"nodeType": "YulAssignment",
															"src": "5176:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5188:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5188:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5199:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5199:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5184:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5184:3:12"
																},
																"nativeSrc": "5184:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5184:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5176:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5176:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1adec6c203899a74ef4fe4e8bca442f557f7536e8aa6163d9bda4d1437516580__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4858:350:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5009:9:12",
														"nodeType": "YulTypedName",
														"src": "5009:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5023:4:12",
														"nodeType": "YulTypedName",
														"src": "5023:4:12",
														"type": ""
													}
												],
												"src": "4858:350:12"
											},
											{
												"body": {
													"nativeSrc": "5387:171:12",
													"nodeType": "YulBlock",
													"src": "5387:171:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5404:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5404:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5415:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5397:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5397:6:12"
																},
																"nativeSrc": "5397:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5397:21:12"
															},
															"nativeSrc": "5397:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5397:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5438:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5438:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5449:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5449:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5434:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5434:3:12"
																		},
																		"nativeSrc": "5434:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5434:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5454:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:12"
																},
																"nativeSrc": "5427:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5427:30:12"
															},
															"nativeSrc": "5427:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5427:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5477:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5477:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5488:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5488:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5473:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:12"
																		},
																		"nativeSrc": "5473:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:18:12"
																	},
																	{
																		"hexValue": "53656e64657220697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "5493:23:12",
																		"nodeType": "YulLiteral",
																		"src": "5493:23:12",
																		"type": "",
																		"value": "Sender is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5466:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5466:6:12"
																},
																"nativeSrc": "5466:51:12",
																"nodeType": "YulFunctionCall",
																"src": "5466:51:12"
															},
															"nativeSrc": "5466:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "5466:51:12"
														},
														{
															"nativeSrc": "5526:26:12",
															"nodeType": "YulAssignment",
															"src": "5526:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5538:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5538:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5549:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5549:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5534:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:12"
																},
																"nativeSrc": "5534:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5534:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5526:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5526:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5213:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5364:9:12",
														"nodeType": "YulTypedName",
														"src": "5364:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5378:4:12",
														"nodeType": "YulTypedName",
														"src": "5378:4:12",
														"type": ""
													}
												],
												"src": "5213:345:12"
											},
											{
												"body": {
													"nativeSrc": "5595:95:12",
													"nodeType": "YulBlock",
													"src": "5595:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5612:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5619:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5619:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5624:10:12",
																				"nodeType": "YulLiteral",
																				"src": "5624:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5615:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5615:3:12"
																		},
																		"nativeSrc": "5615:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5615:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5605:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:12"
																},
																"nativeSrc": "5605:31:12",
																"nodeType": "YulFunctionCall",
																"src": "5605:31:12"
															},
															"nativeSrc": "5605:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "5605:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5652:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5652:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5655:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5655:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5645:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5645:6:12"
																},
																"nativeSrc": "5645:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5645:15:12"
															},
															"nativeSrc": "5645:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5645:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5676:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5676:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5679:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5669:6:12"
																},
																"nativeSrc": "5669:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5669:15:12"
															},
															"nativeSrc": "5669:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5669:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5563:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5563:127:12"
											},
											{
												"body": {
													"nativeSrc": "5743:77:12",
													"nodeType": "YulBlock",
													"src": "5743:77:12",
													"statements": [
														{
															"nativeSrc": "5753:16:12",
															"nodeType": "YulAssignment",
															"src": "5753:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5764:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5764:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5767:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5767:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5760:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5760:3:12"
																},
																"nativeSrc": "5760:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5760:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5753:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5792:22:12",
																"nodeType": "YulBlock",
																"src": "5792:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5794:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5794:16:12"
																			},
																			"nativeSrc": "5794:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5794:18:12"
																		},
																		"nativeSrc": "5794:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5794:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5784:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5784:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5787:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5787:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5781:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5781:2:12"
																},
																"nativeSrc": "5781:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5781:10:12"
															},
															"nativeSrc": "5778:36:12",
															"nodeType": "YulIf",
															"src": "5778:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5695:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5726:1:12",
														"nodeType": "YulTypedName",
														"src": "5726:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5729:1:12",
														"nodeType": "YulTypedName",
														"src": "5729:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5735:3:12",
														"nodeType": "YulTypedName",
														"src": "5735:3:12",
														"type": ""
													}
												],
												"src": "5695:125:12"
											},
											{
												"body": {
													"nativeSrc": "6010:258:12",
													"nodeType": "YulBlock",
													"src": "6010:258:12",
													"statements": [
														{
															"nativeSrc": "6020:27:12",
															"nodeType": "YulAssignment",
															"src": "6020:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6032:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6032:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6043:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6043:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6028:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6028:3:12"
																},
																"nativeSrc": "6028:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6028:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6020:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6020:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6063:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6063:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6078:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6078:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6094:3:12",
																								"nodeType": "YulLiteral",
																								"src": "6094:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6099:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6099:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6090:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6090:3:12"
																						},
																						"nativeSrc": "6090:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6090:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6103:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6103:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6086:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6086:3:12"
																				},
																				"nativeSrc": "6086:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6086:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6074:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:12"
																		},
																		"nativeSrc": "6074:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6074:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6056:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6056:6:12"
																},
																"nativeSrc": "6056:51:12",
																"nodeType": "YulFunctionCall",
																"src": "6056:51:12"
															},
															"nativeSrc": "6056:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "6056:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6127:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6127:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6138:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6138:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6123:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6123:3:12"
																		},
																		"nativeSrc": "6123:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6123:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6147:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6147:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6163:3:12",
																								"nodeType": "YulLiteral",
																								"src": "6163:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6168:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6168:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6159:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6159:3:12"
																						},
																						"nativeSrc": "6159:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6159:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6172:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6172:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6155:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6155:3:12"
																				},
																				"nativeSrc": "6155:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6155:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6143:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6143:3:12"
																		},
																		"nativeSrc": "6143:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6143:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6116:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6116:6:12"
																},
																"nativeSrc": "6116:60:12",
																"nodeType": "YulFunctionCall",
																"src": "6116:60:12"
															},
															"nativeSrc": "6116:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "6116:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6207:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:12"
																		},
																		"nativeSrc": "6192:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6212:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6212:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6185:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:12"
																},
																"nativeSrc": "6185:34:12",
																"nodeType": "YulFunctionCall",
																"src": "6185:34:12"
															},
															"nativeSrc": "6185:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "6185:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6239:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6239:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6250:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6250:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6235:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:12"
																		},
																		"nativeSrc": "6235:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6235:18:12"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6255:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6228:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:12"
																},
																"nativeSrc": "6228:34:12",
																"nodeType": "YulFunctionCall",
																"src": "6228:34:12"
															},
															"nativeSrc": "6228:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "6228:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5825:443:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5955:9:12",
														"nodeType": "YulTypedName",
														"src": "5955:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5966:6:12",
														"nodeType": "YulTypedName",
														"src": "5966:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5974:6:12",
														"nodeType": "YulTypedName",
														"src": "5974:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5982:6:12",
														"nodeType": "YulTypedName",
														"src": "5982:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5990:6:12",
														"nodeType": "YulTypedName",
														"src": "5990:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6001:4:12",
														"nodeType": "YulTypedName",
														"src": "6001:4:12",
														"type": ""
													}
												],
												"src": "5825:443:12"
											},
											{
												"body": {
													"nativeSrc": "6430:214:12",
													"nodeType": "YulBlock",
													"src": "6430:214:12",
													"statements": [
														{
															"nativeSrc": "6440:26:12",
															"nodeType": "YulAssignment",
															"src": "6440:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6452:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6452:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6463:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6463:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6448:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6448:3:12"
																},
																"nativeSrc": "6448:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6448:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6440:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6440:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6482:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6482:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6497:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6513:3:12",
																								"nodeType": "YulLiteral",
																								"src": "6513:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6518:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6518:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6509:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6509:3:12"
																						},
																						"nativeSrc": "6509:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6509:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6522:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6522:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6505:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6505:3:12"
																				},
																				"nativeSrc": "6505:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6505:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6493:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6493:3:12"
																		},
																		"nativeSrc": "6493:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6493:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6475:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6475:6:12"
																},
																"nativeSrc": "6475:51:12",
																"nodeType": "YulFunctionCall",
																"src": "6475:51:12"
															},
															"nativeSrc": "6475:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "6475:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6546:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6557:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6557:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6542:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6542:3:12"
																		},
																		"nativeSrc": "6542:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6542:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6562:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6562:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6535:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:12"
																},
																"nativeSrc": "6535:34:12",
																"nodeType": "YulFunctionCall",
																"src": "6535:34:12"
															},
															"nativeSrc": "6535:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "6535:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6589:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6589:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6600:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6600:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6585:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6585:3:12"
																		},
																		"nativeSrc": "6585:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6585:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6609:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6609:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6625:3:12",
																								"nodeType": "YulLiteral",
																								"src": "6625:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6630:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6630:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6621:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6621:3:12"
																						},
																						"nativeSrc": "6621:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6621:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6634:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6634:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6617:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:12"
																				},
																				"nativeSrc": "6617:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6617:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6605:3:12"
																		},
																		"nativeSrc": "6605:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6605:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6578:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6578:6:12"
																},
																"nativeSrc": "6578:60:12",
																"nodeType": "YulFunctionCall",
																"src": "6578:60:12"
															},
															"nativeSrc": "6578:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "6578:60:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6273:371:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6383:9:12",
														"nodeType": "YulTypedName",
														"src": "6383:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6394:6:12",
														"nodeType": "YulTypedName",
														"src": "6394:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6402:6:12",
														"nodeType": "YulTypedName",
														"src": "6402:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6410:6:12",
														"nodeType": "YulTypedName",
														"src": "6410:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6421:4:12",
														"nodeType": "YulTypedName",
														"src": "6421:4:12",
														"type": ""
													}
												],
												"src": "6273:371:12"
											},
											{
												"body": {
													"nativeSrc": "6823:166:12",
													"nodeType": "YulBlock",
													"src": "6823:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6840:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6840:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6851:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6851:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6833:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6833:6:12"
																},
																"nativeSrc": "6833:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6833:21:12"
															},
															"nativeSrc": "6833:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6833:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6874:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6874:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6885:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6885:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6870:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6870:3:12"
																		},
																		"nativeSrc": "6870:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6870:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6890:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6890:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6863:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6863:6:12"
																},
																"nativeSrc": "6863:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6863:30:12"
															},
															"nativeSrc": "6863:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6863:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6913:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6913:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6924:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6924:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6909:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6909:3:12"
																		},
																		"nativeSrc": "6909:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6909:18:12"
																	},
																	{
																		"hexValue": "4e6f7420696e20626c61636b6c697374",
																		"kind": "string",
																		"nativeSrc": "6929:18:12",
																		"nodeType": "YulLiteral",
																		"src": "6929:18:12",
																		"type": "",
																		"value": "Not in blacklist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6902:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6902:6:12"
																},
																"nativeSrc": "6902:46:12",
																"nodeType": "YulFunctionCall",
																"src": "6902:46:12"
															},
															"nativeSrc": "6902:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "6902:46:12"
														},
														{
															"nativeSrc": "6957:26:12",
															"nodeType": "YulAssignment",
															"src": "6957:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6969:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6969:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6980:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6980:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6965:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6965:3:12"
																},
																"nativeSrc": "6965:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6965:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6957:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6957:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37fc345b8484d3492ef655f33dbef43266df34e0acca6561e92b2a70319fa0f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6649:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6800:9:12",
														"nodeType": "YulTypedName",
														"src": "6800:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6814:4:12",
														"nodeType": "YulTypedName",
														"src": "6814:4:12",
														"type": ""
													}
												],
												"src": "6649:340:12"
											},
											{
												"body": {
													"nativeSrc": "7043:79:12",
													"nodeType": "YulBlock",
													"src": "7043:79:12",
													"statements": [
														{
															"nativeSrc": "7053:17:12",
															"nodeType": "YulAssignment",
															"src": "7053:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7065:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7065:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7068:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7068:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7061:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:12"
																},
																"nativeSrc": "7061:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7061:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7053:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7053:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7094:22:12",
																"nodeType": "YulBlock",
																"src": "7094:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7096:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7096:16:12"
																			},
																			"nativeSrc": "7096:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7096:18:12"
																		},
																		"nativeSrc": "7096:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7096:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7085:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7085:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7091:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7091:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7082:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7082:2:12"
																},
																"nativeSrc": "7082:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7082:11:12"
															},
															"nativeSrc": "7079:37:12",
															"nodeType": "YulIf",
															"src": "7079:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6994:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7025:1:12",
														"nodeType": "YulTypedName",
														"src": "7025:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7028:1:12",
														"nodeType": "YulTypedName",
														"src": "7028:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7034:4:12",
														"nodeType": "YulTypedName",
														"src": "7034:4:12",
														"type": ""
													}
												],
												"src": "6994:128:12"
											},
											{
												"body": {
													"nativeSrc": "7256:145:12",
													"nodeType": "YulBlock",
													"src": "7256:145:12",
													"statements": [
														{
															"nativeSrc": "7266:26:12",
															"nodeType": "YulAssignment",
															"src": "7266:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7278:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7278:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7289:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7289:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7274:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7274:3:12"
																},
																"nativeSrc": "7274:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7274:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7266:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7266:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7308:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7308:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7323:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7323:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7339:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7339:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7344:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7344:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7335:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7335:3:12"
																						},
																						"nativeSrc": "7335:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7335:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7348:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7348:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7331:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7331:3:12"
																				},
																				"nativeSrc": "7331:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7331:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7319:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7319:3:12"
																		},
																		"nativeSrc": "7319:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7319:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7301:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7301:6:12"
																},
																"nativeSrc": "7301:51:12",
																"nodeType": "YulFunctionCall",
																"src": "7301:51:12"
															},
															"nativeSrc": "7301:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "7301:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7372:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7372:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7383:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7383:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7368:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:12"
																		},
																		"nativeSrc": "7368:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7368:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7388:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7388:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7361:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7361:6:12"
																},
																"nativeSrc": "7361:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7361:34:12"
															},
															"nativeSrc": "7361:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7361:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7127:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7217:9:12",
														"nodeType": "YulTypedName",
														"src": "7217:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7228:6:12",
														"nodeType": "YulTypedName",
														"src": "7228:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7236:6:12",
														"nodeType": "YulTypedName",
														"src": "7236:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7247:4:12",
														"nodeType": "YulTypedName",
														"src": "7247:4:12",
														"type": ""
													}
												],
												"src": "7127:274:12"
											},
											{
												"body": {
													"nativeSrc": "7535:145:12",
													"nodeType": "YulBlock",
													"src": "7535:145:12",
													"statements": [
														{
															"nativeSrc": "7545:26:12",
															"nodeType": "YulAssignment",
															"src": "7545:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7557:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7557:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7568:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7568:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7553:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:12"
																},
																"nativeSrc": "7553:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7553:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7545:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7545:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7587:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7587:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7602:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7602:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7618:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7618:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7623:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7623:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7614:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7614:3:12"
																						},
																						"nativeSrc": "7614:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7614:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7627:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7627:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7610:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7610:3:12"
																				},
																				"nativeSrc": "7610:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7610:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7598:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:12"
																		},
																		"nativeSrc": "7598:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7598:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7580:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7580:6:12"
																},
																"nativeSrc": "7580:51:12",
																"nodeType": "YulFunctionCall",
																"src": "7580:51:12"
															},
															"nativeSrc": "7580:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "7580:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7651:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7651:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7662:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7662:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7647:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7647:3:12"
																		},
																		"nativeSrc": "7647:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7647:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7667:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7667:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7640:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:12"
																},
																"nativeSrc": "7640:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7640:34:12"
															},
															"nativeSrc": "7640:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7640:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "7406:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7496:9:12",
														"nodeType": "YulTypedName",
														"src": "7496:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7507:6:12",
														"nodeType": "YulTypedName",
														"src": "7507:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7515:6:12",
														"nodeType": "YulTypedName",
														"src": "7515:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7526:4:12",
														"nodeType": "YulTypedName",
														"src": "7526:4:12",
														"type": ""
													}
												],
												"src": "7406:274:12"
											},
											{
												"body": {
													"nativeSrc": "7842:188:12",
													"nodeType": "YulBlock",
													"src": "7842:188:12",
													"statements": [
														{
															"nativeSrc": "7852:26:12",
															"nodeType": "YulAssignment",
															"src": "7852:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7864:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7864:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7875:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7875:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7860:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7860:3:12"
																},
																"nativeSrc": "7860:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7860:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7852:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7852:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7894:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7894:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7909:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7909:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7925:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7925:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7930:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7930:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7921:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7921:3:12"
																						},
																						"nativeSrc": "7921:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7921:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7934:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7934:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7917:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7917:3:12"
																				},
																				"nativeSrc": "7917:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7917:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7905:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7905:3:12"
																		},
																		"nativeSrc": "7905:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7905:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7887:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:12"
																},
																"nativeSrc": "7887:51:12",
																"nodeType": "YulFunctionCall",
																"src": "7887:51:12"
															},
															"nativeSrc": "7887:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "7887:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7958:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7958:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7969:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7969:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7954:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7954:3:12"
																		},
																		"nativeSrc": "7954:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7954:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7974:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7974:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7947:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7947:6:12"
																},
																"nativeSrc": "7947:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7947:34:12"
															},
															"nativeSrc": "7947:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7947:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8001:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8001:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8012:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8012:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7997:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7997:3:12"
																		},
																		"nativeSrc": "7997:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7997:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8017:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8017:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7990:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:12"
																},
																"nativeSrc": "7990:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7990:34:12"
															},
															"nativeSrc": "7990:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7990:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7685:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7795:9:12",
														"nodeType": "YulTypedName",
														"src": "7795:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7806:6:12",
														"nodeType": "YulTypedName",
														"src": "7806:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7814:6:12",
														"nodeType": "YulTypedName",
														"src": "7814:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7822:6:12",
														"nodeType": "YulTypedName",
														"src": "7822:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7833:4:12",
														"nodeType": "YulTypedName",
														"src": "7833:4:12",
														"type": ""
													}
												],
												"src": "7685:345:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Caller is not a minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d7a36cb1eac49f305a518238a067ee7ab67523dfcf4e9f2c68d021215e1d720f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"From address is blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1adec6c203899a74ef4fe4e8bca442f557f7536e8aa6163d9bda4d1437516580__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Caller is not a controller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Sender is blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_37fc345b8484d3492ef655f33dbef43266df34e0acca6561e92b2a70319fa0f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not in blacklist\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x92C5B3B EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x111A18D3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x16FED3E2 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x21CA4236 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x2CB32743 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x59A7715A EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x8279C7DB EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xC68990AD EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xD08027A5 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xEA95C079 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x438 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x1F4 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1278 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x250 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x1F4 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1B6 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH2 0x228 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x1F4 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x1F4 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1298 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x47B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x490 SWAP1 PUSH2 0x1197 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BC SWAP1 PUSH2 0x1197 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x507 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x507 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x51E DUP2 DUP6 DUP6 PUSH2 0xAE7 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x532 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP1 PUSH2 0x584 SWAP1 DUP5 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x59A DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5A4 DUP4 DUP4 PUSH2 0xAFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1298 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA10309036B4B73A32B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x615 DUP4 DUP4 PUSH2 0xB36 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x627 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x119C9BDB481859191C995CDCC81A5CC8189B1858DADB1A5CDD1959 PUSH1 0x2A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x602 JUMP JUMPDEST PUSH0 PUSH2 0x699 DUP6 DUP6 DUP6 PUSH2 0xB90 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6CE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1278 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH2 0x51E DUP5 DUP5 DUP5 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x6FE DUP3 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x707 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 PUSH2 0xBB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A4 DUP3 DUP3 PUSH2 0xC44 JUMP JUMPDEST PUSH0 PUSH2 0x754 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x75C PUSH2 0xCAF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x783 DUP2 PUSH2 0xAF4 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x7B0 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x75C PUSH2 0xCFB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x490 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH0 PUSH2 0x7FA PUSH2 0xB6A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14D95B99195C881A5CC8189B1858DADB1A5CDD1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x602 JUMP JUMPDEST PUSH2 0x615 CALLER DUP5 DUP5 PUSH2 0xD38 JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1278 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x874 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x87E DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0xE481C7A81EEAE9654AEF25A7C6B46E617D0D2C00C9215995AC059D482090D727 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x908 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1278 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x11CF JUMP JUMPDEST POP PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93B DUP3 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x944 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x982 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP1 PUSH2 0x584 SWAP1 DUP5 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xB1639A04BDB06EF076A04A28CAA4C5163BD5748DB621BB0180CA81C56DC07D7A SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA22 DUP2 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081A5B88189B1858DADB1A5CDD PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x602 JUMP JUMPDEST PUSH0 PUSH2 0xA86 DUP4 PUSH2 0x75F JUMP JUMPDEST SWAP1 POP PUSH2 0xA92 DUP4 DUP3 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 SWAP1 PUSH2 0xADA SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x5A4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x75C DUP2 CALLER PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB27 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xB32 DUP3 PUSH0 DUP4 PUSH2 0xE92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB5F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xB32 PUSH0 DUP4 DUP4 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER PUSH2 0xB9D DUP6 DUP3 DUP6 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xBA8 DUP6 DUP6 DUP6 PUSH2 0xD38 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBBE DUP4 DUP4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xC3D JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xBF5 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x47B JUMP JUMPDEST POP PUSH0 PUSH2 0x47B JUMP JUMPDEST PUSH0 PUSH2 0xC4F DUP4 DUP4 PUSH2 0x7B8 JUMP JUMPDEST ISZERO PUSH2 0xC3D JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x47B JUMP JUMPDEST PUSH2 0xCB7 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD03 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xCE4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD61 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD8A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0x5A4 DUP4 DUP4 DUP4 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDE7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x711 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE59 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xE71 DUP3 DUP3 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xB32 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0xE9A PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x5A4 DUP4 DUP4 DUP4 PUSH2 0xF13 JUMP JUMPDEST PUSH0 PUSH2 0xEB0 DUP5 DUP5 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0x711 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x711 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF3D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF9A SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF7C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFB6 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1019 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x104D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x92D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10B9 DUP4 PUSH2 0x1089 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x104D DUP3 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x110F DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP3 POP PUSH2 0x111D PUSH1 0x20 DUP6 ADD PUSH2 0x1089 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1166 PUSH1 0x20 DUP5 ADD PUSH2 0x1089 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1180 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1189 DUP4 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 PUSH1 0x20 DUP5 ADD PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH26 0x21B0B63632B91034B9903737BA10309031B7B73A3937B63632B9 PUSH1 0x31 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0x1203 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID PUSH28 0x765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570 0x22 CALLER JUMPI SWAP16 0x2D CREATE INVALID 0xD2 0xC7 PUSH23 0x48DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C89 JUMP 0xA6 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS BLOCKHASH LOG0 0x26 0xAC 0xE0 DUP7 DUP14 PUSH13 0x3974E857BEEFDF58AE7755F6AE PUSH16 0x8253710FF43F3EC22564736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "266:4253:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:12;;463:22;445:41;;433:2;418:18;2565:202:0;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;331:70:11:-;;-1:-1:-1;;;;;;;;;;;331:70:11;;;;;1066:25:12;;;1054:2;1039:18;331:70:11;920:177:12;3998:186:3;;;;;;:::i;:::-;;:::i;2734:167:11:-;;;;;;:::i;:::-;;:::i;:::-;;2473:131;;;;;;:::i;:::-;;:::i;632:30::-;;;;;-1:-1:-1;;;;;632:30:11;;;;;;;;;;:::i;2849:97:3:-;2927:12;;2849:97;;3469:155:11;;;;;;:::i;:::-;;:::i;2196:271::-;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;;:::i;4330:187:11:-;;;;;;:::i;:::-;;:::i;4226:136:0:-;;;;;;:::i;:::-;;:::i;2707:82:3:-;;;2780:2;3223:36:12;;3211:2;3196:18;2707:82:3;3081:184:12;5328:245:0;;;;;;:::i;:::-;;:::i;1866:84:11:-;;;:::i;602:24::-;;;;;;2610:118;;;;;;:::i;:::-;-1:-1:-1;;;;;2700:21:11;2677:4;2700:21;;;:13;:21;;;;;;;;;2610:118;1850:84:8;1920:7;;;;1850:84;;3004:116:3;;;;;;:::i;:::-;;:::i;1647:127:11:-;;;;;;:::i;:::-;;:::i;1780:80::-;;;:::i;2854:136:0:-;;;;;;:::i;:::-;;:::i;1981:93:3:-;;;:::i;2187:49:0:-;;2232:4;2187:49;;1956:234:11;;;;;;:::i;:::-;;:::i;3630:272::-;;;;;;:::i;:::-;;:::i;3908:130::-;;;;;;:::i;:::-;;:::i;407:62::-;;-1:-1:-1;;;;;;;;;;;407:62:11;;4642:138:0;;;;;;:::i;:::-;;:::i;3551:140:3:-;;;;;;:::i;:::-;;:::i;492:45:11:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2907:182;;;;;;:::i;:::-;;:::i;4112:212::-;;;;;;:::i;:::-;;:::i;3095:368::-;;;;;;:::i;:::-;;:::i;2565:202:0:-;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:9;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;1779:89:3:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:7;4125:31:3;735:10:7;4141:7:3;4150:5;4125:8;:31::i;:::-;-1:-1:-1;4173:4:3;;3998:186;-1:-1:-1;;;3998:186:3:o;2734:167:11:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;2823:24:11;::::1;;::::0;;;:13:::1;:24;::::0;;;;;;:31;;-1:-1:-1;;2823:31:11::1;2850:4;2823:31;::::0;;2869:25;::::1;::::0;::::1;::::0;2837:9;;2869:25:::1;:::i;:::-;;;;;;;;2734:167:::0;;:::o;2473:131::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;2575:22:11::1;2581:7;2590:6;2575:5;:22::i;:::-;2473:131:::0;;;:::o;3469:155::-;3556:4;1547:32;-1:-1:-1;;;;;;;;;;;1568:10:11;1547:7;:32::i;:::-;1539:67;;;;-1:-1:-1;;;1539:67:11;;4353:2:12;1539:67:11;;;4335:21:12;4392:2;4372:18;;;4365:30;-1:-1:-1;;;4411:18:12;;;4404:52;4473:18;;1539:67:11;;;;;;;;;3572:24:::1;3578:9;3589:6;3572:5;:24::i;:::-;-1:-1:-1::0;3613:4:11::1;3469:155:::0;;;;:::o;2196:271::-;2299:4;1474:19:8;:17;:19::i;:::-;-1:-1:-1;;;;;2324:19:11;::::1;;::::0;;;:13:::1;:19;::::0;;;;;::::1;;2323:20;2315:60;;;::::0;-1:-1:-1;;;2315:60:11;;4704:2:12;2315:60:11::1;::::0;::::1;4686:21:12::0;4743:2;4723:18;;;4716:30;-1:-1:-1;;;4762:18:12;;;4755:57;4829:18;;2315:60:11::1;4502:351:12::0;2315:60:11::1;2385:12;2400:36;2419:4;2425:2;2429:6;2400:18;:36::i;:::-;2385:51:::0;2196:271;-1:-1:-1;;;;;2196:271:11:o;3810:120:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120::o;4330:187:11:-;4440:4;1416:36;-1:-1:-1;;;;;;;;;;;1441:10:11;1416:7;:36::i;:::-;1408:75;;;;-1:-1:-1;;;1408:75:11;;;;;;;:::i;:::-;4456:33:::1;4465:6;4473:7;4482:6;4456:8;:33::i;4226:136:0:-:0;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:7;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;1866:84:11:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;1933:10:11::1;:8;:10::i;:::-;1866:84:::0;:::o;3004:116:3:-;-1:-1:-1;;;;;3095:18:3;3069:7;3095:18;;;;;;;;;;;;3004:116::o;1647:127:11:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;1741:15:11::1;:26:::0;;-1:-1:-1;;;;;;1741:26:11::1;-1:-1:-1::0;;;;;1741:26:11;;;::::1;::::0;;;::::1;::::0;;1647:127::o;1780:80::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;1845:8:11::1;:6;:8::i;2854:136:0:-:0;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;1956:234:11:-;2041:4;1474:19:8;:17;:19::i;:::-;2080:10:11::1;2066:25;::::0;;;:13:::1;:25;::::0;;;;;::::1;;2065:26;2057:60;;;::::0;-1:-1:-1;;;2057:60:11;;5415:2:12;2057:60:11::1;::::0;::::1;5397:21:12::0;5454:2;5434:18;;;5427:30;-1:-1:-1;;;5473:18:12;;;5466:51;5534:18;;2057:60:11::1;5213:345:12::0;2057:60:11::1;2127:35;735:10:7::0;2151:2:11::1;2155:6;2127:9;:35::i;3630:272::-:0;3732:4;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;3748:24:11::1;3754:9;3765:6;3748:5;:24::i;:::-;3795:6;3782:9;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3864:9:11::1;::::0;3816:58:::1;::::0;;3833:10:::1;6056:51:12::0;;-1:-1:-1;;;;;6143:32:12;;6138:2;6123:18;;6116:60;6192:18;;;6185:34;;;6250:2;6235:18;;6228:34;;;;3816:58:11;::::1;::::0;;;;6043:3:12;3816:58:11;;::::1;-1:-1:-1::0;3891:4:11::1;::::0;3630:272;-1:-1:-1;;;3630:272:11:o;3908:130::-;3976:4;1416:36;-1:-1:-1;;;;;;;;;;;1441:10:11;1416:7;:36::i;:::-;1408:75;;;;-1:-1:-1;;;1408:75:11;;;;;;;:::i;:::-;-1:-1:-1;3992:9:11::1;:18:::0;;;4027:4:::1;1493:1;3908:130:::0;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;3551:140:3:-:0;-1:-1:-1;;;;;3657:18:3;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140::o;2907:182:11:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3002:27:11;::::1;3032:5;3002:27:::0;;;:13:::1;:27;::::0;;;;;;:35;;-1:-1:-1;;3002:35:11::1;::::0;;3052:30;::::1;::::0;::::1;::::0;3016:12;;3052:30:::1;:::i;4112:212::-:0;4246:41;;;4253:10;6475:51:12;;6557:2;6542:18;;6535:34;;;4168:21:11;6585:18:12;;;6578:60;;;4246:41:11;;6463:2:12;6448:18;4246:41:11;;;;;;;4112:212;;;:::o;3095:368::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3204:31:11;::::1;;::::0;;;:13:::1;:31;::::0;;;;;::::1;;3196:60;;;::::0;-1:-1:-1;;;3196:60:11;;6851:2:12;3196:60:11::1;::::0;::::1;6833:21:12::0;6890:2;6870:18;;;6863:30;-1:-1:-1;;;6909:18:12;;;6902:46;6965:18;;3196:60:11::1;6649:340:12::0;3196:60:11::1;3266:15;3284:27;3294:16;3284:9;:27::i;:::-;3266:45;;3321:35;3327:16;3345:10;3321:5;:35::i;:::-;3382:10;3366:12;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3407:49:11::1;::::0;::::1;::::0;::::1;::::0;3427:16;;3445:10;;3407:49:::1;:::i;:::-;;;;;;;;3186:277;3095:368:::0;;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;3199:103:0:-;3265:30;3276:4;735:10:7;3265::0;:30::i;7984:206:3:-;-1:-1:-1;;;;;8054:21:3;;8050:89;;8125:1;8098:30;;-1:-1:-1;;;8098:30:3;;;;;;;;:::i;8050:89::-;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;7458:208::-;-1:-1:-1;;;;;7528:21:3;;7524:91;;7601:1;7572:32;;-1:-1:-1;;;7572:32:3;;;;;;;;:::i;7524:91::-;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;2002:128:8:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:8;;;;;;;;;;;2063:61;2002:128::o;4776:244:3:-;4863:4;735:10:7;4919:37:3;4935:4;735:10:7;4950:5:3;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:3;;4776:244;-1:-1:-1;;;;4776:244:3:o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:7;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6866:29:0;;;;;;;;;;:37;;-1:-1:-1;;6866:37:0;;;6922:40;735:10:7;;6866:12:0;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:0;6976:11;;2710:117:8;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:8::1;::::0;;2798:22:::1;735:10:7::0;2807:12:8::1;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;2463:115::-;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:8::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:7::0;;656:96;5393:300:3;-1:-1:-1;;;;;5476:18:3;;5472:86;;5544:1;5517:30;;-1:-1:-1;;;5517:30:3;;;;;;;;:::i;5472:86::-;-1:-1:-1;;;;;5571:16:3;;5567:86;;5639:1;5610:32;;-1:-1:-1;;;5610:32:3;;;;;;;;:::i;5567:86::-;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;9701:432::-;-1:-1:-1;;;;;9813:19:3;;9809:89;;9884:1;9855:32;;-1:-1:-1;;;9855:32:3;;;;;;;;:::i;9809:89::-;-1:-1:-1;;;;;9911:21:3;;9907:90;;9983:1;9955:31;;-1:-1:-1;;;9955:31:3;;;;;;;;:::i;9907:90::-;-1:-1:-1;;;;;10006:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:3;10094:5;-1:-1:-1;;;;;10085:31:3;;10110:5;10085:31;;;;1066:25:12;;1054:2;1039:18;;920:177;10085:31:3;;;;;;;;9701:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;-1:-1:-1;;;3565:47:0;;;;;;;;;:::i;1113:145:5:-;1474:19:8;:17;:19::i;:::-;1221:30:5::1;1235:4;1241:2;1245:5;1221:13;:30::i;10415:476:3:-:0;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;-1:-1:-1;;10580:16:3;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;-1:-1:-1;;;10687:60:3;;;;;;;;;;:::i;10632:130::-;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;2202:126:8:-;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:8;;;;;;;;;;;6008:1107:3;-1:-1:-1;;;;;6097:18:3;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:3;;-1:-1:-1;6093:540:3;;-1:-1:-1;;;;;6307:15:3;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6411:4;6417:11;6430:5;6386:50;;-1:-1:-1;;;6386:50:3;;;;;;;;;;:::i;6336:115::-;-1:-1:-1;;;;;6571:15:3;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:3;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:3;7092:4;-1:-1:-1;;;;;7083:25:3;;7102:5;7083:25;;;;1066::12;;1054:2;1039:18;;920:177;7083:25:3;;;;;;;;6008:1107;;;:::o;14:286:12:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:12;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:12:o;497:418::-;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;780:6;775:2;767:6;763:15;758:2;747:9;743:18;737:50;836:1;831:2;822:6;811:9;807:22;803:31;796:42;906:2;899;895:7;890:2;882:6;878:15;874:29;863:9;859:45;855:54;847:62;;;497:418;;;;:::o;1102:173::-;1170:20;;-1:-1:-1;;;;;1219:31:12;;1209:42;;1199:70;;1265:1;1262;1255:12;1280:300;1348:6;1356;1409:2;1397:9;1388:7;1384:23;1380:32;1377:52;;;1425:1;1422;1415:12;1377:52;1448:29;1467:9;1448:29;:::i;:::-;1438:39;1546:2;1531:18;;;;1518:32;;-1:-1:-1;;;1280:300:12:o;1585:186::-;1644:6;1697:2;1685:9;1676:7;1672:23;1668:32;1665:52;;;1713:1;1710;1703:12;1665:52;1736:29;1755:9;1736:29;:::i;1776:203::-;-1:-1:-1;;;;;1940:32:12;;;;1922:51;;1910:2;1895:18;;1776:203::o;2166:374::-;2243:6;2251;2259;2312:2;2300:9;2291:7;2287:23;2283:32;2280:52;;;2328:1;2325;2318:12;2280:52;2351:29;2370:9;2351:29;:::i;:::-;2341:39;;2399:38;2433:2;2422:9;2418:18;2399:38;:::i;:::-;2166:374;;2389:48;;-1:-1:-1;;;2506:2:12;2491:18;;;;2478:32;;2166:374::o;2545:226::-;2604:6;2657:2;2645:9;2636:7;2632:23;2628:32;2625:52;;;2673:1;2670;2663:12;2625:52;-1:-1:-1;2718:23:12;;2545:226;-1:-1:-1;2545:226:12:o;2776:300::-;2844:6;2852;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;2966:23;;;-1:-1:-1;3032:38:12;3066:2;3051:18;;3032:38;:::i;:::-;3022:48;;2776:300;;;;;:::o;3501:260::-;3569:6;3577;3630:2;3618:9;3609:7;3605:23;3601:32;3598:52;;;3646:1;3643;3636:12;3598:52;3669:29;3688:9;3669:29;:::i;:::-;3659:39;;3717:38;3751:2;3740:9;3736:18;3717:38;:::i;3766:380::-;3845:1;3841:12;;;;3888;;;3909:61;;3963:4;3955:6;3951:17;3941:27;;3909:61;4016:2;4008:6;4005:14;3985:18;3982:38;3979:161;;4062:10;4057:3;4053:20;4050:1;4043:31;4097:4;4094:1;4087:15;4125:4;4122:1;4115:15;3979:161;;3766:380;;;:::o;4858:350::-;5060:2;5042:21;;;5099:2;5079:18;;;5072:30;-1:-1:-1;;;5133:2:12;5118:18;;5111:56;5199:2;5184:18;;4858:350::o;5563:127::-;5624:10;5619:3;5615:20;5612:1;5605:31;5655:4;5652:1;5645:15;5679:4;5676:1;5669:15;5695:125;5760:9;;;5781:10;;;5778:36;;;5794:18;;:::i;6994:128::-;7061:9;;;7082:11;;;7079:37;;;7096:18;;:::i;7127:274::-;-1:-1:-1;;;;;7319:32:12;;;;7301:51;;7383:2;7368:18;;7361:34;7289:2;7274:18;;7127:274::o;7685:345::-;-1:-1:-1;;;;;7905:32:12;;;;7887:51;;7969:2;7954:18;;7947:34;;;;8012:2;7997:18;;7990:34;7875:2;7860:18;;7685:345::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "969000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CONTROLLER_ROLE()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "699",
								"MINTER_ROLE()": "infinite",
								"addBlackList(address)": "28181",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24741",
								"approveByInterface(address,address,uint256)": "infinite",
								"balanceOf(address)": "2945",
								"burnByOwner(address,uint256)": "infinite",
								"commitToMainnet(uint256)": "2642",
								"decimals()": "440",
								"destroyBlackFunds(address)": "infinite",
								"getBlackListStatus(address)": "2887",
								"getRoleAdmin(bytes32)": "2651",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3113",
								"isBlackListed(address)": "3177",
								"mintByController(address,uint256)": "infinite",
								"mintToAddress(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2666",
								"receiverAddress()": "2470",
								"removeBlackList(address)": "28791",
								"renounceRole(bytes32,address)": "29310",
								"revokeRole(bytes32,address)": "infinite",
								"setReceiverAddress(address)": "27370",
								"setTotalMint(uint256)": "infinite",
								"supportsInterface(bytes4)": "401",
								"symbol()": "infinite",
								"totalMint()": "2624",
								"totalSupply()": "2423",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 266,
									"end": 4519,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13595D1848111BDB1B185C8814995DD85C99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2AA9A226A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1100,
									"end": 1142,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1141,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1100,
									"end": 1110,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1100,
									"end": 1142,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1100,
									"end": 1142,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1100,
									"end": 1142,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1152,
									"end": 1191,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 373,
									"end": 401,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357"
								},
								{
									"begin": 1180,
									"end": 1190,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1152,
									"end": 1162,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1152,
									"end": 1191,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1152,
									"end": 1191,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1152,
									"end": 1191,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1201,
									"end": 1236,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 445,
									"end": 469,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 1225,
									"end": 1235,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1201,
									"end": 1211,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1201,
									"end": 1236,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1201,
									"end": 1236,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 1201,
									"end": 1236,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1294,
									"end": 1342,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1300,
									"end": 1310,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1325,
									"end": 1341,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1325,
									"end": 1327,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 1325,
									"end": 1341,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1325,
									"end": 1341,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1325,
									"end": 1341,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1325,
									"end": 1341,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1312,
									"end": 1341,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1312,
									"end": 1322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "3B9ACA00"
								},
								{
									"begin": 1312,
									"end": 1341,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1312,
									"end": 1341,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1312,
									"end": 1341,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1312,
									"end": 1341,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1294,
									"end": 1342,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 1342,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1294,
									"end": 1342,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4538,
									"end": 4589,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4511,
									"end": 4529,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4511,
									"end": 4529,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1474,
									"end": 1493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1221,
									"end": 1251,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1235,
									"end": 1239,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1241,
									"end": 1243,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1250,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1221,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1221,
									"end": 1251,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1221,
									"end": 1251,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1221,
									"end": 1251,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D93C0665"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4950,
									"end": 4982,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4982,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4932,
									"end": 4983,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5017,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4999,
									"end": 5017,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5017,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4992,
									"end": 5026,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4992,
									"end": 5026,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4992,
									"end": 5026,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5042,
									"end": 5060,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 5042,
									"end": 5060,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5042,
									"end": 5060,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5035,
									"end": 5069,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5035,
									"end": 5069,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5035,
									"end": 5069,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4905,
									"end": 4923,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 4905,
									"end": 4923,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 4730,
									"end": 5075,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5226,
									"end": 5251,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5226,
									"end": 5251,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5214,
									"end": 5216,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5199,
									"end": 5217,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5199,
									"end": 5217,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5080,
									"end": 5257,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2716,
									"end": 2726,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 2711,
									"end": 2714,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 2707,
									"end": 2727,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2728,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2747,
									"end": 2751,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 2744,
									"end": 2745,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2737,
									"end": 2752,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2771,
									"end": 2775,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2768,
									"end": 2769,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2776,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2875,
									"end": 2876,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2893,
									"end": 2898,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2928,
									"end": 2929,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2918,
									"end": 2926,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2915,
									"end": 2930,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2978,
									"end": 2982,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2973,
									"end": 2976,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2969,
									"end": 2983,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 2963,
									"end": 2967,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2960,
									"end": 2984,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2987,
									"end": 3005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3038,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3027,
									"end": 3035,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3023,
									"end": 3039,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3134,
									"end": 3135,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3090,
									"end": 3105,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3090,
									"end": 3105,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 3162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3221,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3246,
									"end": 3254,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3287,
									"end": 3288,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3301,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3301,
									"end": 3306,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3335,
									"end": 3339,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3372,
									"end": 3373,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3386,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3386,
									"end": 3391,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3417,
									"end": 3421,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3435,
									"end": 3436,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3503,
									"end": 3504,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3460,
									"end": 3461,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3451,
									"end": 3461,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3451,
									"end": 3461,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3535,
									"end": 3538,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3525,
									"end": 3533,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3522,
									"end": 3539,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 3542,
									"end": 3560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3598,
									"end": 3599,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3584,
									"end": 3600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3584,
									"end": 3600,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3657,
									"end": 3662,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3756,
									"end": 3758,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3746,
									"end": 3754,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3743,
									"end": 3759,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3737,
									"end": 3740,
									"name": "PUSH",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 3731,
									"end": 3735,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3728,
									"end": 3741,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3724,
									"end": 3760,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3718,
									"end": 3720,
									"name": "PUSH",
									"source": 12,
									"value": "4E"
								},
								{
									"begin": 3708,
									"end": 3716,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3705,
									"end": 3721,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3700,
									"end": 3702,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 3694,
									"end": 3698,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3691,
									"end": 3703,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3687,
									"end": 3722,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3684,
									"end": 3761,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 3869,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3869,
									"end": 3874,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3941,
									"end": 3949,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3935,
									"end": 3939,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3916,
									"end": 3958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3994,
									"end": 4000,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 3991,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 3992,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3982,
									"end": 4001,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3973,
									"end": 3980,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3970,
									"end": 4002,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 4005,
									"end": 4023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4043,
									"end": 4063,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4043,
									"end": 4063,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3167,
									"end": 4069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4214,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4214,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4132,
									"end": 4137,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4161,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 4192,
									"end": 4200,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4188,
									"end": 4207,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4182,
									"end": 4186,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4161,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 4161,
									"end": 4208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4161,
									"end": 4208,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 4161,
									"end": 4208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4152,
									"end": 4208,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4214,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4074,
									"end": 4214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4219,
									"end": 4387,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 4219,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4301,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4301,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4301,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4340,
									"end": 4355,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4340,
									"end": 4355,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4340,
									"end": 4355,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4334,
									"end": 4356,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4334,
									"end": 4356,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4320,
									"end": 4357,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4310,
									"end": 4381,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4310,
									"end": 4381,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4361,
									"end": 4379,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4361,
									"end": 4379,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 4361,
									"end": 4379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4600,
									"end": 4725,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 4600,
									"end": 4725,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4674,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4674,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4674,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4686,
									"end": 4696,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4686,
									"end": 4696,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4686,
									"end": 4696,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4683,
									"end": 4719,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4683,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4683,
									"end": 4719,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 4699,
									"end": 4717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5080,
									"end": 5257,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 5080,
									"end": 5257,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 4519,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a40a026ace0868d6c3974e857beefdf58ae7755f6ae6f8253710ff43f3ec22564736f6c634300081a0033",
									".code": [
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "92C5B3B"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "ECB93C0"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "111A18D3"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "16FED3E2"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "21CA4236"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "2CB32743"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "59A7715A"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "59BF1ABE"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "8279C7DB"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "C68990AD"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "D08027A5"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "E47D6060"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "E4997DC5"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "EA95C079"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "F3BDC228"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 266,
											"end": 4519,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 331,
											"end": 401,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 331,
											"end": 401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 331,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "50E6E89A79E1B3C366A7CE592DCDF63707328BF04106A9BAD3D5D09088A9DF0A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 331,
											"end": 401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 331,
											"end": 401,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 331,
											"end": 401,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 331,
											"end": 401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 331,
											"end": 401,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 401,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1056,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 331,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2734,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2734,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2473,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2473,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 632,
											"end": 662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 632,
											"end": 662,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 632,
											"end": 662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 632,
											"end": 662,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 632,
											"end": 662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 662,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 632,
											"end": 662,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 632,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 632,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 3469,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3469,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2196,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2196,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 4330,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4330,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3223,
											"end": 3259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3211,
											"end": 3213,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3081,
											"end": 3265,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1950,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1866,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1866,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1866,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 602,
											"end": 626,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 602,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 602,
											"end": 626,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 602,
											"end": 626,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2610,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2713,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1647,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 1647,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1860,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1780,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1780,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1780,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1956,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1956,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 3630,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3630,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3908,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3908,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 407,
											"end": 469,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 407,
											"end": 469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 407,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A4145E86017412C2501265325769AF64DA9F2A5605A5DFC097AAD77B02E07414"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 407,
											"end": 469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 407,
											"end": 469,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 492,
											"end": 537,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 492,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 492,
											"end": 537,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 492,
											"end": 537,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2907,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 2907,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4112,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 4112,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3095,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 3095,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2823,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2823,
											"end": 2854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2823,
											"end": 2854,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2869,
											"end": 2894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2894,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2575,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2575,
											"end": 2597,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2575,
											"end": 2597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2575,
											"end": 2597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A4145E86017412C2501265325769AF64DA9F2A5605A5DFC097AAD77B02E07414"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 1547,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1547,
											"end": 1579,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 1547,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4353,
											"end": 4355,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B63632B91034B9903737BA10309036B4B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4404,
											"end": 4456,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1539,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 3578,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3589,
											"end": 3595,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 3572,
											"end": 3596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3613,
											"end": 3617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2299,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2324,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2343,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2324,
											"end": 2343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2323,
											"end": 2343,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2315,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2315,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2315,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2375,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2375,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2315,
											"end": 2375,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2315,
											"end": 2375,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2315,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119C9BDB481859191C995CDCC81A5CC8189B1858DADB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4812,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 4502,
											"end": 4853,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2315,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2419,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2425,
											"end": 2427,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2400,
											"end": 2436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2400,
											"end": 2436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2436,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2467,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4330,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "50E6E89A79E1B3C366A7CE592DCDF63707328BF04106A9BAD3D5D09088A9DF0A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1441,
											"end": 1451,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 1416,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1416,
											"end": 1452,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1416,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 1408,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4456,
											"end": 4489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 4465,
											"end": 4471,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4473,
											"end": 4480,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4488,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4456,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 4456,
											"end": 4489,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1950,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1866,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1933,
											"end": 1943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 1933,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 1933,
											"end": 1943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1933,
											"end": 1943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 1933,
											"end": 1943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1741,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1741,
											"end": 1767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1860,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1780,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 1845,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 1845,
											"end": 1853,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1956,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2090,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2066,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2066,
											"end": 2091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 2057,
											"end": 2117,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2117,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5427,
											"end": 5457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D95B99195C881A5CC8189B1858DADB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5466,
											"end": 5517,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5552,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5534,
											"end": 5552,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 5213,
											"end": 5558,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 2057,
											"end": 2117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2127,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2151,
											"end": 2153,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2161,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2127,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 2127,
											"end": 2162,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3736,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "50E6E89A79E1B3C366A7CE592DCDF63707328BF04106A9BAD3D5D09088A9DF0A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3748,
											"end": 3772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 3754,
											"end": 3763,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3765,
											"end": 3771,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 3748,
											"end": 3772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 3748,
											"end": 3772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3795,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3782,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3782,
											"end": 3801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 3782,
											"end": 3801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3801,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3864,
											"end": 3873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3833,
											"end": 3843,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6056,
											"end": 6107,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6056,
											"end": 6107,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6143,
											"end": 6175,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6143,
											"end": 6175,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6140,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6123,
											"end": 6141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6219,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6219,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6228,
											"end": 6262,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6228,
											"end": 6262,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6228,
											"end": 6262,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6228,
											"end": 6262,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E481C7A81EEAE9654AEF25A7C6B46E617D0D2C00C9215995AC059D482090D727"
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3874,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3891,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3902,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3630,
											"end": 3902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "50E6E89A79E1B3C366A7CE592DCDF63707328BF04106A9BAD3D5D09088A9DF0A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1441,
											"end": 1451,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 1416,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1416,
											"end": 1452,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1416,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 1408,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 1408,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3992,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4027,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1493,
											"end": 1494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 1493,
											"end": 1494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 4038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 2907,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3037,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3052,
											"end": 3082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4263,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6526,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6475,
											"end": 6526,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6557,
											"end": 6559,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6535,
											"end": 6569,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6535,
											"end": 6569,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6535,
											"end": 6569,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "B1639A04BDB06EF076A04A28CAA4C5163BD5748DB621BB0180CA81C56DC07D7A"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6465,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6448,
											"end": 6466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3235,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3204,
											"end": 3235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3235,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3204,
											"end": 3235,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3196,
											"end": 3256,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3256,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3196,
											"end": 3256,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3256,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6851,
											"end": 6853,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3256,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3256,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 6854,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6890,
											"end": 6892,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6863,
											"end": 6893,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081A5B88189B1858DADB1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6902,
											"end": 6948,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6965,
											"end": 6983,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6965,
											"end": 6983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 6649,
											"end": 6989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3196,
											"end": 3256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3294,
											"end": 3310,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 3284,
											"end": 3311,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3284,
											"end": 3311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3321,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3327,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3345,
											"end": 3355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3321,
											"end": 3326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3321,
											"end": 3356,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3321,
											"end": 3356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3321,
											"end": 3356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3382,
											"end": 3392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3366,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3366,
											"end": 3392,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3366,
											"end": 3392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3392,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3407,
											"end": 3456,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
										},
										{
											"begin": 3407,
											"end": 3456,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3407,
											"end": 3456,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3443,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3445,
											"end": 3455,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3445,
											"end": 3455,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3407,
											"end": 3456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3407,
											"end": 3456,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1056,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1235,
											"end": 1239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 1221,
											"end": 1251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1056,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 497,
											"end": 915,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 497,
											"end": 915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 646,
											"end": 648,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 609,
											"end": 613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 672,
											"end": 685,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 721,
											"end": 727,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 714,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 701,
											"end": 719,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 694,
											"end": 728,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 775,
											"end": 777,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 763,
											"end": 778,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 756,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 743,
											"end": 761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 787,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 811,
											"end": 820,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 807,
											"end": 829,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 803,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 796,
											"end": 838,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 902,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 890,
											"end": 892,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 878,
											"end": 893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 874,
											"end": 903,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 859,
											"end": 904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 855,
											"end": 909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 847,
											"end": 909,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 497,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1102,
											"end": 1275,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 1102,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1190,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1190,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1209,
											"end": 1251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1209,
											"end": 1251,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1199,
											"end": 1269,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1280,
											"end": 1580,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1280,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1412,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1429,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 1377,
											"end": 1429,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1426,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1429,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 1377,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 1467,
											"end": 1476,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 1448,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1477,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1546,
											"end": 1548,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1550,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1550,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1585,
											"end": 1771,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1585,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 1736,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1979,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1776,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2540,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2166,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2257,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2265,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2300,
											"end": 2309,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2298,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2310,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 2370,
											"end": 2379,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 2351,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2380,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2399,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2418,
											"end": 2436,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2399,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 2399,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2399,
											"end": 2437,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 2399,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2540,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2540,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2771,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2545,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2659,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2636,
											"end": 2643,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2655,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2660,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2673,
											"end": 2674,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2718,
											"end": 2741,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2718,
											"end": 2741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2545,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 3076,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 2776,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2850,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2925,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 2873,
											"end": 2925,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2925,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 2873,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2989,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2989,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2989,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 3066,
											"end": 3068,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 3032,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3070,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 3032,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3022,
											"end": 3070,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3022,
											"end": 3070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 3076,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 3076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 3076,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 3076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 3076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 3076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3501,
											"end": 3761,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 3501,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3575,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3630,
											"end": 3632,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3618,
											"end": 3627,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3605,
											"end": 3628,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3633,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3598,
											"end": 3650,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3598,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 3598,
											"end": 3650,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3646,
											"end": 3647,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3636,
											"end": 3648,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3598,
											"end": 3650,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 3598,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 3688,
											"end": 3697,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 3669,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 3669,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3698,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3717,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 3751,
											"end": 3753,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3717,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 3717,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 4146,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 3766,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3888,
											"end": 3900,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3888,
											"end": 3900,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3888,
											"end": 3900,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 3909,
											"end": 3970,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 3967,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 3955,
											"end": 3961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3968,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 3970,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 3909,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4014,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4019,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4003,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3982,
											"end": 4020,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3979,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 3979,
											"end": 4140,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4062,
											"end": 4072,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4053,
											"end": 4073,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4074,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3979,
											"end": 4140,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 3979,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3979,
											"end": 4140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 4146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 4146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 4146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 5208,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 4858,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5042,
											"end": 5063,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5042,
											"end": 5063,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5042,
											"end": 5063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5099,
											"end": 5101,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5072,
											"end": 5102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B63632B91034B9903737BA10309031B7B73A3937B63632B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5133,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5118,
											"end": 5136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5201,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 5208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5690,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 5563,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5619,
											"end": 5622,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5615,
											"end": 5635,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5605,
											"end": 5636,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 5659,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5645,
											"end": 5660,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5679,
											"end": 5683,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5676,
											"end": 5677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5684,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5820,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5695,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5791,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5791,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5778,
											"end": 5814,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5778,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5778,
											"end": 5814,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 5794,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6994,
											"end": 7122,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 6994,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7082,
											"end": 7093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7082,
											"end": 7093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7082,
											"end": 7093,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7079,
											"end": 7116,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7079,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 7079,
											"end": 7116,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 7096,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7127,
											"end": 7401,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 7127,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7319,
											"end": 7351,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7319,
											"end": 7351,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7319,
											"end": 7351,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7319,
											"end": 7351,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7301,
											"end": 7352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7301,
											"end": 7352,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7385,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7274,
											"end": 7292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7274,
											"end": 7292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7127,
											"end": 7401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7685,
											"end": 8030,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 7685,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7905,
											"end": 7937,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7905,
											"end": 7937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7905,
											"end": 7937,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7905,
											"end": 7937,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7938,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7969,
											"end": 7971,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7947,
											"end": 7981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7947,
											"end": 7981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7947,
											"end": 7981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7947,
											"end": 7981,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8012,
											"end": 8014,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7990,
											"end": 8024,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7877,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7860,
											"end": 7878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7685,
											"end": 8030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									],
									".data": {
										"50E6E89A79E1B3C366A7CE592DCDF63707328BF04106A9BAD3D5D09088A9DF0A": "7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
										"A4145E86017412C2501265325769AF64DA9F2A5605A5DFC097AAD77B02E07414": "9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/usdt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CONTROLLER_ROLE()": "092c5b3b",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"addBlackList(address)": "0ecb93c0",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveByInterface(address,address,uint256)": "2cb32743",
							"balanceOf(address)": "70a08231",
							"burnByOwner(address,uint256)": "111a18d3",
							"commitToMainnet(uint256)": "ea95c079",
							"decimals()": "313ce567",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isBlackListed(address)": "e47d6060",
							"mintByController(address,uint256)": "c68990ad",
							"mintToAddress(address,uint256)": "21ca4236",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"receiverAddress()": "16fed3e2",
							"removeBlackList(address)": "e4997dc5",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setReceiverAddress(address)": "8279c7db",
							"setTotalMint(uint256)": "d08027a5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalMint()": "59a7715a",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"commitAddress\",\"type\":\"address\"}],\"name\":\"Commit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalMint\",\"type\":\"uint256\"}],\"name\":\"MintByController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONTROLLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveByInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"commitToMainnet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"commitAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintByController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setReceiverAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/usdt.sol\":\"USDT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"src/usdt.sol\":{\"keccak256\":\"0xf5f2b5d54ac3766320d1d17165127fd6246ff718c43038a3de9b06ab658d2a51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e77c5e5e4a12232ef7348e602461bc847da7b8309575b44e16a37645e42e8da\",\"dweb:/ipfs/Qmctb4LUedZTdH6s7s7SWxd9Av5jXJdbA4UrBsrdTazK1s\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "src/usdt.sol:USDT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "src/usdt.sol:USDT",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "src/usdt.sol:USDT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "src/usdt.sol:USDT",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "src/usdt.sol:USDT",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1207,
								"contract": "src/usdt.sol:USDT",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 26,
								"contract": "src/usdt.sol:USDT",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1377,
								"contract": "src/usdt.sol:USDT",
								"label": "isBlackListed",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1379,
								"contract": "src/usdt.sol:USDT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1381,
								"contract": "src/usdt.sol:USDT",
								"label": "totalMint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1383,
								"contract": "src/usdt.sol:USDT",
								"label": "receiverAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "src/usdt.sol:USDT",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "src/usdt.sol:USDT",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1198
						],
						"ERC165": [
							1339
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1199,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1340,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1339,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1339,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1339,
								1351,
								378,
								1198
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1338
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1338,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1198
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1168
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1169,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1168,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1199,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "1133:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1142:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1168,
										"src": "1150:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1168,
								1108,
								1198
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 1030,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 1030,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1161
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 1030,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1167
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 1030,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 1030,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 1030,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 1030,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 1030,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 1030,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 1030,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 1030,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 1030,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 1030,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 1030,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 1030,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 1030,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 1030,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1106:9787:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1108,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1108,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1108,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1108,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1108,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1108,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							1030
						],
						"ERC20Pausable": [
							1142
						],
						"Pausable": [
							1315
						]
					},
					"id": 1143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 1031,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 1316,
							"src": "186:53:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1113,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1315,
										"src": "194:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "ERC20",
										"nameLocations": [
											"965:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "965:5:5"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "965:5:5"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "Pausable",
										"nameLocations": [
											"972:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1315,
										"src": "972:8:5"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "972:8:5"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "241:688:5",
								"text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1142,
							"linearizedBaseContracts": [
								1142,
								1315,
								1030,
								420,
								1168,
								1108,
								1198
							],
							"name": "ERC20Pausable",
							"nameLocation": "948:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "1211:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1135,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "1235:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "1241:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "1245:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1132,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1221:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$1142_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1227:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "1221:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "1221:30:5"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "987:121:5",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1130,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1129,
												"name": "whenNotPaused",
												"nameLocations": [
													"1197:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1240,
												"src": "1197:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1197:13:5"
										}
									],
									"name": "_update",
									"nameLocation": "1122:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1188:8:5"
									},
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1138:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1130:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1152:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1144:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1164:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1156:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:41:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:5"
									},
									"scope": 1142,
									"src": "1113:145:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1143,
							"src": "930:330:5",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419,
								1220,
								1223
							],
							"usedEvents": [
								1042,
								1051,
								1212,
								1217
							]
						}
					],
					"src": "124:1137:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1168
						]
					},
					"id": 1169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1169,
							"sourceUnit": 1109,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1145,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1148,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "306:6:6"
									},
									"id": 1149,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1147,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1168,
							"linearizedBaseContracts": [
								1168,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1168,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1168,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1164,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1168,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1169,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1198
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1171,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1198,
							"linearizedBaseContracts": [
								1198
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1176,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1178,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1198,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1185,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1187,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1198,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1193,
												"id": 1195,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1198,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1199,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1198
						],
						"Pausable": [
							1315
						]
					},
					"id": 1316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1200,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1316,
							"sourceUnit": 1199,
							"src": "128:45:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1201,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "136:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1204,
										"name": "Context",
										"nameLocations": [
											"645:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "645:7:8"
									},
									"id": 1205,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:8"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:8",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1315,
							"linearizedBaseContracts": [
								1315,
								1198
							],
							"name": "Pausable",
							"nameLocation": "633:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1207,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1315,
									"src": "659:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1206,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:8",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1212,
									"name": "Paused",
									"nameLocation": "770:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "777:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:8"
									},
									"src": "764:30:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:8",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1217,
									"name": "Unpaused",
									"nameLocation": "881:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "890:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:8"
									},
									"src": "875:32:8"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:8",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1220,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:8"
									},
									"src": "994:22:8"
								},
								{
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:8",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1223,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:8"
									},
									"src": "1107:22:8"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "1221:32:8",
										"statements": [
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "1231:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:8"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:8",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:8"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:8"
									},
									"scope": 1315,
									"src": "1207:46:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "1464:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1235,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "1474:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:8"
											},
											{
												"id": 1238,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:8"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:8",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1240,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:8"
									},
									"src": "1439:72:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "1711:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1243,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "1721:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:8"
											},
											{
												"id": 1246,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:8"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:8",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1248,
									"name": "whenPaused",
									"nameLocation": "1698:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:8"
									},
									"src": "1689:66:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "1903:31:8",
										"statements": [
											{
												"expression": {
													"id": 1254,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1207,
													"src": "1920:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1253,
												"id": 1255,
												"nodeType": "Return",
												"src": "1913:14:8"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:8",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:8"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1897:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:8"
									},
									"scope": 1315,
									"src": "1850:84:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "2053:77:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1261,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "2067:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1267,
												"nodeType": "IfStatement",
												"src": "2063:61:8",
												"trueBody": {
													"id": 1266,
													"nodeType": "Block",
													"src": "2077:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1263,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "2098:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1265,
															"nodeType": "RevertStatement",
															"src": "2091:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:8",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:8"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:8"
									},
									"scope": 1315,
									"src": "2002:128:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "2250:78:8",
										"statements": [
											{
												"condition": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:8",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1273,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "2265:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "IfStatement",
												"src": "2260:62:8",
												"trueBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "2275:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1276,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "2296:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1278,
															"nodeType": "RevertStatement",
															"src": "2289:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:8",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:8"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:8"
									},
									"scope": 1315,
									"src": "2202:126:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "2512:66:8",
										"statements": [
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1288,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "2522:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1293,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2558:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1292,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2551:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "EmitStatement",
												"src": "2546:25:8"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:8",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1285,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1240,
												"src": "2498:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:8"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:8"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:8"
									},
									"scope": 1315,
									"src": "2463:115:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2758:69:8",
										"statements": [
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "2768:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1309,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2807:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1308,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "2798:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "2793:27:8"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:8",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1301,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1248,
												"src": "2747:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:8"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:8"
									},
									"scope": 1315,
									"src": "2710:117:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1316,
							"src": "615:2214:8",
							"usedErrors": [
								1220,
								1223
							],
							"usedEvents": [
								1212,
								1217
							]
						}
					],
					"src": "102:2728:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1339
						],
						"IERC165": [
							1351
						]
					},
					"id": 1340,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1340,
							"sourceUnit": 1352,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1318,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1351,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1321,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "688:7:9"
									},
									"id": 1322,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1320,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1339,
							"linearizedBaseContracts": [
								1339,
								1351
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1350
									],
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1330,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1332,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1351_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1351_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1331,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1351",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1329,
												"id": 1336,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1324,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1339,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1340,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1351
						]
					},
					"id": 1352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1341,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1342,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1351,
							"linearizedBaseContracts": [
								1351
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1351,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1352,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"src/usdt.sol": {
				"ast": {
					"absolutePath": "src/usdt.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1198
						],
						"ERC165": [
							1339
						],
						"ERC20": [
							1030
						],
						"ERC20Pausable": [
							1142
						],
						"IAccessControl": [
							378
						],
						"NotController": [
							1359
						],
						"Pausable": [
							1315
						],
						"USDT": [
							1785
						]
					},
					"id": 1786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1786,
							"sourceUnit": 1143,
							"src": "91:74:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1786,
							"sourceUnit": 296,
							"src": "166:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "66719b7a",
							"id": 1359,
							"name": "NotController",
							"nameLocation": "232:13:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1358,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1357,
										"mutability": "mutable",
										"name": "_address",
										"nameLocation": "254:8:11",
										"nodeType": "VariableDeclaration",
										"scope": 1359,
										"src": "246:16:11",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "246:7:11",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "245:18:11"
							},
							"src": "226:38:11"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1360,
										"name": "ERC20Pausable",
										"nameLocations": [
											"283:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1142,
										"src": "283:13:11"
									},
									"id": 1361,
									"nodeType": "InheritanceSpecifier",
									"src": "283:13:11"
								},
								{
									"baseName": {
										"id": 1362,
										"name": "AccessControl",
										"nameLocations": [
											"298:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "298:13:11"
									},
									"id": 1363,
									"nodeType": "InheritanceSpecifier",
									"src": "298:13:11"
								}
							],
							"canonicalName": "USDT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1785,
							"linearizedBaseContracts": [
								1785,
								295,
								1339,
								1351,
								378,
								1142,
								1315,
								1030,
								420,
								1168,
								1108,
								1198
							],
							"name": "USDT",
							"nameLocation": "275:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "092c5b3b",
									"id": 1368,
									"mutability": "constant",
									"name": "CONTROLLER_ROLE",
									"nameLocation": "355:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1785,
									"src": "331:70:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1364,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "331:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "434f4e54524f4c4c45525f524f4c45",
												"id": 1366,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "383:17:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
													"typeString": "literal_string \"CONTROLLER_ROLE\""
												},
												"value": "CONTROLLER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
													"typeString": "literal_string \"CONTROLLER_ROLE\""
												}
											],
											"id": 1365,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "373:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1367,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "373:28:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1373,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "431:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1785,
									"src": "407:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1369,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "407:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1371,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "455:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1370,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "445:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "445:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e47d6060",
									"id": 1377,
									"mutability": "mutable",
									"name": "isBlackListed",
									"nameLocation": "524:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1785,
									"src": "492:45:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1376,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1374,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "500:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "492:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1375,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "511:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1379,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "584:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1785,
									"src": "568:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "568:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "59a7715a",
									"id": 1381,
									"mutability": "mutable",
									"name": "totalMint",
									"nameLocation": "617:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1785,
									"src": "602:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1380,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16fed3e2",
									"id": 1383,
									"mutability": "mutable",
									"name": "receiverAddress",
									"nameLocation": "647:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1785,
									"src": "632:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1382,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "632:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6",
									"id": 1389,
									"name": "DestroyedBlackFunds",
									"nameLocation": "689:19:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blackListedUser",
												"nameLocation": "717:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "709:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"indexed": false,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "740:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "735:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "735:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:41:11"
									},
									"src": "683:67:11"
								},
								{
									"anonymous": false,
									"eventSelector": "42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc",
									"id": 1393,
									"name": "AddedBlackList",
									"nameLocation": "761:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"indexed": false,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "784:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "776:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:15:11"
									},
									"src": "755:36:11"
								},
								{
									"anonymous": false,
									"eventSelector": "d7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c",
									"id": 1397,
									"name": "RemovedBlackList",
									"nameLocation": "802:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"indexed": false,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "827:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "819:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:15:11"
									},
									"src": "796:38:11"
								},
								{
									"anonymous": false,
									"eventSelector": "e481c7a81eeae9654aef25a7c6b46e617d0d2c00c9215995ac059d482090d727",
									"id": 1407,
									"name": "MintByController",
									"nameLocation": "845:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"indexed": false,
												"mutability": "mutable",
												"name": "_controller",
												"nameLocation": "879:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "871:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"indexed": false,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "908:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "900:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "933:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "928:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "928:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"indexed": false,
												"mutability": "mutable",
												"name": "_totalMint",
												"nameLocation": "958:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "950:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:113:11"
									},
									"src": "839:136:11"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "1051:298:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1415,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1111:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1416,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1131:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1135:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1131:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1414,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1100:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1100:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "CONTROLLER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "1163:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1422,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1180:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1184:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1180:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1420,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1152:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1152:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "1152:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1427,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "1212:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1428,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1225:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1229:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1225:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1426,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1201:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1201:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "1201:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1300:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1304:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1300:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030303030",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1312:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1325:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1437,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "1331:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1331:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1325:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1312:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1294:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1294:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "1294:48:11"
											}
										]
									},
									"id": 1444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d65746120446f6c6c617220526577617264",
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1020:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e5e076e488dbdfd07e09d53f7b679952e680ee4e4611b4563adb6248fb65372e",
														"typeString": "literal_string \"Meta Dollar Reward\""
													},
													"value": "Meta Dollar Reward"
												},
												{
													"hexValue": "5553444d52",
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1042:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_88c2a59181647fd4b1f625b413ca2f881b2e20f9aa402d9e61d6d5a589f74479",
														"typeString": "literal_string \"USDMR\""
													},
													"value": "USDMR"
												}
											],
											"id": 1412,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1409,
												"name": "ERC20",
												"nameLocations": [
													"1014:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "1014:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1014:36:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:11"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:0:11"
									},
									"scope": 1785,
									"src": "1000:349:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "1398:103:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1448,
																	"name": "CONTROLLER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "1424:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1449,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1441:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1445:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1441:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1447,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1416:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1416:36:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f74206120636f6e74726f6c6c6572",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1454:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1adec6c203899a74ef4fe4e8bca442f557f7536e8aa6163d9bda4d1437516580",
																"typeString": "literal_string \"Caller is not a controller\""
															},
															"value": "Caller is not a controller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1adec6c203899a74ef4fe4e8bca442f557f7536e8aa6163d9bda4d1437516580",
																"typeString": "literal_string \"Caller is not a controller\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1408:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1408:75:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "1408:75:11"
											},
											{
												"id": 1455,
												"nodeType": "PlaceholderStatement",
												"src": "1493:1:11"
											}
										]
									},
									"id": 1457,
									"name": "onlyController",
									"nameLocation": "1381:14:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1395:2:11"
									},
									"src": "1372:129:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "1529:95:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1461,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "1555:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1462,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1568:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1572:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1568:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1460,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1547:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1547:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742061206d696e746572",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1581:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
																"typeString": "literal_string \"Caller is not a minter\""
															},
															"value": "Caller is not a minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
																"typeString": "literal_string \"Caller is not a minter\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1539:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "1539:67:11"
											},
											{
												"id": 1468,
												"nodeType": "PlaceholderStatement",
												"src": "1616:1:11"
											}
										]
									},
									"id": 1470,
									"name": "onlyMinter",
									"nameLocation": "1516:10:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1526:2:11"
									},
									"src": "1507:117:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "1731:43:11",
										"statements": [
											{
												"expression": {
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1478,
														"name": "receiverAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "1741:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1479,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "1759:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1741:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "1741:26:11"
											}
										]
									},
									"functionSelector": "8279c7db",
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1475,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1711:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1476,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1474,
												"name": "onlyRole",
												"nameLocations": [
													"1702:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1702:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1702:28:11"
										}
									],
									"name": "setReceiverAddress",
									"nameLocation": "1656:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1683:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1675:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:18:11"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1731:0:11"
									},
									"scope": 1785,
									"src": "1647:127:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "1835:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1489,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "1845:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "1845:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1486,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1815:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1485,
												"name": "onlyRole",
												"nameLocations": [
													"1806:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1806:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1806:28:11"
										}
									],
									"name": "pause",
									"nameLocation": "1789:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:2:11"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1835:0:11"
									},
									"scope": 1785,
									"src": "1780:80:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "1923:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1499,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "1933:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1933:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "1933:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1496,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1903:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1495,
												"name": "onlyRole",
												"nameLocations": [
													"1894:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1894:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1894:28:11"
										}
									],
									"name": "unpause",
									"nameLocation": "1875:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1882:2:11"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1923:0:11"
									},
									"scope": 1785,
									"src": "1866:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "2047:143:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2065:26:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1516,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "2066:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1519,
																"indexExpression": {
																	"expression": {
																		"id": 1517,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2080:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2084:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2080:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2066:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64657220697320626c61636b6c6973746564",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2093:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f",
																"typeString": "literal_string \"Sender is blacklisted\""
															},
															"value": "Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f",
																"typeString": "literal_string \"Sender is blacklisted\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2057:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2057:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "2057:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1525,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2137:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2137:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "2151:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1528,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "2155:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1524,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "2127:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "2127:35:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2179:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1514,
												"id": 1532,
												"nodeType": "Return",
												"src": "2172:11:11"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1511,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1510,
												"name": "whenNotPaused",
												"nameLocations": [
													"2018:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1240,
												"src": "2018:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2018:13:11"
										}
									],
									"name": "transfer",
									"nameLocation": "1965:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1509,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2009:8:11"
									},
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1982:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1974:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1994:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1986:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:28:11"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2041:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2041:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:6:11"
									},
									"scope": 1785,
									"src": "1956:234:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										713
									],
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "2305:162:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2323:20:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1549,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "2324:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1551,
																"indexExpression": {
																	"id": 1550,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1536,
																	"src": "2338:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2324:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46726f6d206164647265737320697320626c61636b6c6973746564",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2345:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7a36cb1eac49f305a518238a067ee7ab67523dfcf4e9f2c68d021215e1d720f",
																"typeString": "literal_string \"From address is blacklisted\""
															},
															"value": "From address is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7a36cb1eac49f305a518238a067ee7ab67523dfcf4e9f2c68d021215e1d720f",
																"typeString": "literal_string \"From address is blacklisted\""
															}
														],
														"id": 1548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2315:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2315:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "2315:60:11"
											},
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2390:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "2385:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1556,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2385:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"arguments": [
														{
															"id": 1560,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "2419:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1561,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "2425:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1562,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "2429:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1558,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2400:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_USDT_$1785_$",
																"typeString": "type(contract super USDT)"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2406:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 713,
														"src": "2400:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2400:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2385:51:11"
											},
											{
												"expression": {
													"id": 1565,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1557,
													"src": "2453:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1547,
												"id": 1566,
												"nodeType": "Return",
												"src": "2446:14:11"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1544,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1543,
												"name": "whenNotPaused",
												"nameLocations": [
													"2276:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1240,
												"src": "2276:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2276:13:11"
										}
									],
									"name": "transferFrom",
									"nameLocation": "2205:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1542,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2267:8:11"
									},
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2226:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2218:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2240:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2232:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2252:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2244:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2217:42:11"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2299:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2299:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:6:11"
									},
									"scope": 1785,
									"src": "2196:271:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "2565:39:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "2581:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1580,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "2590:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1578,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2575:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2575:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "2575:22:11"
											}
										]
									},
									"functionSelector": "111a18d3",
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1575,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2545:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1576,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1574,
												"name": "onlyRole",
												"nameLocations": [
													"2536:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2536:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2536:28:11"
										}
									],
									"name": "burnByOwner",
									"nameLocation": "2482:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2502:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2494:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2519:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2511:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:33:11"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2565:0:11"
									},
									"scope": 1785,
									"src": "2473:131:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "2683:45:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1591,
														"name": "isBlackListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "2700:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1593,
													"indexExpression": {
														"id": 1592,
														"name": "_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2714:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2700:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1594,
												"nodeType": "Return",
												"src": "2693:28:11"
											}
										]
									},
									"functionSelector": "59bf1abe",
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBlackListStatus",
									"nameLocation": "2619:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "_maker",
												"nameLocation": "2646:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2638:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:16:11"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2677:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2677:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:6:11"
									},
									"scope": 1785,
									"src": "2610:118:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "2813:88:11",
										"statements": [
											{
												"expression": {
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1604,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "2823:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1606,
														"indexExpression": {
															"id": 1605,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2837:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2823:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2850:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2823:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "2823:31:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1611,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2884:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1610,
														"name": "AddedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2869:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2869:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "EmitStatement",
												"src": "2864:30:11"
											}
										]
									},
									"functionSelector": "0ecb93c0",
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1601,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2793:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1602,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1600,
												"name": "onlyRole",
												"nameLocations": [
													"2784:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2784:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2784:28:11"
										}
									],
									"name": "addBlackList",
									"nameLocation": "2743:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "_evilUser",
												"nameLocation": "2764:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "2756:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2756:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:19:11"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2813:0:11"
									},
									"scope": 1785,
									"src": "2734:167:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "2992:97:11",
										"statements": [
											{
												"expression": {
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1623,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "3002:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1625,
														"indexExpression": {
															"id": 1624,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "3016:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3002:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3032:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3002:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "3002:35:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1630,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "3069:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1629,
														"name": "RemovedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "3052:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "EmitStatement",
												"src": "3047:35:11"
											}
										]
									},
									"functionSelector": "e4997dc5",
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1620,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2972:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1621,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1619,
												"name": "onlyRole",
												"nameLocations": [
													"2963:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2963:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2963:28:11"
										}
									],
									"name": "removeBlackList",
									"nameLocation": "2916:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "_clearedUser",
												"nameLocation": "2940:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2932:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2931:22:11"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2992:0:11"
									},
									"scope": 1785,
									"src": "2907:182:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "3186:277:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1643,
																"name": "isBlackListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "3204:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1645,
															"indexExpression": {
																"id": 1644,
																"name": "_blackListedUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "3218:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3204:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e20626c61636b6c697374",
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3237:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37fc345b8484d3492ef655f33dbef43266df34e0acca6561e92b2a70319fa0f9",
																"typeString": "literal_string \"Not in blacklist\""
															},
															"value": "Not in blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37fc345b8484d3492ef655f33dbef43266df34e0acca6561e92b2a70319fa0f9",
																"typeString": "literal_string \"Not in blacklist\""
															}
														],
														"id": 1642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3196:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3196:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "3196:60:11"
											},
											{
												"assignments": [
													1650
												],
												"declarations": [
													{
														"constant": false,
														"id": 1650,
														"mutability": "mutable",
														"name": "dirtyFunds",
														"nameLocation": "3271:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "3266:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1649,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3266:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1654,
												"initialValue": {
													"arguments": [
														{
															"id": 1652,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "3294:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1651,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "3284:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3266:45:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1656,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "3327:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "3345:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1655,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "3321:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3321:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "3321:35:11"
											},
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1660,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "3366:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1661,
														"name": "dirtyFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "3382:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3366:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "3366:26:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1665,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "3427:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "3445:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1664,
														"name": "DestroyedBlackFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "3407:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3407:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "EmitStatement",
												"src": "3402:54:11"
											}
										]
									},
									"functionSelector": "f3bdc228",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1639,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "3166:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1638,
												"name": "onlyRole",
												"nameLocations": [
													"3157:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3157:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3157:28:11"
										}
									],
									"name": "destroyBlackFunds",
									"nameLocation": "3104:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "_blackListedUser",
												"nameLocation": "3130:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "3122:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3121:26:11"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3186:0:11"
									},
									"scope": 1785,
									"src": "3095:368:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "3562:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1682,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "3578:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1683,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "3589:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1681,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3572:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "3572:24:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3613:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1680,
												"id": 1687,
												"nodeType": "Return",
												"src": "3606:11:11"
											}
										]
									},
									"functionSelector": "21ca4236",
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1677,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1676,
												"name": "onlyMinter",
												"nameLocations": [
													"3536:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1470,
												"src": "3536:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3536:10:11"
										}
									],
									"name": "mintToAddress",
									"nameLocation": "3478:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3500:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "3492:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3519:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "3511:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:35:11"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "3556:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3556:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3555:6:11"
									},
									"scope": 1785,
									"src": "3469:155:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "3738:164:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1702,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "3754:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1703,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "3765:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1701,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3748:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3748:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "3748:24:11"
											},
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1706,
														"name": "totalMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "3782:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1707,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "3795:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3782:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "3782:19:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1711,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3833:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3837:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3833:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "3845:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1714,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "3856:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1715,
															"name": "totalMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "3864:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1710,
														"name": "MintByController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "3816:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3816:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "EmitStatement",
												"src": "3811:63:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3891:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1700,
												"id": 1719,
												"nodeType": "Return",
												"src": "3884:11:11"
											}
										]
									},
									"functionSelector": "c68990ad",
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1696,
													"name": "CONTROLLER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1368,
													"src": "3706:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1697,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1695,
												"name": "onlyRole",
												"nameLocations": [
													"3697:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3697:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3697:25:11"
										}
									],
									"name": "mintByController",
									"nameLocation": "3639:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3664:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "3656:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3680:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "3675:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3675:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:32:11"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "3732:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3732:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3731:6:11"
									},
									"scope": 1785,
									"src": "3630:272:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "3982:56:11",
										"statements": [
											{
												"expression": {
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1730,
														"name": "totalMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "3992:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1731,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "4004:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3992:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "3992:18:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4027:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1729,
												"id": 1735,
												"nodeType": "Return",
												"src": "4020:11:11"
											}
										]
									},
									"functionSelector": "d08027a5",
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1726,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1725,
												"name": "onlyController",
												"nameLocations": [
													"3952:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1457,
												"src": "3952:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3952:14:11"
										}
									],
									"name": "setTotalMint",
									"nameLocation": "3917:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3935:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "3930:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3930:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:13:11"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "3976:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3976:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3975:6:11"
									},
									"scope": 1785,
									"src": "3908:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "b1639a04bdb06ef076a04a28caa4c5163bd5748db621bb0180ca81c56dc07d7a",
									"id": 1745,
									"name": "Commit",
									"nameLocation": "4050:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4065:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "4057:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4057:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4076:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "4071:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"indexed": false,
												"mutability": "mutable",
												"name": "commitAddress",
												"nameLocation": "4092:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "4084:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4056:50:11"
									},
									"src": "4044:63:11"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "4191:133:11",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1753,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4253:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4257:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4253:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "4265:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1756,
															"name": "commitAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "4273:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1752,
														"name": "Commit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "4246:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4246:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "EmitStatement",
												"src": "4241:46:11"
											},
											{
												"expression": {
													"id": 1759,
													"name": "commitAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1750,
													"src": "4304:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1751,
												"id": 1760,
												"nodeType": "Return",
												"src": "4297:20:11"
											}
										]
									},
									"functionSelector": "ea95c079",
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "commitToMainnet",
									"nameLocation": "4121:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4142:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "4137:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4137:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4136:13:11"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "commitAddress",
												"nameLocation": "4176:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "4168:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:23:11"
									},
									"scope": 1785,
									"src": "4112:212:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "4446:71:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1776,
															"name": "caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "4465:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1777,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "4473:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1778,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "4482:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1775,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4456:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4456:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "4456:33:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4506:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1774,
												"id": 1782,
												"nodeType": "Return",
												"src": "4499:11:11"
											}
										]
									},
									"functionSelector": "2cb32743",
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1771,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1770,
												"name": "onlyController",
												"nameLocations": [
													"4416:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1457,
												"src": "4416:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4416:14:11"
										}
									],
									"name": "approveByInterface",
									"nameLocation": "4339:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "4366:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "4358:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4358:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "4374:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4399:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "4391:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4357:49:11"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "4440:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4440:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4439:6:11"
									},
									"scope": 1785,
									"src": "4330:187:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1786,
							"src": "266:4253:11",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1220,
								1223
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051,
								1212,
								1217,
								1389,
								1393,
								1397,
								1407,
								1745
							]
						}
					],
					"src": "32:4487:11"
				},
				"id": 11
			}
		}
	}
}