{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "showroom",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "parent",
						"type": "address"
					}
				],
				"name": "ShowroomAdded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newShowroom",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "parent",
						"type": "address"
					},
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "tier",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "longtitude",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lattitude",
						"type": "uint256"
					}
				],
				"name": "addShowRoom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allShowrooms",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "lat1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lon1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lat2",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lon2",
						"type": "uint256"
					}
				],
				"name": "calculateDistance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "userLat",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "userLon",
						"type": "uint256"
					}
				],
				"name": "findNearestShowroom",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "tier",
						"type": "uint8"
					}
				],
				"name": "getShowroomCommissionRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "tier",
						"type": "uint8"
					}
				],
				"name": "getShowroomSafeRadius",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "tier",
						"type": "uint8"
					}
				],
				"name": "getShowroomScanRadius",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "startIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pageSize",
						"type": "uint256"
					}
				],
				"name": "getShowrooms",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "parent",
								"type": "address"
							},
							{
								"internalType": "enum Showroom.ShowroomTier",
								"name": "tier",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "totalBP",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalMember",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expiryDate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "longtitude",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lattitude",
								"type": "uint256"
							}
						],
						"internalType": "struct Showroom.ShowroomNode[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "showroom",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "bp",
						"type": "uint256"
					}
				],
				"name": "plusCommision",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "showroom",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "totalMember",
						"type": "uint256"
					}
				],
				"name": "plusMember",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "safeRadius",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "scanRadius",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "tier",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "percent",
						"type": "uint256"
					}
				],
				"name": "setShowroomCommissionRate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "showroom",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "changedDays",
						"type": "uint256"
					}
				],
				"name": "setShowroomExpiryDate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "tier",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "radius",
						"type": "uint256"
					}
				],
				"name": "setShowroomSafeRadius",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "tier",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "radius",
						"type": "uint256"
					}
				],
				"name": "setShowroomScanRadius",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_treeCommission",
						"type": "address"
					}
				],
				"name": "setTreeCommissionContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "showroomCommissionRates",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "showroomNodes",
				"outputs": [
					{
						"internalType": "address",
						"name": "parent",
						"type": "address"
					},
					{
						"internalType": "enum Showroom.ShowroomTier",
						"name": "tier",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "totalBP",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalMember",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expiryDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "longtitude",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lattitude",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "treeCommissionContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawBPFromShowRoom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"addShowRoom(address,address,uint8,uint256,uint256)": {
					"details": "Thêm showroom mới vào hệ thống",
					"params": {
						"lattitude": "Vĩ độ của showroom",
						"longtitude": "Kinh độ của showroom",
						"newShowroom": "Địa chỉ showroom mới",
						"parent": "Địa chỉ showroom cha",
						"tier": "Cấp bậc showroom"
					}
				},
				"calculateDistance(uint256,uint256,uint256,uint256)": {
					"details": "Tính khoảng cách giữa hai điểm địa lý bằng công thức Haversine",
					"params": {
						"lat1": "Vĩ độ điểm 1",
						"lat2": "Vĩ độ điểm 2",
						"lon1": "Kinh độ điểm 1",
						"lon2": "Kinh độ điểm 2"
					},
					"returns": {
						"_0": "Khoảng cách tính bằng mét"
					}
				},
				"findNearestShowroom(uint256,uint256)": {
					"details": "Tìm showroom gần nhất với tọa độ người dùng",
					"params": {
						"userLat": "Vĩ độ của người dùng",
						"userLon": "Kinh độ của người dùng"
					},
					"returns": {
						"_0": "Địa chỉ showroom gần nhất"
					}
				},
				"getBalance()": {
					"details": "Kiểm tra số dư hiện tại của Showroom"
				},
				"getShowroomCommissionRate(uint8)": {
					"details": "Lấy tỷ lệ hoa hồng của một showroom theo cấp bậc",
					"params": {
						"tier": "Cấp bậc showroom"
					},
					"returns": {
						"_0": "Phần trăm hoa hồng hiện tại"
					}
				},
				"getShowroomSafeRadius(uint8)": {
					"details": "Lấy bán kính an toàn showroom hiện tại",
					"params": {
						"tier": "Cấp bậc showroom"
					},
					"returns": {
						"_0": "Bán kính an toàn (mét)"
					}
				},
				"getShowroomScanRadius(uint8)": {
					"details": "Lấy bán kính quét showroom hiện tại",
					"params": {
						"tier": "Cấp bậc showroom"
					},
					"returns": {
						"_0": "Bán kính quét (mét)"
					}
				},
				"getShowrooms(uint256,uint256)": {
					"details": "Lấy danh sách showroom theo phân trang",
					"params": {
						"pageSize": "Số lượng showroom trả về trong một lần",
						"startIndex": "Vị trí bắt đầu trong danh sách showroom"
					},
					"returns": {
						"_0": "Mảng các địa chỉ showroom từ vị trí startIndex với độ dài pageSize"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"setShowroomCommissionRate(uint8,uint256)": {
					"details": "Cập nhật tỷ lệ hoa hồng showroom theo cấp bậc",
					"params": {
						"percent": "Phần trăm hoa hồng mới",
						"tier": "Cấp bậc showroom"
					}
				},
				"setShowroomExpiryDate(address,uint256)": {
					"details": "Thiết lập ngày hết hạn mới cho showroom",
					"params": {
						"changedDays": "Số ngày thay đổi (cộng thêm hoặc giảm)",
						"showroom": "Địa chỉ showroom"
					}
				},
				"setShowroomSafeRadius(uint8,uint256)": {
					"details": "Cập nhật bán kính an toàn cho showroom",
					"params": {
						"radius": "Bán kính an toàn mới (mét)",
						"tier": "Cấp bậc showroom"
					}
				},
				"setShowroomScanRadius(uint8,uint256)": {
					"details": "Cập nhật bán kính quét showroom",
					"params": {
						"radius": "Bán kính mới (mét)",
						"tier": "Cấp bậc showroom"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/po5.sol": "Showroom"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 0
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
			"license": "MIT",
			"urls": [
				"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
				"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171",
				"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
			"license": "MIT",
			"urls": [
				"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
				"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
			"license": "MIT",
			"urls": [
				"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
				"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/Panic.sol": {
			"keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
			"license": "MIT",
			"urls": [
				"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
				"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c",
			"license": "MIT",
			"urls": [
				"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251",
				"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
			"license": "MIT",
			"urls": [
				"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
				"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeCast.sol": {
			"keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
			"license": "MIT",
			"urls": [
				"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
				"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
			]
		},
		"@openzeppelin/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
			"license": "MIT",
			"urls": [
				"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
				"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
			]
		},
		"forge-std/console.sol": {
			"keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
			"license": "MIT",
			"urls": [
				"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
				"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
			]
		},
		"src/po5.sol": {
			"keccak256": "0xd59afdf2fee997fa6498ec3919537aefbd1d2f86872b11aeeb09fce9f52de384",
			"license": "MIT",
			"urls": [
				"bzz-raw://32dc4bb3c9a62d105ed48a4080b8d8cb1396fa0f18785e02730e14cf872c4eeb",
				"dweb:/ipfs/QmXyyCRB1KnhQW9VjBT5NgvMQgh5cok61NQGguELAtgi1y"
			]
		}
	},
	"version": 1
}